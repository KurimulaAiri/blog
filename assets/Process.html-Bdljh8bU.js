import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,b as e,o as n}from"./app-Dtjl3kFR.js";const o={};function a(p,r){return n(),s("div",null,r[0]||(r[0]=[e('<h2 id="进程的概念" tabindex="-1"><a class="header-anchor" href="#进程的概念"><span>进程的概念</span></a></h2><p>程序：是<strong>静态的</strong>，就是个存放在磁盘里的可执行文件，就是一系列的指令集合</p><p>进程（ Process ）：是<strong>动态的</strong>，是程序的一次执行过程，同一个程序多次执行会对应多个进程</p><h2 id="进程的组成——进程控制块-pcb" tabindex="-1"><a class="header-anchor" href="#进程的组成——进程控制块-pcb"><span>进程的组成——进程控制块（ PCB ）</span></a></h2><p>当进程被创建时，操作系统会为该进程分配一个<strong>唯一的</strong>、<strong>不重复的</strong>“身份证号”-- <strong id="red-msg">PID</strong> （Process ID ，进程 ID ）</p><p>包括 PID 、进程状态、进程优先级、进程控制信息、进程资源信息等将保存在一个称为 PCB （ Process Control Block ） 的数据结构中</p><p>所有操作系统需要使用的，<strong id="red-msg">用于管理进程的信息，都保存在 PCB 中</strong></p><p>PCB 是进程存在的唯一标志，当进程被创建时，操作系统为其创建 PCB ，当进程结束时，会回收其 PCB</p><h2 id="进程的组成——程序段" tabindex="-1"><a class="header-anchor" href="#进程的组成——程序段"><span>进程的组成——程序段</span></a></h2><p>PCB 部分是操作系统使用的，用于管理进程的信息，而程序段和数据段是进程使用的</p><p>程序的运行过程：</p><ol><li><p>源代码编译完成的可执行文件存在硬盘中 （ Windows 中为 .exe 后缀的文件）</p></li><li><p>运行前将可执行文件加载到内存中，其中将开辟三个空间分别是 PCB 、程序段和数据段<br> 程序段包含所有的指令，数据段包含运行中所需要的数据（包括源代码中显式声明的变量），操作系统则会在 PCB 中创建对应的 PID 等信息并初始化</p></li><li><p>操作系统会为进程分配 CPU 时间片，进程会按照时间片的大小，轮流使用 CPU 执行指令</p></li></ol><p>……</p><p>一个<strong>进程实体（进程映像）<strong>由 PCB 、程序段、数据段组成：进程是</strong>动态的</strong>，进程实体（进程映像）是<strong>静态的</strong>。</p><p><strong id="red-msg">程序段、数据段、 PCB</strong> 三部分组成了<strong>进程实体</strong>（<strong>进程映像</strong>）<br> 引入进程实体的概念后，可把进程定义为：<br><strong>进程</strong>是进程实体的<strong id="blue-msg">运行过程</strong>，是系统进行<strong id="red-msg">资源分配</strong>和<strong id="red-msg">调度</strong>的一个独立单位</p><p><strong id="red-msg">注意：PCB是进程存在的唯一标志！</strong></p><h2 id="进程的特征" tabindex="-1"><a class="header-anchor" href="#进程的特征"><span>进程的特征</span></a></h2><p>程序是静态的，进程是动态的，相比于程序，进程拥有以下特征：</p><ul><li>动态性</li></ul><p>进程是程序的一次执行过程，是动态地产生、变化和消亡的</p><p><strong id="blue-msg">动态性是进程最基本的特征</strong></p><ul><li>并发性</li></ul><p>内存中有多个进程实体，各进程可并发执行</p><ul><li>独立性</li></ul><p>进程是能独立运行、<strong>独立获得资源、独立接受调度</strong>的基本单位</p><ul><li>异步性</li></ul><p>各进程按各自独立的、不可预知的速度向前推进操作系统要提供“进程同步机制”来解决异步问题</p><ul><li>结构性</li></ul><p>每个进程都会配置一个 PCB ，结构上看，进程由程序段、数据段、 PCB 组成</p><p>上述特征仅要求理解，不需要逐字记忆</p><h2 id="进程的状态" tabindex="-1"><a class="header-anchor" href="#进程的状态"><span>进程的状态</span></a></h2><h3 id="创建态" tabindex="-1"><a class="header-anchor" href="#创建态"><span>创建态</span></a></h3><p>进程正在被创建时，它的状态是“<strong id="blue-msg">创建态</strong>”，在这个阶段操作系统会为进程分配资源、初始化 PCB</p><h3 id="就绪态" tabindex="-1"><a class="header-anchor" href="#就绪态"><span>就绪态</span></a></h3><p>当进程创建完成后，便进入“<strong id="blue-msg">就绪态</strong>”处于就绪态的进程已经具备运行条件，但由于没有空闲 CPU ，就暂时不能运行</p><h3 id="运行态" tabindex="-1"><a class="header-anchor" href="#运行态"><span>运行态</span></a></h3><p>如果一个进程此时在 CPU 上运行，那么这个进程处于“<strong id="blue-msg">运行态</strong>”。CPU会执行该进程对应的程序（执行指令序列）</p><p>系统中可能会有很多个进程都处于就绪态，当 CPU 空闲时，操作系统就会选择一个就绪进程，让它上处理机运行</p><h3 id="阻塞态" tabindex="-1"><a class="header-anchor" href="#阻塞态"><span>阻塞态</span></a></h3><p>在进程运行的过程中，可能会请求<strong id="red-msg">等待某个事件的发生</strong>（如等待某种系统资源的分配，或者等待其他进程的响应），在这个事件发生之前，进程无法继续往下执行，此时操作系统会让这个进程下 CPU ，并让它进入“<strong id="blue-msg">阻塞态</strong>”</p><p>当 CPU 空闲时，又会选择另一个“<strong id="blue-msg">就绪态</strong>”进程上 CPU 运行</p><p>当<strong id="red-msg">等待的事件</strong>发生时，进程从“<strong id="blue-msg">阻塞态</strong>”回到“<strong id="blue-msg">就绪态</strong>”</p><h3 id="终止态" tabindex="-1"><a class="header-anchor" href="#终止态"><span>终止态</span></a></h3><p>一个进程可以执行 exit 系统调用，请求操作系统终止该进程此时该进程会进入“<strong id="blue-msg">终止态</strong>”，操作系统会让该进程下 CPU ，并回收内存空间等资源，最后还要回收该进程的 PCB</p><p>当终止进程的工作完成之后，这个进程就彻底消失了</p><h2 id="进程状态的转换" tabindex="-1"><a class="header-anchor" href="#进程状态的转换"><span>进程状态的转换</span></a></h2><figure><img src="//store.s1r0ko.top/svg/m/os/10/1_ver_1.svg" alt="进程的转换" tabindex="0" loading="lazy"><figcaption>进程的转换</figcaption></figure><ul><li><p>阻塞态→就绪态不是进程自身能控制的，是一种<strong>被动行为</strong></p></li><li><p>运行态→阻塞态是一种进程自身做出的<strong>主动行为</strong></p></li></ul><div class="hint-container warning"><p class="hint-container-title">注意</p><p><strong id="red-msg">不能由阻塞态直接转换为运行态，也不能由就绪态直接转换为阻塞态</strong>（因为进入阻塞态是进程主动请求的，必然需要进程在运行时才能发出这种请求）</p></div>',49)]))}const l=t(o,[["render",a]]),d=JSON.parse('{"path":"/art/learning/master/major/OperatingSystem/Process.html","title":"进程","lang":"zh-CN","frontmatter":{"title":"进程","date":"2025-08-18T00:00:00.000Z","icon":"gears","order":10,"category":["408","操作系统","考研"],"description":"进程的概念 程序：是静态的，就是个存放在磁盘里的可执行文件，就是一系列的指令集合 进程（ Process ）：是动态的，是程序的一次执行过程，同一个程序多次执行会对应多个进程 进程的组成——进程控制块（ PCB ） 当进程被创建时，操作系统会为该进程分配一个唯一的、不重复的“身份证号”-- PID （Process ID ，进程 ID ） 包括 PID...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"进程\\",\\"image\\":[\\"//store.s1r0ko.top/svg/m/os/10/1_ver_1.svg\\"],\\"datePublished\\":\\"2025-08-18T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-18T11:40:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"KurimulaAiri\\",\\"url\\":\\"https://github.com/KurimulaAiri\\"}]}"],["meta",{"property":"og:url","content":"https://md.s1r0ko.top/art/learning/master/major/OperatingSystem/Process.html"}],["meta",{"property":"og:site_name","content":"博客与资料库"}],["meta",{"property":"og:title","content":"进程"}],["meta",{"property":"og:description","content":"进程的概念 程序：是静态的，就是个存放在磁盘里的可执行文件，就是一系列的指令集合 进程（ Process ）：是动态的，是程序的一次执行过程，同一个程序多次执行会对应多个进程 进程的组成——进程控制块（ PCB ） 当进程被创建时，操作系统会为该进程分配一个唯一的、不重复的“身份证号”-- PID （Process ID ，进程 ID ） 包括 PID..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"//store.s1r0ko.top/svg/m/os/10/1_ver_1.svg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-18T11:40:24.000Z"}],["meta",{"property":"article:published_time","content":"2025-08-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-18T11:40:24.000Z"}]]},"git":{"createdTime":1755517224000,"updatedTime":1755517224000,"contributors":[{"name":"KurimulaAiri","username":"KurimulaAiri","email":"1095370199@qq.com","commits":1,"url":"https://github.com/KurimulaAiri"}]},"readingTime":{"minutes":4.47,"words":1340},"filePathRelative":"art/learning/master/major/OperatingSystem/Process.md","excerpt":"<h2>进程的概念</h2>\\n<p>程序：是<strong>静态的</strong>，就是个存放在磁盘里的可执行文件，就是一系列的指令集合</p>\\n<p>进程（ Process ）：是<strong>动态的</strong>，是程序的一次执行过程，同一个程序多次执行会对应多个进程</p>\\n<h2>进程的组成——进程控制块（ PCB ）</h2>\\n<p>当进程被创建时，操作系统会为该进程分配一个<strong>唯一的</strong>、<strong>不重复的</strong>“身份证号”-- <strong id=\\"red-msg\\">PID</strong> （Process ID ，进程 ID ）</p>","autoDesc":true}');export{l as comp,d as data};
