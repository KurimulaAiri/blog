import{_ as r,c as d,d as n,e as k,w as a,r as p,o as g,a as i,b as l}from"./app-4s1ossrk.js";const A={};function o(c,s){const h=p("Tabs");return g(),d("div",null,[s[22]||(s[22]=n('<h2 id="进程同步" tabindex="-1"><a class="header-anchor" href="#进程同步"><span>进程同步</span></a></h2><p>同步亦称直接制约关系，它是指为完成某种任务而建立的两个或多个进程，这些进程因为需要在某些位置上协调它们的工作次序而产生的制约关系。进程间的直接制约关系就是源于它们之间的相互合作</p><p>并发性带来了异步性，有时需要通过进程同步解决这种异步问题。有的进程之间需要相互配合地完成工作，各进程的工作推进需要遵循一定的<strong id="blue-msg">先后顺序</strong></p><h2 id="进程互斥" tabindex="-1"><a class="header-anchor" href="#进程互斥"><span>进程互斥</span></a></h2><p>进程的“并发”需要“共享”的支持。各个并发执行的进程不可避免的需要共享一些系统资源（比如内存，又比如打印机、摄像头这样的 I/O 设备）</p><h3 id="资源的两种共享方式" tabindex="-1"><a class="header-anchor" href="#资源的两种共享方式"><span>资源的两种共享方式</span></a></h3><ul><li><strong>互斥共享</strong></li></ul><p>系统中的某些资源，虽然可以提供给多个进程使用，但一个时间段内只允许一个进程访问该资源，其他进程必须等待，直到该进程使用完毕，其他进程才能访问该资源。</p><ul><li><strong>同时共享</strong></li></ul><p>系统中的某些资源，允许一个时间段内由多个进程“同时”对它们进行访问</p><h3 id="临界资源" tabindex="-1"><a class="header-anchor" href="#临界资源"><span>临界资源</span></a></h3><p>我们把一<strong id="blue-msg">个时间段内只允许一个进程使用的资源称为临界资源</strong>。许多物理设备（比如摄像头、打印机）都属于临界资源。此外还有许多变量、数据、内存缓冲区等都属于临界资源</p><p>对临界资源的访问，必须<strong id="blue-msg">互斥地进行</strong>。互斥，亦称<strong id="blue-msg">间接制约关系</strong>。<strong id="blue-msg">进程互斥</strong>指当一个进程访问某临界资源时，另一个想要访问该临界资源的进程必须等待。当前访问临界资源的进程访问结束，释放该资源之后，另一个进程才能去访问临界资源</p><h3 id="临界资源互斥访问的逻辑" tabindex="-1"><a class="header-anchor" href="#临界资源互斥访问的逻辑"><span>临界资源互斥访问的逻辑</span></a></h3><p>对临界资源的互斥访问，可以在逻辑上分为如下四个部分（代码层面）：</p><ul><li><strong id="red-msg">进入区</strong></li></ul><p>负责检查是否可进入临界区，若可进入，则应设置正在访问临界资源的标志（可理解为“上锁”），以阻止其他进程同时进入临界区</p><ul><li><strong id="red-msg">临界区</strong></li></ul><p>访问临界资源的那段代码</p><ul><li><strong id="red-msg">退出区</strong></li></ul><p>负责解除正在访问临界资源的标志（可理解为“解锁”），以允许其他进程进入临界区</p><ul><li><strong>其他（剩余）区</strong></li></ul><p>做其他处理</p><h3 id="临界资源互斥访问的原则" tabindex="-1"><a class="header-anchor" href="#临界资源互斥访问的原则"><span>临界资源互斥访问的原则</span></a></h3><p>为了实现对临界资源的互斥访问，同时保证系统整体性能，需要遵循以下原则：</p><ol><li>空闲让进。临界区空闲时，可以允许一个请求进入临界区的进程立即进入临界区</li><li>忙则等待。当已有进程进入临界区时，其他试图进入临界区的进程必须等待</li><li>有限等待。对请求访问的进程，应保证能在有限时间内进入临界区（保证不会饥饿）</li><li>让权等待。当进程不能进入临界区时，应立即释放处理机，防止进程忙等待</li></ol><h2 id="进程互斥的软件实现方法" tabindex="-1"><a class="header-anchor" href="#进程互斥的软件实现方法"><span>进程互斥的软件实现方法</span></a></h2><p>对于各软件算法的实现，需要从以下几个方面进行分析：</p><ol><li>理解各个算法的思想、原理</li><li>结合上面部分的“实现互斥的四个逻辑部分”，重点理解各算法在进入区、退出区都做了什么</li><li>分析各算法存在的缺陷（结合“实现互斥要遵循的四个原则”进行分析）</li></ol><h3 id="单标志法" tabindex="-1"><a class="header-anchor" href="#单标志法"><span>单标志法</span></a></h3><ul><li><strong>算法思想</strong></li></ul><p>两个进程在<strong id="blue-msg">访问完临界区后</strong>会把使用临界区的权限转交给另一个进程。也就是说<strong id="blue-msg">每个进程进入临界区的权限只能被另一个进程赋予</strong></p><ul><li><strong>算法实现</strong></li></ul><p>申明一个公共变量 turn ：</p><p><code>int turn = 0; // turn 表示当前允许进入临界区的进程号</code></p><p>现有两个进程 P0 、 P1 互斥访问一个设备</p>',36)),k(h,{data:[{id:"P0 进程"},{id:"P1 进程"}]},{title0:a(({value:t,isActive:e})=>s[0]||(s[0]=[l("P0 进程")])),title1:a(({value:t,isActive:e})=>s[1]||(s[1]=[l("P1 进程")])),tab0:a(({value:t,isActive:e})=>s[2]||(s[2]=[i("div",{class:"language-c line-numbers-mode","data-highlighter":"shiki","data-ext":"c",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-c"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"while"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"(turn "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"!="),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 0"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},");"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // 进入区 ①")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"critical section;"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // 临界区 ②")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"turn "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 1"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // 退出区 ③")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"remainder section;"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // 剩余区 ④")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])),tab1:a(({value:t,isActive:e})=>s[3]||(s[3]=[i("div",{class:"language-c line-numbers-mode","data-highlighter":"shiki","data-ext":"c",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-c"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"while"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"(turn "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"!="),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 1"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},");"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // 进入区 ⑤")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"critical section;"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // 临界区 ⑥")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"turn "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 0"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // 退出区 ⑦")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"remainder section;"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // 剩余区 ⑧")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])),_:1}),s[23]||(s[23]=n('<p>turn 的初值为 0 ，即刚开始只允许 0 号进程进入临界区。若 P1 先上处理机运行，则会一直卡在 ⑤ 。直到 P1 的时间片用完，发生调度，切换 P0 上处理机运行代码 ① 不会卡住 P0 ， P0 可以正常访问临界区，在 P0 访问临界区期间即时切换回 P1 ， P1 依然会卡在只有 P0 在退出区将 turn 改为 1 后， P1 才能进入临界区</p><p>因此，该算法可以实现“同一时刻最多只允许一个进程访问临界区”</p><ul><li><strong>算法缺点</strong></li></ul><p>只能按 P0 → P1 → P0 → P1 …… 这样轮流访问。这种必须“轮流访问”带来的问题是，如果此时允许进入临界区的进程是 P0 ，而 P0 一直不访问临界区，那么虽然此时临界区空闲，但是并不允许 P1 访问。因此，单标志法存在的主要问题是：违背“空闲让进”原则</p><h3 id="双标志先检查法" tabindex="-1"><a class="header-anchor" href="#双标志先检查法"><span>双标志先检查法</span></a></h3><ul><li><strong>算法思想</strong></li></ul><p>设置一个布尔型数组 <code>flag[]</code> ，数组中各个元素用来标记各进程想进入临界区的意愿，比如 <code>flag[0]= true</code> 意味着 0 号进程 P0 现在想要进入临界区。每个进程在进入临界区之前先检查当前有没有别的进程想进入临界区，如果没有，则把自身对应的标志 <code>flag[i]</code> 设为 <code>true</code> ，之后开始访问临界区</p><ul><li><strong>算法实现</strong></li></ul>',8)),k(h,{data:[{id:"公共区代码"},{id:"P0 进程"},{id:"P1 进程"}]},{title0:a(({value:t,isActive:e})=>s[4]||(s[4]=[l("公共区代码")])),title1:a(({value:t,isActive:e})=>s[5]||(s[5]=[l("P0 进程")])),title2:a(({value:t,isActive:e})=>s[6]||(s[6]=[l("P1 进程")])),tab0:a(({value:t,isActive:e})=>s[7]||(s[7]=[i("div",{class:"language-c line-numbers-mode","data-highlighter":"shiki","data-ext":"c",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-c"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"bool"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," flag"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"2"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"];")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"flag"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"0"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"] "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," false"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"flag"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"1"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"] "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," false"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])),tab1:a(({value:t,isActive:e})=>s[8]||(s[8]=[i("div",{class:"language-c line-numbers-mode","data-highlighter":"shiki","data-ext":"c",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-c"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"while"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"flag"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"1"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"]);"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // ①")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"flag"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"0"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"] "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," true"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // ②")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"critical section;"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // ③")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"flag"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"0"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"] "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," false"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // ④")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"remainder section;")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])),tab2:a(({value:t,isActive:e})=>s[9]||(s[9]=[i("div",{class:"language-c line-numbers-mode","data-highlighter":"shiki","data-ext":"c",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-c"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"while"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"flag"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"0"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"]);"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // ⑤ 如果此时 P0 想进入临界区，P1 就一直循环等待")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"flag"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"1"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"] "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," true"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // ⑥ 标记为 P1 进程想要进入临界区")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"critical section;"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // ⑦ 访问临界区")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"flag"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"1"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"] "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," false"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // ⑧ 访问完临界区，修改标记为 P1 不想使用临界区")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"remainder section;")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])),_:1}),s[24]||(s[24]=n('<ul><li><strong>算法缺点</strong></li></ul><p>若按照 ①⑤②⑥③⑦ …… 的顺序执行， P0 和 P1 将会同时访问临界区</p><p>因此，双标志先检查法的主要问题是：违反“忙则等待”原则</p><p>原因在于，进入区的“检查”和“上锁”两个处理不是一气呵成的。“检查”后，“上锁”前可能发生进程切换</p><h3 id="双标志后检查法" tabindex="-1"><a class="header-anchor" href="#双标志后检查法"><span>双标志后检查法</span></a></h3><ul><li><strong>算法思想</strong></li></ul><p>双标志先检查法的改版。前一个算法的问题是<strong id="blue-msg">先“检查”后“上锁”</strong>，但是这两个操作又无法一气呵成，因此导致了两个进程同时进入临界区的问题。因此，人们又想到先“上锁”后“检查的方法，来避免上述问题</p><ul><li><strong>算法实现</strong></li></ul>',8)),k(h,{data:[{id:"公共区代码"},{id:"P0 进程"},{id:"P1 进程"}]},{title0:a(({value:t,isActive:e})=>s[10]||(s[10]=[l("公共区代码")])),title1:a(({value:t,isActive:e})=>s[11]||(s[11]=[l("P0 进程")])),title2:a(({value:t,isActive:e})=>s[12]||(s[12]=[l("P1 进程")])),tab0:a(({value:t,isActive:e})=>s[13]||(s[13]=[i("div",{class:"language-c line-numbers-mode","data-highlighter":"shiki","data-ext":"c",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-c"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"bool"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," flag"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"2"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"];"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // 表示进入临界区意愿的数组")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"flag"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"0"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"] "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," false"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"flag"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"1"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"] "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," false"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // 刚开始设置为两个进程都不想进入临界区")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])),tab1:a(({value:t,isActive:e})=>s[14]||(s[14]=[i("div",{class:"language-c line-numbers-mode","data-highlighter":"shiki","data-ext":"c",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-c"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"flag"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"0"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"] "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," true"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // ①")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"while"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"flag"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"1"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"]);"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // ②")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"critical section;"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // ③")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"flag"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"0"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"] "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," false"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // ④")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"remainder section;")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])),tab2:a(({value:t,isActive:e})=>s[15]||(s[15]=[i("div",{class:"language-c line-numbers-mode","data-highlighter":"shiki","data-ext":"c",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-c"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"flag"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"1"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"] "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," true"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // ⑤ 标记为 P1 进程想要进入临界区")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"while"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"flag"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"0"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"]);"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // ⑥ 如果 P0 也想进入临界区，则 P1 循环等待")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"critical section;"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // ⑦ 访问临界区")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"flag"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"1"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"] "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," false"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // ⑧ 访问完临界区，修改标记为 P1 不想使用临界区")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"remainder section;")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])),_:1}),s[25]||(s[25]=n('<ul><li><strong>算法缺点</strong></li></ul><p>若按照 ①⑤②⑥ …… 的顺序执行， P0 和 P1 将都无法进入临界区</p><p>因此，双标志后检查法虽然<strong id="blue-msg">解决了“忙则等待”</strong>的问题，但是<strong id="blue-msg">又违背了“空闲让进”和“有限等待”</strong>原则，会因各进程都长期无法访问临界资源而<strong id="blue-msg">产生“饥饿”</strong>现象</p><h3 id="peterson-算法" tabindex="-1"><a class="header-anchor" href="#peterson-算法"><span>Peterson 算法</span></a></h3><ul><li><strong>算法思想</strong></li></ul><p>结合双标志法、单标志法的思想。如果双方都争着想进入临界区，那可以让进程尝试“孔融让梨”（谦让）。做一个有礼貌的进程</p><p>简而言之就是：</p><p>进入区：</p><ol><li>主动争取</li><li>主动谦让</li><li>检查对方是否也想使用，且最后一次是不是自己说了“客气话”</li></ol><ul><li><strong>算法实现</strong></li></ul>',10)),k(h,{data:[{id:"公共区代码"},{id:"P0 进程"},{id:"P1 进程"}]},{title0:a(({value:t,isActive:e})=>s[16]||(s[16]=[l("公共区代码")])),title1:a(({value:t,isActive:e})=>s[17]||(s[17]=[l("P0 进程")])),title2:a(({value:t,isActive:e})=>s[18]||(s[18]=[l("P1 进程")])),tab0:a(({value:t,isActive:e})=>s[19]||(s[19]=[i("div",{class:"language-c line-numbers-mode","data-highlighter":"shiki","data-ext":"c",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-c"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"bool"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," flag"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"2"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"];"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // 表示进入临界区意愿的数组，初始值都是 false")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"int"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," turn "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 0"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // turn 表示优先让哪个进程进入临界区")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])),tab1:a(({value:t,isActive:e})=>s[20]||(s[20]=[i("div",{class:"language-c line-numbers-mode","data-highlighter":"shiki","data-ext":"c",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-c"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"flag"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"0"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"] "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," true"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // ①")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"turn "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 1"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // ②")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"while"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"flag"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"1"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"] "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#56B6C2"}},"&&"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," turn "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"=="),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 1"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},");"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // ③")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"critical section;"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // ④")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"flag"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"0"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"] "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," false"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // ⑤")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"remainder section;")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])),tab2:a(({value:t,isActive:e})=>s[21]||(s[21]=[i("div",{class:"language-c line-numbers-mode","data-highlighter":"shiki","data-ext":"c",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-c"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"flag"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"1"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"] "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," true"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // ⑥ 表示自己想进入临界区")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"turn "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 0"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // ⑦ 可以优先让对方进入临界区")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"while"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"flag"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"0"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"] "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#56B6C2"}},"&&"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," turn "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"=="),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 0"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},");"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // ⑧ 对方想进，且最后一次是自己“让梨”，那自己就循环等待")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"critical section;"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // ⑨ ")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"flag"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"1"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"] "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," false"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // ⑩ 访问完临界区，表示自己已经不想访问临界区了")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"remainder section;")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])),_:1}),s[26]||(s[26]=n(`<ul><li><strong>算法缺点</strong></li></ul><p>Peterson 算法用软件方法解决了进程互斥问题，遵循了<strong id="blue-msg">空闲让进、忙则等待、有限等待三个原则</strong>，但是依然未遵循<strong id="blue-msg">让权等待</strong>的原则</p><p>Peterson 算法相较于之前三种软件解决方案来说，是最好的，但依然不够好</p><h2 id="进程互斥的硬件实现方法" tabindex="-1"><a class="header-anchor" href="#进程互斥的硬件实现方法"><span>进程互斥的硬件实现方法</span></a></h2><p>主要了解：</p><ol><li>理解各方法的原理了解各方法的优缺点</li><li>了解各方法的优缺点</li></ol><h3 id="中断屏蔽" tabindex="-1"><a class="header-anchor" href="#中断屏蔽"><span>中断屏蔽</span></a></h3><ul><li><strong>原理</strong></li></ul><p>利用“ 开/关 中断指令”实现（与原语的实现思想相同，即在某进程开始访问临界区到结束访问为止都不允许被中断，也就不能发生进程切换，因此也不可能发生两个同时访问临界区的情况）</p><ul><li><strong>具体实现</strong></li></ul><div class="language-pseudo line-numbers-mode" data-highlighter="shiki" data-ext="pseudo" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-pseudo"><span class="line"><span>前置代码;</span></span>
<span class="line"><span>关中断;</span></span>
<span class="line"><span>临界区;</span></span>
<span class="line"><span>开中断;</span></span>
<span class="line"><span>后续代码;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关中断后即不允许当前进程被中断，也必然不会发生进程切换</p><p>直到当前进程访问完临界区，再执行开中断指令，才有可能有别的进程上处理机并访问临界区</p><ul><li><p><strong>优缺点</strong></p><ul><li><p>优点</p><ul><li>实现简单、高效</li></ul></li><li><p>缺点</p><ul><li>不适用于多处理机；只适用于操作系统内核进程，不适用于用户进程（因为 开/关 中断指令只能运行在内核态，这组指令如果能让用户随意使用会很危险）</li></ul></li></ul></li></ul><h3 id="testandset-指令" tabindex="-1"><a class="header-anchor" href="#testandset-指令"><span>TestAndSet 指令</span></a></h3><ul><li><strong>原理</strong></li></ul><p>简称 TS 指令，也有地方称为 TestAndSetLock 指令，或 TSL 指令 TSL 指令是用硬件实现的，执行的过程不允许被中断，只能一气呵成。</p><ul><li><strong>具体实现</strong></li></ul><p><code>TestAndSet</code> 的逻辑可简化为以下伪代码（实际由硬件直接实现）：</p><div class="language-pseudo line-numbers-mode" data-highlighter="shiki" data-ext="pseudo" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-pseudo"><span class="line"><span>// 共享变量 lock 表示临界区状态：</span></span>
<span class="line"><span>// true 表示被占用，false 表示空闲</span></span>
<span class="line"><span>boolean lock = false;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 原子操作：TestAndSet</span></span>
<span class="line"><span>function TestAndSet(boolean *lock) {</span></span>
<span class="line"><span>    boolean oldValue = *lock;  // 读取当前值（测试）</span></span>
<span class="line"><span>    *lock = true;</span><span>              // 设置为新值（设置）</span></span>
<span class="line"><span>    return oldValue;           // 返回操作前的旧值</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实现互斥代码：</p><div class="language-pseudo line-numbers-mode" data-highlighter="shiki" data-ext="pseudo" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-pseudo"><span class="line"><span>// 进程进入临界区的逻辑</span></span>
<span class="line"><span>while (TestAndSet(&amp;lock)) {</span></span>
<span class="line"><span>    // 若返回 true，说明锁已被占用，循环等待（忙等）</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 临界区：访问共享资源</span></span>
<span class="line"><span>...</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 退出临界区时释放锁</span></span>
<span class="line"><span>lock = false;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若刚开始 lock 是 false，则 TSL 返回的 old 值为 false ， while 循环条件不满足，直接跳过循环，进入临界区。若刚开始 lock 是 true ，则执行 TLS 后 old 返回的值为 true ， while 循环条件满足，会一直循环，直到当前访问临界区的进程在退出区进行“解锁”。</p><p>相比软件实现方法， TSL 指令把“上锁”和“检查”操作用硬件的方式变成了一气呵成的原子操作</p><ul><li><p><strong>优缺点</strong></p><ul><li>优点</li></ul><p>实现简单，无需像软件实现方法那样严格检查是否会有逻辑漏洞：适用于多处理机环境</p><ul><li>缺点</li></ul><p>不满足“让权等待”原则，暂时无法进入临界区的进程会占用 CPU 并循环执行 TSL 指令，从而导致“忙等”</p></li></ul><h3 id="swap-指令" tabindex="-1"><a class="header-anchor" href="#swap-指令"><span>swap 指令</span></a></h3>`,26))])}const u=r(A,[["render",o]]),B=JSON.parse('{"path":"/art/learning/master/major/OperatingSystem/ProcessSynchronizationAndMutualExclusion.html","title":"进程同步与互斥","lang":"zh-CN","frontmatter":{"title":"进程同步与互斥","date":"2025-08-28T00:00:00.000Z","icon":"gears","order":14,"category":["408","操作系统","考研"],"description":"进程同步 同步亦称直接制约关系，它是指为完成某种任务而建立的两个或多个进程，这些进程因为需要在某些位置上协调它们的工作次序而产生的制约关系。进程间的直接制约关系就是源于它们之间的相互合作 并发性带来了异步性，有时需要通过进程同步解决这种异步问题。有的进程之间需要相互配合地完成工作，各进程的工作推进需要遵循一定的先后顺序 进程互斥 进程的“并发”需要“共...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"进程同步与互斥\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-08-28T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-30T10:51:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"KurimulaAiri\\",\\"url\\":\\"https://github.com/KurimulaAiri\\"}]}"],["meta",{"property":"og:url","content":"https://md.s1r0ko.top/art/learning/master/major/OperatingSystem/ProcessSynchronizationAndMutualExclusion.html"}],["meta",{"property":"og:site_name","content":"博客与资料库"}],["meta",{"property":"og:title","content":"进程同步与互斥"}],["meta",{"property":"og:description","content":"进程同步 同步亦称直接制约关系，它是指为完成某种任务而建立的两个或多个进程，这些进程因为需要在某些位置上协调它们的工作次序而产生的制约关系。进程间的直接制约关系就是源于它们之间的相互合作 并发性带来了异步性，有时需要通过进程同步解决这种异步问题。有的进程之间需要相互配合地完成工作，各进程的工作推进需要遵循一定的先后顺序 进程互斥 进程的“并发”需要“共..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-30T10:51:48.000Z"}],["meta",{"property":"article:published_time","content":"2025-08-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-30T10:51:48.000Z"}]]},"git":{"createdTime":1756373271000,"updatedTime":1756551108000,"contributors":[{"name":"KurimulaAiri","username":"KurimulaAiri","email":"1095370199@qq.com","commits":3,"url":"https://github.com/KurimulaAiri"}]},"readingTime":{"minutes":10.43,"words":3129},"filePathRelative":"art/learning/master/major/OperatingSystem/ProcessSynchronizationAndMutualExclusion.md","excerpt":"<h2>进程同步</h2>\\n<p>同步亦称直接制约关系，它是指为完成某种任务而建立的两个或多个进程，这些进程因为需要在某些位置上协调它们的工作次序而产生的制约关系。进程间的直接制约关系就是源于它们之间的相互合作</p>\\n<p>并发性带来了异步性，有时需要通过进程同步解决这种异步问题。有的进程之间需要相互配合地完成工作，各进程的工作推进需要遵循一定的<strong id=\\"blue-msg\\">先后顺序</strong></p>\\n<h2>进程互斥</h2>\\n<p>进程的“并发”需要“共享”的支持。各个并发执行的进程不可避免的需要共享一些系统资源（比如内存，又比如打印机、摄像头这样的 I/O 设备）</p>","autoDesc":true}');export{u as comp,B as data};
