import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,d as s,a as o,e as n,b as a,w as m,r as p,o as d}from"./app-DsdnwYUc.js";const c={};function h(g,t){const i=p("RouteLink"),e=p("MarkMap");return d(),l("div",null,[t[3]||(t[3]=s('<h2 id="ipv4-协议" tabindex="-1"><a class="header-anchor" href="#ipv4-协议"><span>IPv4 协议</span></a></h2><figure><img src="//store.s1r0ko.top/svg/m/cn/21/1_ver_1.svg" alt="各层协议之间关系" tabindex="0" loading="lazy"><figcaption>各层协议之间关系</figcaption></figure><div class="hint-container tip"><p class="hint-container-title">提示</p><p>各层协议之中， <strong id="red-msg">IP 协议（Internet Protocol）是互联网的核心</strong></p><p>ARP 协议用于查询同一网络中的 <code>&lt;主机 IP 地址, MAC 地址&gt;</code> 之间的映射关系</p><p>ICMP 协议用于网络层实体之间互相通知“异常事件”</p><p>IGMP 协议用于实现 IP 组播</p></div><h2 id="ip-数据报的格式" tabindex="-1"><a class="header-anchor" href="#ip-数据报的格式"><span>IP 数据报的格式</span></a></h2><figure><img src="//store.s1r0ko.top/svg/m/cn/21/2_ver_2.svg" alt="IP 数据报的格式" tabindex="0" loading="lazy"><figcaption>IP 数据报的格式</figcaption></figure><p>IP 数据报分为<strong>首部</strong>和<strong>数据部分</strong>两个部分</p><p>首部的结构如图所示</p><div class="hint-container info"><p class="hint-container-title">首部</p><p>首部分为固定部分和可变部分两个部分</p><p>固定部分长度为 <strong>20 字节</strong>，可变部分长度为 <strong>0 ~ 40 字节不等</strong></p><p>各部分详解：</p><ul><li>固定部分</li></ul><table><thead><tr><th>字段名</th><th>bit 位数</th><th>说明</th></tr></thead><tbody><tr><td>版本</td><td>4</td><td>用于区分网络层使用的 IP 协议版本，使用二进制表示 4 就是 IPv4 协议，使用二进制表示 6 就是 IPv6 协议</td></tr><tr><td>首部长度</td><td>4</td><td>用于指示 IP 数据报的首部长度，单位为 4B，例如：一个首部长度为 20 B 的 IP 数据报，这里的内容为二进制表示的 5 即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>5</mn><mo>×</mo><mn>4</mn><mi>B</mi><mo>=</mo><mn>20</mn><mi>B</mi></mrow><annotation encoding="application/x-tex">5 \\times 4B = 20B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">4</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">20</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span></td></tr><tr><td><s>区分服务</s></td><td>8</td><td><s>一般用不到， 408 不考</s></td></tr><tr><td>总长度</td><td>16</td><td>表示范围 0 ~ 65535 单位为 1B ，表示整个 IP 数据报的长度（首部 + 数据部分）</td></tr><tr><td>标识</td><td>16</td><td>由 IP 数据报的“源主机”生成，通常是自增序列，相当于一个数据报的识别码，数据报进行分片时，各分片的标识码必须相同</td></tr><tr><td>标志<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></td><td>3</td><td>三个 bit 分别为三个不同含义，最低位 MF 、 次低位 DF 、 最高位不需要了解意思，具体指代详见脚注 1，假设一个标志位为 001 则分别为最高位、 次低位 MF 、 最低位 DF</td></tr><tr><td>片偏移</td><td>13</td><td>表示该数据部分在“被分片”之前所处的位置，以 8 B 为单位</td></tr><tr><td>生存时间</td><td>8</td><td>代表该数据报在网络中可通过的路由器数的最大值。常记为 TTL<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup></td></tr><tr><td>协议</td><td>8</td><td>表示当前数据报正在为哪一个协议服务，如果是 TCP 该值设置为 6 、 如果是 UDP 该值设置为 17</td></tr><tr><td>首部校验和</td><td>16</td><td>经过的每个路由器都会对首部进行校验（不校验数据部分），如果该字段全设为 0 ，表示不用校验；校验和的计算方法与 UDP 相同</td></tr><tr><td>源地址</td><td>32</td><td>发送主机的 IP 地址</td></tr><tr><td>目的地址</td><td>32</td><td>接收主机的 IP 地址</td></tr></tbody></table><ul><li>可变部分</li></ul><table><thead><tr><th>字段名</th><th>bit 位数</th><th>说明</th></tr></thead><tbody><tr><td>填充</td><td>不定长</td><td>用于将 IP 数据报首部填充至 4B 的整数倍</td></tr></tbody></table></div><div class="hint-container info"><p class="hint-container-title">数据部分</p><p>数据部分长度范围：0 B ~ ( 65535 - 20 ) B ，扣掉的 20 B 为首部的最小长度，值不需要记</p><p>上面只是受到首部总长度字段的限制，也就是<strong>理论最大值</strong>，实际上 IP 数据报的长度通常会受到数据链路层的最短 / 长帧长的限制</p></div>',9)),o("p",null,[t[1]||(t[1]=a("一个数据链路层数据帧能承载的最大数据量称为最大传输单元（MTU）。如")),n(i,{to:"/art/learning/master/major/ComputerNetworks/LocalAreaNetwork.html#v2-%E6%A0%87%E5%87%86%E7%9A%84%E4%BB%A5%E5%A4%AA%E7%BD%91-mac-%E5%B8%A7"},{default:m(()=>t[0]||(t[0]=[a("以太网帧")])),_:1}),t[2]||(t[2]=a(" MTU = 1500 B"))]),t[4]||(t[4]=s('<p>如果一个 IP 数据报总长度超出了下一段链路的 MTU 就需要进行分片处理，依次传递这些分片给下一个节点</p><p>拆分时需要注意需要按 MTU 大小减去 IP 数据报的首部长度，得到的数据部分长度才是分片后的数据长度</p><div class="hint-container warning"><p class="hint-container-title">注意</p><ul><li><p>IP 数据报的“分片”可能在源主机或任何一个路由器中发生</p></li><li><p>只有目的主机才会对分片进行**“重组”**</p></li><li><p>各分片有可能以乱序到达目的主机</p></li><li><p>由于首部“片偏移”字段是以 <strong>8 B</strong> 为单位，因此，除<strong>最后一个分片</strong>外，其他每个分片的数据部分必须是 <strong>8 B</strong> 的整数倍</p></li><li><p><strong id="red-msg">当标志位 DF = 1 且下一段数据链路层数据帧长也无法满足这一份数据报时，路由器会选择丢弃该数据报，并且向源主机发送 ICMP 报文代表发生异常发送失败</strong></p></li><li><p>4 1 8，首部长度 4B 为单位，总长度 1B 为单位，片偏移 8B 为单位</p></li></ul></div><h2 id="ip-地址详解" tabindex="-1"><a class="header-anchor" href="#ip-地址详解"><span>IP 地址详解</span></a></h2><p>IP 地址是一个 32 位的二进制数，通常用点分十进制的形式表示，例如： 192.168.1.1</p><p>IP 地址资源由 ICANN（互联网名字与数字分配机构）进行分配（有偿分配）</p><p>ICANN 将 IP 地址分为以下几类（如图）：</p><figure><img src="//store.s1r0ko.top/svg/m/cn/21/3_ver_1.svg" alt="IP 地址分类" tabindex="0" loading="lazy"><figcaption>IP 地址分类</figcaption></figure><div class="hint-container info"><p class="hint-container-title">IP 地址</p><p>一个 IP 地址由两部分组成： 网络号 + 主机号</p><p>这两个号不定长，需要根据不同种类的 IP 地址而定</p><table><thead><tr><th>IP 地址类型</th><th>网络号长度</th><th>主机号长度</th><th>网络号前几位固定位</th><th>前八位表示的十进制数范围</th></tr></thead><tbody><tr><td>A 类</td><td>8 位</td><td>24 位</td><td>0</td><td>0 ~ 126</td></tr><tr><td>B 类</td><td>16 位</td><td>16 位</td><td>10</td><td>128 ~ 191</td></tr><tr><td>C 类</td><td>24 位</td><td>8 位</td><td>110</td><td>192 ~ 223</td></tr><tr><td>D 类</td><td>无</td><td>无</td><td>1110</td><td>224 ~ 239</td></tr><tr><td>E 类</td><td>无</td><td>无</td><td>1111</td><td>240 ~ 255</td></tr></tbody></table></div><div class="hint-container warning"><p class="hint-container-title">注意</p><ul><li><p>在早期互联网时代，每台主机，每个路由器接口被分配的 IP 地址都是全球唯一的</p></li><li><p>路由器和路由器连接的接口可以不分配 IP 地址，但路由器和其他节点连接的接口必须分配 IP 地址</p></li><li><p>从属于同一个网络的所有主机、路由器接口和 IP 地址“网络号”都相同</p></li><li><p>当一台新主机接入网络时，需要给他分配一个 IP 地址、并配置“默认网关”</p></li></ul></div><ul><li><p>单播地址：每一个 IP 对应一台主机</p></li><li><p>多播地址：每一个 IP 可以分配给一个主机群，向一个多播地址发送信息，就是向这一群主机发送信息</p></li></ul><h3 id="ip-转发示例" tabindex="-1"><a class="header-anchor" href="#ip-转发示例"><span>IP 转发示例</span></a></h3><p>假设有如下网络拓扑：</p><figure><img src="//store.s1r0ko.top/svg/m/cn/21/4_ver_2.svg" alt="IP 转发示例" tabindex="0" loading="lazy"><figcaption>IP 转发示例</figcaption></figure><ul><li><p>某学校被分配的 IP 网络号为 <code>166.1.0.0</code></p></li><li><p>某公司被分配的 IP 网络号为 <code>200.1.1.0</code></p></li></ul><p>现有一个 IP 数据报从 H1 发送到 H7，结构如下：</p><table><thead><tr><th>源 IP</th><th>目的 IP</th></tr></thead><tbody><tr><td>166.1.0.1</td><td>200.1.1.2</td></tr></tbody></table><p>过程大致如下：</p><ol><li><p>H1 完成数据报的组装后比较网络段和自身网络段是否处在一个局域网内，发现不是，所以发往网关（每个节点都会保存该局域网的网关 IP ），组帧需要目的 MAC 地址，通过 ARP 协议可以根据节点内部的网关 IP 获取到网关 MAC 地址，完成组帧后发往连接该节点的交换机</p></li><li><p>交换机获取到 MAC 帧后，会根据 MAC 转发到网关</p></li><li><p>网关收到多个 MAC 帧并完成组装 IP 数据报后，会根据目的 IP 地址查询转发表转发到对应端口</p></li><li><p>根据图片可知，此时学校网关有到达目的网段的路由，所以会将数据报发往该路由，发往公司的网关</p></li><li><p>公司路由器收到该数据报，确认是发往公司网段，此时通过组帧可以获取到目标 IP 主机的 MAC 地址，发送 MAC 帧发往公司的交换机</p></li><li><p>交换机确认 MAC 地址，发送到对应主机</p></li></ol><p>现有一个 IP 数据报从 H1 发送到 H6，结构如下：</p><table><thead><tr><th>源 IP</th><th>目的 IP</th></tr></thead><tbody><tr><td>166.1.0.1</td><td>166.1.4.4</td></tr></tbody></table><ol><li><p>H1 组装完数据报后，检查到目的 IP 和自己处于同一个网段中，于是通过 ARP 协议获取到目的 IP 主机的 MAC 地址，组帧后发往交换机</p></li><li><p>交换机收到数据报后，会根据 MAC 地址直接转发到 H6 或下一个交换机节点，直到到达目的主机</p></li><li><p>到达目的主机后，目的主机会先检查 MAC 地址是否是自己，确认后组装成 IP 数据报，再确认目的 IP 地址是否是自己，确认后转交给上一层处理</p></li></ol><h3 id="一些特殊用途的-ip-地址" tabindex="-1"><a class="header-anchor" href="#一些特殊用途的-ip-地址"><span>一些特殊用途的 IP 地址</span></a></h3><table><thead><tr><th>网络号</th><th>主机号</th><th>是否可以作为分组源地址</th><th>是否可以作为分组目的地址</th><th>含义</th></tr></thead><tbody><tr><td>Y</td><td>全 0</td><td><strong id="red-msg">否</strong></td><td><strong id="red-msg">否</strong></td><td>表示整个网络本身（仅能用于路由表、转发表）</td></tr><tr><td>Y</td><td>全 1</td><td><strong id="red-msg">否</strong></td><td><strong id="blue-msg">是</strong></td><td>向网络号为 Y 的网络广播 IP 分组</td></tr><tr><td>0</td><td>Y</td><td><strong id="blue-msg">是</strong></td><td><strong id="red-msg">否</strong></td><td>表示本网络中主机号为 Y 的主机</td></tr><tr><td>全 0</td><td>全 0</td><td><strong id="blue-msg">是</strong></td><td><strong id="red-msg">否</strong></td><td>本网络上的本主机（ DHCP 协议中会使用）</td></tr><tr><td>全 1</td><td>全 1</td><td><strong id="red-msg">否</strong></td><td><strong id="blue-msg">是</strong></td><td>向本网络广播 IP 分组</td></tr><tr><td>127</td><td>非全 0 或非全 1 的任何数</td><td><strong id="blue-msg">是</strong></td><td><strong id="blue-msg">是</strong></td><td>环回自检地址，表示一台主机本身，用于本地软件的环回测试</td></tr></tbody></table><div class="hint-container warning"><p class="hint-container-title">注意</p><ul><li><p>以上这些特殊地址不能指派给网络中的任何一台主机或路由器“私用”</p></li><li><p>主机号占 N bit ，那么这个网络中最多支持 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>N</mi></msup><mo>−</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">2^N - 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9247em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span> 个主机或路由器</p></li></ul></div><h2 id="子网划分和子网掩码" tabindex="-1"><a class="header-anchor" href="#子网划分和子网掩码"><span>子网划分和子网掩码</span></a></h2><p>假设以下情况：</p><ul><li><p>某学校被分配 B 类地址段 <code>166.1.0.0</code> ，并且使用<strong>子网划分技术</strong>分配两个子网</p></li><li><p>某公司被分配 C 类地址段 <code>200.1.1.0</code></p></li></ul><p>如图：</p><figure><img src="//store.s1r0ko.top/svg/m/cn/21/5_ver_1.svg" alt="子网划分" tabindex="0" loading="lazy"><figcaption>子网划分</figcaption></figure><p>子网划分通过将主机位前 N 位拿出来作为子网号，将主机位后 M 位拿出来作为主机号，来实现子网的划分</p><p>比如此图就是将主机位第一位作为子网位，因此可以分为两个子网</p><p>假设有以下几种情况，分析数据传输过程</p><ul><li><strong>H3 向 H6 发送数据报（同一子网内的两台主机）</strong></li></ul><p>H3 在发送数据之前，构造完 IP 数据报后，会将源 IP 地址和目的 IP 地址与子网掩码进行“与运算”，并对结果进行对比，发现网络前缀相同，说明 H6 和 H3 位于同一个子网下，随后可以直接生成 MAC 帧，找到 H6 的 MAC 地址，直接发送给交换机进行转发，到达 H6 后， H6 会将 MAC 组装成 IP 数据报，对比发现目的地址是自己，就接收数据</p><ul><li><strong>H1 向 H3 发送数据报（不同子网内的两台主机）</strong></li></ul><p>H1 构建数据报之后计算对比发现，源地址和目的地址不在一个子网内，会通过 ARP 协议获取到路由器的 MAC 地址，于是组装 MAC 帧发往路由器；路由器收到并完成组装数据报后，会对目的 IP 地址使用转发表进行计算，得到网络前缀后查询转发表，发现目的网络前缀在特定接口，于是发往对应接口，目的主机 MAC 地址通过 ARP 协议得到，到达交换机后，传输给 H3</p><ul><li><strong>H1 向 H7 发送数据报（采用子网划分技术的网络向传统网络发送）</strong></li></ul><p>对于有子网划分技术的路由器在存转发表时，对于连接传统路由器的接口，需要将**子网掩码项设置为“默认子网掩码”**不同类型的网络需要配置不同的子网掩码，具体在下面思维导图的表格中，这样才能正确地将数据报转发到传统网络中，这里 H1 向路由器发送数据报，路由器比对后发现由 B0 接口发出，然后到达公司路由器，该传统路由器识别出目的地址的网络类型 （ A / B / C ） 类，并将对应的网络号拆分出来，与交换表进行比对，确定为在本局域网内，通过 ARP 协议得到目的主机 MAC 地址，交由交换机，最后到达目的主机</p><ul><li><strong>H7 向 H1 发送数据报（传统网络向采用子网划分技术的网络发送）</strong></li></ul><p>H7 完成数据报的封装，对目的地址进行检查，发现不在自己的网络内，于是将数据报发往路由器，路由器根据其网络类型切分网络号，查询交换表后发往对应接口，到达学校路由器后，路由器使用子网掩码进行一一计算，得到对应的子网端口，并通过 ARP 获取目的主机的 MAC 地址发送给交换机最后到达目的地址</p><ul><li><strong>主机 H1 发往 Internet 的某个 IP 数据报如何传输？ （假设目的 IP 地址为 111.2.3.4）</strong></li></ul><p>H1 使用子网掩码计算自己和目的 IP 地址，发现不在同一个网络，于是将 IP 数据报通过 MAC 地址发往网关，网关收到数据报后，使用各子网掩码对目的地址进行计算，发现目的地址不在自己的路由表内，于是发往默认路由（0.0.0.0）也就是 B1 ，到达 ISP 后， ISP 路由器也进行计算比对发现也不在自己的路由表内，于是发往其他，也就是 A1 最后经过层层路由器转发会最终到达 Internet 的某一节点</p>',43)),n(e,{content:"eJyFVMtuE0kU3fsrSpqsSngmg4YNGkWCkUYaaRazmx1SAEsgCKAIIYRYdEjsuMF2N8EQQjovJSEmwS8Qit3tJv8S+la1V/kFTnV12mUCQnnYVfd9zqmbz+dzM9Ozt2am713MMXbt7u27s3/PFgqPCv8WHhRuX2R/4HZm+uH/N6/fv4HT5GROheR+YdR0ZficyktULomnlvDauB2/Vhe4qW1IF9/zLH62KzZcqr6Mwqrc25D1RuSXop4V9fbZP/8x8jq0ZonWp5NBheYW49ZnhArvfdQLhOeTc0jVTTZxZ4JdvXmfDZ9sR/0yOe0o2KVOiewqm7ilTcLepkVfrO1S+ILztCHnkHPkRU2y30XhinyzgFwsz9KgKPSins95Vixxj49WxOYhdbrxfKhnQmY2cf4KotC1zn0yKIu2kx2pUiT3QOXPZqK1ZdrZo44jV3uyaZ8M7BQaAyxMQG5NxcjghVhfIOc1VV4p2DL7yeCNanBH+nvah/Mc6GGY4k/kkYGHvs+hsXSEKSParaXR9k+iM7zGE6l2xceGWHBU0rF5kxGjXhN4GehFvWoCWmlYrAJZKjbYJBPlV+rL75yzY6uOX6bvo2A73mrofPHifuwfKA0ozzET9Y/EUlMXNNQmau/k5pzuETyCY9Wjotowf7HmRoQcW97QciHD+Gg13kLbtfjIla3lY2tNiaS1rGjm/Lu4TKF5UA7pkVuWex3kSt3sqhwgNVKAXyDv7AvPNm2gn9zKmDRQToD5cIm665Ffg1k/CB2m6qQaSyUz4oDePhHrEO3Im0rF4XyD83Qov2TqK9GzfjVQdRYD3tAP52CUnI7mD1BpguPDtqx3aaUharvkbHM+nA+HnhW/nQOpMmwBomwQBA2D13FrR1UsfsTRRF9pzWgZpUa5621RSZ3NdZK1S16DWvPoMg7fk/McatBi053o5wYJr7bgcoYwXf4c07F6jimWIGAnEl7Gwkm0pLsfV9Q4ytFgUwYbGTPsEvuNXcbfX0x2AzB0ir/4sAXiNQs/oGC0uNp98uuiqWBDWnPK092lmxlu9bERAToek5LvmW4hvNGLfszSfN2Aygc4nvVnjxNfBiNW+un/7O6SGgqf5y9c+HVS/Ri2y4YttRvWBA7DmnjAPgJZc68Fbd4A1PR4igGmBrB6cCywb1nGigAcWCDjdOulkm4tyEdn/0Y+mllhQ2u2rgR1Y2tRpQ91j5jqlBAL6Rt94oklubAlqBbkcl8BfqNAcg=="}),t[5]||(t[5]=s('<h3 id="主机发送数据报的过程" tabindex="-1"><a class="header-anchor" href="#主机发送数据报的过程"><span>主机发送数据报的过程</span></a></h3><ol><li><p>判断目的主机和本机是否属于同一个网络</p><ol><li><p>检查本机 IP 地址和目的 IP 地址的网络前缀是否相同（需要用本机配置的子网掩码进行“逐位与”运算）</p></li><li><p>若两个网络前缀相同，说明目的主机和本机属于同一个网络；若网络前缀不同，说明不属于同一个网络</p></li></ol></li><li><p>将 IP 数据报封装成 MAC 帧并发送到链路上</p><ol><li><p>如果目的主机与本机<strong>属于同一个网络</strong>，就通过 ARP 协议找到<strong>目的主机</strong>的 MAC 地址，再将 IP 数据报封装成帧，并将帧转发给<strong>目的主机</strong></p></li><li><p>如果目的主机与本机<strong>不属于同一个网络</strong>，就通过 ARP 协议找到<strong>默认网关</strong>的 MAC 地址，再将 IP 数据报封装成帧，并将帧转发给<strong>默认网关</strong></p></li></ol></li></ol><h3 id="路由器转发数据报的过程" tabindex="-1"><a class="header-anchor" href="#路由器转发数据报的过程"><span>路由器转发数据报的过程</span></a></h3><ol><li><p>从路由器某个接口收到一个 IP 数据报</p></li><li><p>对 IP 数据报首部进行校验，并从中找到<strong>目的 IP 地址</strong></p></li><li><p>查“转发表”</p><ol><li><p>转发表项包含&lt;目的网络号, 子网掩码, 转发接口&gt;</p></li><li><p>检查目的 IP 地址与每个表项是否匹配（将目的地址、子网掩码“逐位与”运算，若结果和某个目的网络号相同，说明匹配）</p></li><li><p>最后一定会和默认路由匹配（默认路由的子网掩码为 0.0.0.0 所有 IP 和其进行“逐位与”运算，结果都为 0.0.0.0），并转发出去</p></li></ol></li><li><p>转发</p><ol><li><p>根据查找转发表的结果，将 IP 数据报从对应的接口转发出去</p></li><li><p>如果匹配的转发接口和该 IP 数据报的入口相同，就不会再将该数据报转发回去</p></li></ol></li></ol><div class="hint-container tip"><p class="hint-container-title">提示</p><p>在一个局域网内有多个子网的情况下，可以使用多个路由器进行相互连接，可以降低路由器的负载，提升数据传输效率，只有<strong>一个</strong>路由器负责和外界互联网通信，这样的局域网称为一个自治系统（AS）</p></div><h3 id="cidr" tabindex="-1"><a class="header-anchor" href="#cidr"><span>CIDR</span></a></h3><p>CIDR （Classless Inter-Domain Routing），无类别域间路由选择协议也称无分类编址，是一种用于分配 IP 地址和路由信息的协议，它的作用是<strong>减少 IP 地址的浪费</strong>，并<strong>提高路由效率</strong></p><p>在上世纪 90 年代，对于每台主机一个全球唯一的 IP 地址的要求，导致 IP 地址资源告急，为了使 IP 地址资源得到更好的利用，CIDR 出现了</p><p>CIDR 表示法：&lt;IP 地址&gt;/&lt;前缀长度&gt;</p><p>前缀长度，代表 IP 地址的二进制表现形式下前 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 位为网络地址即其子网掩码为前 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 位为 1 后 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>24</mn><mo>−</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">24 - N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">24</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 位为 0</p><p>例如：192.168.1.0/24 表示 192.168.1.0 到 192.168.1.255 这 256 个 IP 地址，其中 24 位表示网络号，8 位表示主机号</p><p>假设此时有一个企业需要给 2000 台主机分配 IP 地址，直接分配一个 B 类地址会导致浪费过多，可以使用 CIDR 分配 21 bit 作为网络号（x.x.x.0/21），剩下 11 bit 作为主机号， 11 bit 的主机号可以分配 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>11</mn></msup></mrow><annotation encoding="application/x-tex">2^{11}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span></span></span></span></span></span></span></span> 个主机，也就是 2048 个主机，使网络分配更加精准</p><p>对于分配到 CIDR 地址块后可以再次将其划分为多个子网，这里有两种划分方式</p><ul><li><strong>定长子网划分</strong></li></ul><p>在一个 CIDR 地址块中，把长 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的主机号前 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> bit 抠出来作为定长子网号，这样就能划分出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">2^{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span> 个子网（每个子网包含的 IP 地址块大小相等，每个 IP 地址块大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mi>k</mi></mrow></msup></mrow><annotation encoding="application/x-tex">2^{n - k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span> ）</p><p>缺点：每个子网的 IP 地址块大小相同，不能根据需求灵活调整，会导致 IP 地址资源的浪费</p><figure><img src="https://store.s1r0ko.top/svg/m/cn/21/6_ver_1.svg" alt="变长子网划分示例" tabindex="0" loading="lazy"><figcaption>变长子网划分示例</figcaption></figure><ul><li><strong>变长子网划分</strong></li></ul><p>在一个 CIDR 地址块中，划分子网时，<strong>子网号长度不固定</strong>（每个子网包含的 IP 地址块大小不同）</p><div class="hint-container tip"><p class="hint-container-title">CIDR 地址块的子网划分技巧：可以利用类似“<a href="http://test.com/123.html" target="_blank" rel="noopener noreferrer">从根到叶构造二叉哈夫曼树</a>”的技巧</p><ul><li><p>原始 CIDR 地址块作为根节点（假设可以自由分配的主机号占 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">h</span></span></span></span> bit）</p></li><li><p>每个分支节点必须同时拥有左右孩子，左 0 右 1 （反过来也行）</p></li><li><p>每个叶子结点对应一个子网，根据根节点到达叶子结点的路径来分析子网对应的 IP 地址块范围</p></li><li><p>整棵树的高度不能超过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">h - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> （因为即便最小的子网也至少要保留 2 bit 主机号）</p></li></ul></div><p>例题：若将 101.200.16.0/20 划分为 5 个子网，则可能的最小子网的可分配 IP 地址数是（）</p><ul><li><p>A. 126</p></li><li><p><strong id="blue-msg">B. 254</strong></p></li><li><p>C. 510</p></li><li><p>D. 1022</p></li></ul><h2 id="路由聚合" tabindex="-1"><a class="header-anchor" href="#路由聚合"><span>路由聚合</span></a></h2><p>根据上面 CIDR 分配的子网得到的拓扑如下：</p><figure><img src="https://store.s1r0ko.top/svg/m/cn/21/7_ver_1.svg" alt="路由聚合示例" tabindex="0" loading="lazy"><figcaption>路由聚合示例</figcaption></figure><p>由图可见 R0 的路由转发表许多网段都具有相同的网络前缀，并且转发至同一接口，因此这里可以使用路由聚合来合并这几个路由表项，将它们合并为一个路由表项，即 101.200.16.0/20 指向 R0 的接口，这样就可以减少路由表项的数量，提高路由效率</p><figure><img src="https://store.s1r0ko.top/svg/m/cn/21/8_ver_1.svg" alt="路由聚合示例" tabindex="0" loading="lazy"><figcaption>路由聚合示例</figcaption></figure><p>对于一个路由转发表，如果几条路由表项的转发接口相同，部分网络前缀也相同，那么可以将这几条路由表项聚合为一条。这种地址的聚合称为<strong>路由聚合</strong>，也称为<strong>构成超网</strong></p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>标识位含义对照表：</p><table><thead><tr><th>标志位</th><th>值</th><th>含义</th></tr></thead><tbody><tr><td>MF</td><td>0</td><td>表示当前分片是 IP 数据报的最后一个分片</td></tr><tr><td>MF</td><td>1</td><td>表示当前分片不是 IP 数据报的最后一个分片，后面还有分片</td></tr><tr><td>DF</td><td>0</td><td>表示 IP 数据报可以进行分片</td></tr><tr><td>DF</td><td>1</td><td>表示 IP 数据报不能进行分片</td></tr></tbody></table><a href="#footnote-ref1" class="footnote-backref">↩︎</a></li><li id="footnote2" class="footnote-item"><p>生存时间 TTL ：</p><ul><li>TTL 的初始值通常由源主机设置</li><li>每经过一个路由器， TTL 就会减 1</li><li>当 TTL 减为 0 时，该数据报就会被丢弃，并且向源主机发送 ICMP 报文代表发生异常发送失败</li></ul><a href="#footnote-ref2" class="footnote-backref">↩︎</a></li></ol></section>',30))])}const I=r(c,[["render",h]]),v=JSON.parse('{"path":"/art/learning/master/major/ComputerNetworks/IPv4.html","title":"IPv4","lang":"zh-CN","frontmatter":{"title":"IPv4","date":"2025-07-23T00:00:00.000Z","icon":"earth-americas","order":21,"category":["408","计算机网络","考研"],"description":"IPv4 协议 各层协议之间关系各层协议之间关系 提示 各层协议之中， IP 协议（Internet Protocol）是互联网的核心 ARP 协议用于查询同一网络中的 <主机 IP 地址, MAC 地址> 之间的映射关系 ICMP 协议用于网络层实体之间互相通知“异常事件” IGMP 协议用于实现 IP 组播 IP 数据报的格式 IP 数据报的格式I...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"IPv4\\",\\"image\\":[\\"//store.s1r0ko.top/svg/m/cn/21/1_ver_1.svg\\",\\"//store.s1r0ko.top/svg/m/cn/21/2_ver_2.svg\\",\\"//store.s1r0ko.top/svg/m/cn/21/3_ver_1.svg\\",\\"//store.s1r0ko.top/svg/m/cn/21/4_ver_2.svg\\",\\"//store.s1r0ko.top/svg/m/cn/21/5_ver_1.svg\\",\\"https://store.s1r0ko.top/svg/m/cn/21/6_ver_1.svg\\",\\"https://store.s1r0ko.top/svg/m/cn/21/7_ver_1.svg\\",\\"https://store.s1r0ko.top/svg/m/cn/21/8_ver_1.svg\\"],\\"datePublished\\":\\"2025-07-23T00:00:00.000Z\\",\\"dateModified\\":\\"2025-07-28T12:21:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"KurimulaAiri\\",\\"url\\":\\"https://github.com/KurimulaAiri\\"}]}"],["meta",{"property":"og:url","content":"https://md.s1r0ko.top/art/learning/master/major/ComputerNetworks/IPv4.html"}],["meta",{"property":"og:site_name","content":"博客与资料库"}],["meta",{"property":"og:title","content":"IPv4"}],["meta",{"property":"og:description","content":"IPv4 协议 各层协议之间关系各层协议之间关系 提示 各层协议之中， IP 协议（Internet Protocol）是互联网的核心 ARP 协议用于查询同一网络中的 <主机 IP 地址, MAC 地址> 之间的映射关系 ICMP 协议用于网络层实体之间互相通知“异常事件” IGMP 协议用于实现 IP 组播 IP 数据报的格式 IP 数据报的格式I..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"//store.s1r0ko.top/svg/m/cn/21/1_ver_1.svg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-28T12:21:58.000Z"}],["meta",{"property":"article:published_time","content":"2025-07-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-28T12:21:58.000Z"}]]},"git":{"createdTime":1753276972000,"updatedTime":1753705318000,"contributors":[{"name":"KurimulaAiri","username":"KurimulaAiri","email":"1095370199@qq.com","commits":6,"url":"https://github.com/KurimulaAiri"}]},"readingTime":{"minutes":17.91,"words":5372},"filePathRelative":"art/learning/master/major/ComputerNetworks/IPv4.md","excerpt":"<h2>IPv4 协议</h2>\\n<figure><img src=\\"//store.s1r0ko.top/svg/m/cn/21/1_ver_1.svg\\" alt=\\"各层协议之间关系\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>各层协议之间关系</figcaption></figure>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p>各层协议之中， <strong id=\\"red-msg\\">IP 协议（Internet Protocol）是互联网的核心</strong></p>\\n<p>ARP 协议用于查询同一网络中的 <code>&lt;主机 IP 地址, MAC 地址&gt;</code> 之间的映射关系</p>\\n<p>ICMP 协议用于网络层实体之间互相通知“异常事件”</p>\\n<p>IGMP 协议用于实现 IP 组播</p>\\n</div>","autoDesc":true}');export{I as comp,v as data};
