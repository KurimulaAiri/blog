import{_ as e,c as m,b as s,d as r,e as n,f as a,w as i,r as o,o as d}from"./app-D9rJoEQg.js";const g={},u={class:"hint-container tip"};function h(P,t){const l=o("RouteLink"),p=o("MarkMap");return d(),m("div",null,[t[56]||(t[56]=s("h2",{id:"ipv4-协议",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#ipv4-协议"},[s("span",null,"IPv4 协议")])],-1)),t[57]||(t[57]=s("figure",null,[s("img",{src:"//store.s1r0ko.top/svg/m/cn/21/1_ver_1.svg",alt:"各层协议之间关系",tabindex:"0",loading:"lazy"}),s("figcaption",null,"各层协议之间关系")],-1)),s("div",u,[t[6]||(t[6]=s("p",{class:"hint-container-title"},"提示",-1)),t[7]||(t[7]=s("p",null,[a("各层协议之中， "),s("strong",{id:"red-msg"},"IP 协议（Internet Protocol）是互联网的核心")],-1)),s("p",null,[n(l,{to:"/art/learning/master/major/ComputerNetworks/IPv4.html#arp-%E5%8D%8F%E8%AE%AE"},{default:i(()=>t[0]||(t[0]=[a("ARP 协议")])),_:1,__:[0]}),t[1]||(t[1]=a("用于查询同一网络中的 ")),t[2]||(t[2]=s("code",null,"<主机 IP 地址, MAC 地址>",-1)),t[3]||(t[3]=a(" 之间的映射关系"))]),s("p",null,[n(l,{to:"/art/learning/master/major/ComputerNetworks/IPv4.html#icmp"},{default:i(()=>t[4]||(t[4]=[a("ICMP 协议")])),_:1,__:[4]}),t[5]||(t[5]=a("用于网络层实体之间互相通知“异常事件”"))]),t[8]||(t[8]=s("p",null,"IGMP 协议用于实现 IP 组播",-1))]),t[58]||(t[58]=r('<h2 id="ip-数据报的格式" tabindex="-1"><a class="header-anchor" href="#ip-数据报的格式"><span>IP 数据报的格式</span></a></h2><figure><img src="//store.s1r0ko.top/svg/m/cn/21/2_ver_2.svg" alt="IP 数据报的格式" tabindex="0" loading="lazy"><figcaption>IP 数据报的格式</figcaption></figure><p>IP 数据报分为<strong>首部</strong>和<strong>数据部分</strong>两个部分</p><p>首部的结构如图所示</p><div class="hint-container info"><p class="hint-container-title">首部</p><p>首部分为固定部分和可变部分两个部分</p><p>固定部分长度为 <strong>20 字节</strong>，可变部分长度为 <strong>0 ~ 40 字节不等</strong></p><p>各部分详解：</p><ul><li>固定部分</li></ul><table><thead><tr><th>字段名</th><th>bit 位数</th><th>说明</th></tr></thead><tbody><tr><td>版本</td><td>4</td><td>用于区分网络层使用的 IP 协议版本，使用二进制表示 4 就是 IPv4 协议，使用二进制表示 6 就是 IPv6 协议</td></tr><tr><td>首部长度</td><td>4</td><td>用于指示 IP 数据报的首部长度，单位为 4B，例如：一个首部长度为 20 B 的 IP 数据报，这里的内容为二进制表示的 5 即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>5</mn><mo>×</mo><mn>4</mn><mi>B</mi><mo>=</mo><mn>20</mn><mi>B</mi></mrow><annotation encoding="application/x-tex">5 \\times 4B = 20B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">4</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">20</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span></td></tr><tr><td><s>区分服务</s></td><td>8</td><td><s>一般用不到， 408 不考</s></td></tr><tr><td>总长度</td><td>16</td><td>表示范围 0 ~ 65535 单位为 1B ，表示整个 IP 数据报的长度（首部 + 数据部分）</td></tr><tr><td>标识</td><td>16</td><td>由 IP 数据报的“源主机”生成，通常是自增序列，相当于一个数据报的识别码，数据报进行分片时，各分片的标识码必须相同</td></tr><tr><td>标志<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></td><td>3</td><td>三个 bit 分别为三个不同含义，最低位 MF 、 次低位 DF 、 最高位不需要了解意思，具体指代详见脚注 1，假设一个标志位为 001 则分别为最高位、 次低位 MF 、 最低位 DF</td></tr><tr><td>片偏移</td><td>13</td><td>表示该数据部分在“被分片”之前所处的位置，以 8 B 为单位</td></tr><tr><td>生存时间</td><td>8</td><td>代表该数据报在网络中可通过的路由器数的最大值。常记为 TTL<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup></td></tr><tr><td>协议</td><td>8</td><td>表示当前数据报正在为哪一个协议服务，如果是 TCP 该值设置为 6 、 如果是 UDP 该值设置为 17</td></tr><tr><td>首部校验和</td><td>16</td><td>经过的每个路由器都会对首部进行校验（不校验数据部分），如果该字段全设为 0 ，表示不用校验；校验和的计算方法与 UDP 相同</td></tr><tr><td>源地址</td><td>32</td><td>发送主机的 IP 地址</td></tr><tr><td>目的地址</td><td>32</td><td>接收主机的 IP 地址</td></tr></tbody></table><ul><li>可变部分</li></ul><table><thead><tr><th>字段名</th><th>bit 位数</th><th>说明</th></tr></thead><tbody><tr><td>填充</td><td>不定长</td><td>用于将 IP 数据报首部填充至 4B 的整数倍</td></tr></tbody></table></div><div class="hint-container info"><p class="hint-container-title">数据部分</p><p>数据部分长度范围：0 B ~ ( 65535 - 20 ) B ，扣掉的 20 B 为首部的最小长度，值不需要记</p><p>上面只是受到首部总长度字段的限制，也就是<strong>理论最大值</strong>，实际上 IP 数据报的长度通常会受到数据链路层的最短 / 长帧长的限制</p></div>',6)),s("p",null,[t[10]||(t[10]=a("一个数据链路层数据帧能承载的最大数据量称为最大传输单元（MTU）。如")),n(l,{to:"/art/learning/master/major/ComputerNetworks/LocalAreaNetwork.html#v2-%E6%A0%87%E5%87%86%E7%9A%84%E4%BB%A5%E5%A4%AA%E7%BD%91-mac-%E5%B8%A7"},{default:i(()=>t[9]||(t[9]=[a("以太网帧")])),_:1,__:[9]}),t[11]||(t[11]=a(" MTU = 1500 B"))]),t[59]||(t[59]=r('<p>如果一个 IP 数据报总长度超出了下一段链路的 MTU 就需要进行分片处理，依次传递这些分片给下一个节点</p><p>拆分时需要注意需要按 MTU 大小减去 IP 数据报的首部长度，得到的数据部分长度才是分片后的数据长度</p><div class="hint-container warning"><p class="hint-container-title">注意</p><ul><li><p>IP 数据报的“分片”可能在源主机或任何一个路由器中发生</p></li><li><p>只有目的主机才会对分片进行 <strong>“重组”</strong></p></li><li><p>各分片有可能以乱序到达目的主机</p></li><li><p>由于首部“片偏移”字段是以 <strong>8 B</strong> 为单位，因此，除<strong>最后一个分片</strong>外，其他每个分片的数据部分必须是 <strong>8 B</strong> 的整数倍</p></li><li><p><strong id="red-msg">当标志位 DF = 1 且下一段数据链路层数据帧长也无法满足这一份数据报时，路由器会选择丢弃该数据报，并且向源主机发送 ICMP 报文代表发生异常发送失败</strong></p></li><li><p>4 1 8，首部长度 4B 为单位，总长度 1B 为单位，片偏移 8B 为单位</p></li></ul></div><h2 id="ip-地址详解" tabindex="-1"><a class="header-anchor" href="#ip-地址详解"><span>IP 地址详解</span></a></h2><p>IP 地址是一个 32 位的二进制数，通常用点分十进制的形式表示，例如： 192.168.1.1</p><p>IP 地址资源由 ICANN（互联网名字与数字分配机构）进行分配（有偿分配）</p><p>ICANN 将 IP 地址分为以下几类（如图）：</p><figure><img src="//store.s1r0ko.top/svg/m/cn/21/3_ver_1.svg" alt="IP 地址分类" tabindex="0" loading="lazy"><figcaption>IP 地址分类</figcaption></figure><div class="hint-container info"><p class="hint-container-title">IP 地址</p><p>一个 IP 地址由两部分组成： 网络号 + 主机号</p><p>这两个号不定长，需要根据不同种类的 IP 地址而定</p><table><thead><tr><th>IP 地址类型</th><th>网络号长度</th><th>主机号长度</th><th>网络号前几位固定位</th><th>前八位表示的十进制数范围</th></tr></thead><tbody><tr><td>A 类</td><td>8 位</td><td>24 位</td><td>0</td><td>0 ~ 126</td></tr><tr><td>B 类</td><td>16 位</td><td>16 位</td><td>10</td><td>128 ~ 191</td></tr><tr><td>C 类</td><td>24 位</td><td>8 位</td><td>110</td><td>192 ~ 223</td></tr><tr><td>D 类</td><td>无</td><td>无</td><td>1110</td><td>224 ~ 239</td></tr><tr><td>E 类</td><td>无</td><td>无</td><td>1111</td><td>240 ~ 255</td></tr></tbody></table></div><div class="hint-container warning"><p class="hint-container-title">注意</p><ul><li><p>在早期互联网时代，每台主机，每个路由器接口被分配的 IP 地址都是全球唯一的</p></li><li><p>路由器和路由器连接的接口可以不分配 IP 地址，但路由器和其他节点连接的接口必须分配 IP 地址</p></li><li><p>从属于同一个网络的所有主机、路由器接口和 IP 地址“网络号”都相同</p></li><li><p>当一台新主机接入网络时，需要给他分配一个 IP 地址、并配置“默认网关”</p></li></ul></div><ul><li><p>单播地址：每一个 IP 对应一台主机</p></li><li><p>多播地址：每一个 IP 可以分配给一个主机群，向一个多播地址发送信息，就是向这一群主机发送信息</p></li></ul><h3 id="ip-转发示例" tabindex="-1"><a class="header-anchor" href="#ip-转发示例"><span>IP 转发示例</span></a></h3><p>假设有如下网络拓扑：</p><figure><img src="//store.s1r0ko.top/svg/m/cn/21/4_ver_2.svg" alt="IP 转发示例" tabindex="0" loading="lazy"><figcaption>IP 转发示例</figcaption></figure><ul><li><p>某学校被分配的 IP 网络号为 <code>166.1.0.0</code></p></li><li><p>某公司被分配的 IP 网络号为 <code>200.1.1.0</code></p></li></ul><p>现有一个 IP 数据报从 H1 发送到 H7，结构如下：</p><table><thead><tr><th>源 IP</th><th>目的 IP</th></tr></thead><tbody><tr><td>166.1.0.1</td><td>200.1.1.2</td></tr></tbody></table><p>过程大致如下：</p>',18)),s("ol",null,[s("li",null,[s("p",null,[t[13]||(t[13]=a("H1 完成数据报的组装后比较网络段和自身网络段是否处在一个局域网内，发现不是，所以发往网关（每个节点都会保存该局域网的网关 IP ），组帧需要目的 MAC 地址，通过 ")),n(l,{to:"/art/learning/master/major/ComputerNetworks/IPv4.html#arp-%E5%8D%8F%E8%AE%AE"},{default:i(()=>t[12]||(t[12]=[a("ARP 协议")])),_:1,__:[12]}),t[14]||(t[14]=a("可以根据节点内部的网关 IP 获取到网关 MAC 地址，完成组帧后发往连接该节点的交换机"))])]),t[15]||(t[15]=s("li",null,[s("p",null,"交换机获取到 MAC 帧后，会根据 MAC 转发到网关")],-1)),t[16]||(t[16]=s("li",null,[s("p",null,"网关收到多个 MAC 帧并完成组装 IP 数据报后，会根据目的 IP 地址查询转发表转发到对应端口")],-1)),t[17]||(t[17]=s("li",null,[s("p",null,"根据图片可知，此时学校网关有到达目的网段的路由，所以会将数据报发往该路由，发往公司的网关")],-1)),t[18]||(t[18]=s("li",null,[s("p",null,"公司路由器收到该数据报，确认是发往公司网段，此时通过组帧可以获取到目标 IP 主机的 MAC 地址，发送 MAC 帧发往公司的交换机")],-1)),t[19]||(t[19]=s("li",null,[s("p",null,"交换机确认 MAC 地址，发送到对应主机")],-1))]),t[60]||(t[60]=s("p",null,"现有一个 IP 数据报从 H1 发送到 H6，结构如下：",-1)),t[61]||(t[61]=s("table",null,[s("thead",null,[s("tr",null,[s("th",null,"源 IP"),s("th",null,"目的 IP")])]),s("tbody",null,[s("tr",null,[s("td",null,"166.1.0.1"),s("td",null,"166.1.4.4")])])],-1)),s("ol",null,[s("li",null,[s("p",null,[t[21]||(t[21]=a("H1 组装完数据报后，检查到目的 IP 和自己处于同一个网段中，于是通过 ")),n(l,{to:"/art/learning/master/major/ComputerNetworks/IPv4.html#arp-%E5%8D%8F%E8%AE%AE"},{default:i(()=>t[20]||(t[20]=[a("ARP 协议")])),_:1,__:[20]}),t[22]||(t[22]=a("获取到目的 IP 主机的 MAC 地址，组帧后发往交换机"))])]),t[23]||(t[23]=s("li",null,[s("p",null,"交换机收到数据报后，会根据 MAC 地址直接转发到 H6 或下一个交换机节点，直到到达目的主机")],-1)),t[24]||(t[24]=s("li",null,[s("p",null,"到达目的主机后，目的主机会先检查 MAC 地址是否是自己，确认后组装成 IP 数据报，再确认目的 IP 地址是否是自己，确认后转交给上一层处理")],-1))]),t[62]||(t[62]=r('<h3 id="一些特殊用途的-ip-地址" tabindex="-1"><a class="header-anchor" href="#一些特殊用途的-ip-地址"><span>一些特殊用途的 IP 地址</span></a></h3><table><thead><tr><th>网络号</th><th>主机号</th><th>是否可以作为分组源地址</th><th>是否可以作为分组目的地址</th><th>含义</th></tr></thead><tbody><tr><td>Y</td><td>全 0</td><td><strong id="red-msg">否</strong></td><td><strong id="red-msg">否</strong></td><td>表示整个网络本身（仅能用于路由表、转发表）</td></tr><tr><td>Y</td><td>全 1</td><td><strong id="red-msg">否</strong></td><td><strong id="blue-msg">是</strong></td><td>向网络号为 Y 的网络广播 IP 分组</td></tr><tr><td>0</td><td>Y</td><td><strong id="blue-msg">是</strong></td><td><strong id="red-msg">否</strong></td><td>表示本网络中主机号为 Y 的主机</td></tr><tr><td>全 0</td><td>全 0</td><td><strong id="blue-msg">是</strong></td><td><strong id="red-msg">否</strong></td><td>本网络上的本主机（ DHCP 协议中会使用）</td></tr><tr><td>全 1</td><td>全 1</td><td><strong id="red-msg">否</strong></td><td><strong id="blue-msg">是</strong></td><td>向本网络广播 IP 分组</td></tr><tr><td>127</td><td>非全 0 或非全 1 的任何数</td><td><strong id="blue-msg">是</strong></td><td><strong id="blue-msg">是</strong></td><td>环回自检地址，表示一台主机本身，用于本地软件的环回测试</td></tr></tbody></table><div class="hint-container warning"><p class="hint-container-title">注意</p><ul><li><p>以上这些特殊地址不能指派给网络中的任何一台主机或路由器“私用”</p></li><li><p>主机号占 N bit ，那么这个网络中最多支持 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>N</mi></msup><mo>−</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">2^N - 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9247em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span> 个主机或路由器</p></li></ul></div><h2 id="子网划分和子网掩码" tabindex="-1"><a class="header-anchor" href="#子网划分和子网掩码"><span>子网划分和子网掩码</span></a></h2><p>假设以下情况：</p><ul><li><p>某学校被分配 B 类地址段 <code>166.1.0.0</code> ，并且使用<strong>子网划分技术</strong>分配两个子网</p></li><li><p>某公司被分配 C 类地址段 <code>200.1.1.0</code></p></li></ul><p>如图：</p><figure><img src="//store.s1r0ko.top/svg/m/cn/21/5_ver_2.svg" alt="子网划分" tabindex="0" loading="lazy"><figcaption>子网划分</figcaption></figure><p>子网划分通过将主机位前 N 位拿出来作为子网号，将主机位后 M 位拿出来作为主机号，来实现子网的划分</p><p>比如此图就是将主机位第一位作为子网位，因此可以分为两个子网</p><p>假设有以下几种情况，分析数据传输过程</p><ul><li><strong>H3 向 H6 发送数据报（同一子网内的两台主机）</strong></li></ul><p>H3 在发送数据之前，构造完 IP 数据报后，会将源 IP 地址和目的 IP 地址与子网掩码进行“与运算”，并对结果进行对比，发现网络前缀相同，说明 H6 和 H3 位于同一个子网下，随后可以直接生成 MAC 帧，找到 H6 的 MAC 地址，直接发送给交换机进行转发，到达 H6 后， H6 会将 MAC 组装成 IP 数据报，对比发现目的地址是自己，就接收数据</p><ul><li><strong>H1 向 H3 发送数据报（不同子网内的两台主机）</strong></li></ul>',14)),s("p",null,[t[27]||(t[27]=a("H1 构建数据报之后计算对比发现，源地址和目的地址不在一个子网内，会通过 ")),n(l,{to:"/art/learning/master/major/ComputerNetworks/IPv4.html#arp-%E5%8D%8F%E8%AE%AE"},{default:i(()=>t[25]||(t[25]=[a("ARP 协议")])),_:1,__:[25]}),t[28]||(t[28]=a("获取到路由器的 MAC 地址，于是组装 MAC 帧发往路由器；路由器收到并完成组装数据报后，会对目的 IP 地址使用转发表进行计算，得到网络前缀后查询转发表，发现目的网络前缀在特定接口，于是发往对应接口，目的主机 MAC 地址通过 ")),n(l,{to:"/art/learning/master/major/ComputerNetworks/IPv4.html#arp-%E5%8D%8F%E8%AE%AE"},{default:i(()=>t[26]||(t[26]=[a("ARP 协议")])),_:1,__:[26]}),t[29]||(t[29]=a("得到，到达交换机后，传输给 H3"))]),t[63]||(t[63]=s("ul",null,[s("li",null,[s("strong",null,"H1 向 H7 发送数据报（采用子网划分技术的网络向传统网络发送）")])],-1)),s("p",null,[t[31]||(t[31]=a("对于有子网划分技术的路由器在存转发表时，对于连接传统路由器的接口，需要将 ")),t[32]||(t[32]=s("strong",null,"子网掩码项设置为“默认子网掩码”",-1)),t[33]||(t[33]=a(" 不同类型的网络需要配置不同的子网掩码，具体在下面思维导图的表格中，这样才能正确地将数据报转发到传统网络中，这里 H1 向路由器发送数据报，路由器比对后发现由 B0 接口发出，然后到达公司路由器，该传统路由器识别出目的地址的网络类型 （ A / B / C ） 类，并将对应的网络号拆分出来，与交换表进行比对，确定为在本局域网内，通过 ")),n(l,{to:"/art/learning/master/major/ComputerNetworks/IPv4.html#arp-%E5%8D%8F%E8%AE%AE"},{default:i(()=>t[30]||(t[30]=[a("ARP 协议")])),_:1,__:[30]}),t[34]||(t[34]=a("得到目的主机 MAC 地址，交由交换机，最后到达目的主机"))]),t[64]||(t[64]=s("ul",null,[s("li",null,[s("strong",null,"H7 向 H1 发送数据报（传统网络向采用子网划分技术的网络发送）")])],-1)),t[65]||(t[65]=s("p",null,"H7 完成数据报的封装，对目的地址进行检查，发现不在自己的网络内，于是将数据报发往路由器，路由器根据其网络类型切分网络号，查询交换表后发往对应接口，到达学校路由器后，路由器使用子网掩码进行一一计算，得到对应的子网端口，并通过 ARP 获取目的主机的 MAC 地址发送给交换机最后到达目的地址",-1)),t[66]||(t[66]=s("ul",null,[s("li",null,[s("strong",null,"主机 H1 发往 Internet 的某个 IP 数据报如何传输？ （假设目的 IP 地址为 111.2.3.4）")])],-1)),t[67]||(t[67]=s("p",null,"H1 使用子网掩码计算自己和目的 IP 地址，发现不在同一个网络，于是将 IP 数据报通过 MAC 地址发往网关，网关收到数据报后，使用各子网掩码对目的地址进行计算，发现目的地址不在自己的路由表内，于是发往默认路由（0.0.0.0）也就是 B1 ，到达 ISP 后， ISP 路由器也进行计算比对发现也不在自己的路由表内，于是发往其他，也就是 A1 最后经过层层路由器转发会最终到达 Internet 的某一节点",-1)),n(p,{content:"eJyFVMtuE0kU3fsrSpqsSngmg4YNGkWCkUYaaRazmx1SAEsgCKAIIYRYdEjsuMF2N8EQQjovJSEmwS8Qit3tJv8S+la1V/kFTnV12mUCQnnYVfd9zqmbz+dzM9Ozt2am713MMXbt7u27s3/PFgqPCv8WHhRuX2R/4HZm+uH/N6/fv4HT5GROheR+YdR0ZficyktULomnlvDauB2/Vhe4qW1IF9/zLH62KzZcqr6Mwqrc25D1RuSXop4V9fbZP/8x8jq0ZonWp5NBheYW49ZnhArvfdQLhOeTc0jVTTZxZ4JdvXmfDZ9sR/0yOe0o2KVOiewqm7ilTcLepkVfrO1S+ILztCHnkHPkRU2y30XhinyzgFwsz9KgKPSins95Vixxj49WxOYhdbrxfKhnQmY2cf4KotC1zn0yKIu2kx2pUiT3QOXPZqK1ZdrZo44jV3uyaZ8M7BQaAyxMQG5NxcjghVhfIOc1VV4p2DL7yeCNanBH+nvah/Mc6GGY4k/kkYGHvs+hsXSEKSParaXR9k+iM7zGE6l2xceGWHBU0rF5kxGjXhN4GehFvWoCWmlYrAJZKjbYJBPlV+rL75yzY6uOX6bvo2A73mrofPHifuwfKA0ozzET9Y/EUlMXNNQmau/k5pzuETyCY9Wjotowf7HmRoQcW97QciHD+Gg13kLbtfjIla3lY2tNiaS1rGjm/Lu4TKF5UA7pkVuWex3kSt3sqhwgNVKAXyDv7AvPNm2gn9zKmDRQToD5cIm665Ffg1k/CB2m6qQaSyUz4oDePhHrEO3Im0rF4XyD83Qov2TqK9GzfjVQdRYD3tAP52CUnI7mD1BpguPDtqx3aaUharvkbHM+nA+HnhW/nQOpMmwBomwQBA2D13FrR1UsfsTRRF9pzWgZpUa5621RSZ3NdZK1S16DWvPoMg7fk/McatBi053o5wYJr7bgcoYwXf4c07F6jimWIGAnEl7Gwkm0pLsfV9Q4ytFgUwYbGTPsEvuNXcbfX0x2AzB0ir/4sAXiNQs/oGC0uNp98uuiqWBDWnPK092lmxlu9bERAToek5LvmW4hvNGLfszSfN2Aygc4nvVnjxNfBiNW+un/7O6SGgqf5y9c+HVS/Ri2y4YttRvWBA7DmnjAPgJZc68Fbd4A1PR4igGmBrB6cCywb1nGigAcWCDjdOulkm4tyEdn/0Y+mllhQ2u2rgR1Y2tRpQ91j5jqlBAL6Rt94oklubAlqBbkcl8BfqNAcg=="}),t[68]||(t[68]=s("h3",{id:"主机发送数据报的过程",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#主机发送数据报的过程"},[s("span",null,"主机发送数据报的过程")])],-1)),s("ol",null,[t[52]||(t[52]=s("li",null,[s("p",null,"判断目的主机和本机是否属于同一个网络"),s("ol",null,[s("li",null,[s("p",null,"检查本机 IP 地址和目的 IP 地址的网络前缀是否相同（需要用本机配置的子网掩码进行“逐位与”运算）")]),s("li",null,[s("p",null,"若两个网络前缀相同，说明目的主机和本机属于同一个网络；若网络前缀不同，说明不属于同一个网络")])])],-1)),s("li",null,[t[51]||(t[51]=s("p",null,"将 IP 数据报封装成 MAC 帧并发送到链路上",-1)),s("ol",null,[s("li",null,[s("p",null,[t[36]||(t[36]=a("如果目的主机与本机")),t[37]||(t[37]=s("strong",null,"属于同一个网络",-1)),t[38]||(t[38]=a("，就通过 ")),n(l,{to:"/art/learning/master/major/ComputerNetworks/IPv4.html#arp-%E5%8D%8F%E8%AE%AE"},{default:i(()=>t[35]||(t[35]=[a("ARP 协议")])),_:1,__:[35]}),t[39]||(t[39]=a("找到")),t[40]||(t[40]=s("strong",null,"目的主机",-1)),t[41]||(t[41]=a("的 MAC 地址，再将 IP 数据报封装成帧，并将帧转发给")),t[42]||(t[42]=s("strong",null,"目的主机",-1))])]),s("li",null,[s("p",null,[t[44]||(t[44]=a("如果目的主机与本机")),t[45]||(t[45]=s("strong",null,"不属于同一个网络",-1)),t[46]||(t[46]=a("，就通过 ")),n(l,{to:"/art/learning/master/major/ComputerNetworks/IPv4.html#arp-%E5%8D%8F%E8%AE%AE"},{default:i(()=>t[43]||(t[43]=[a("ARP 协议")])),_:1,__:[43]}),t[47]||(t[47]=a("找到")),t[48]||(t[48]=s("strong",null,"默认网关",-1)),t[49]||(t[49]=a("的 MAC 地址，再将 IP 数据报封装成帧，并将帧转发给")),t[50]||(t[50]=s("strong",null,"默认网关",-1))])])])])]),t[69]||(t[69]=r('<h3 id="路由器转发数据报的过程" tabindex="-1"><a class="header-anchor" href="#路由器转发数据报的过程"><span>路由器转发数据报的过程</span></a></h3><ol><li><p>从路由器某个接口收到一个 IP 数据报</p></li><li><p>对 IP 数据报首部进行校验，并从中找到<strong>目的 IP 地址</strong></p></li><li><p>查“转发表”</p><ol><li><p>转发表项包含&lt;目的网络号, 子网掩码, 转发接口&gt;</p></li><li><p>检查目的 IP 地址与每个表项是否匹配（将目的地址、子网掩码“逐位与”运算，若结果和某个目的网络号相同，说明匹配）</p></li><li><p>最后一定会和默认路由匹配（默认路由的子网掩码为 0.0.0.0 所有 IP 和其进行“逐位与”运算，结果都为 0.0.0.0），并转发出去</p></li></ol></li><li><p>转发</p><ol><li><p>根据查找转发表的结果，将 IP 数据报从对应的接口转发出去</p></li><li><p>如果匹配的转发接口和该 IP 数据报的入口相同，就不会再将该数据报转发回去</p></li></ol></li></ol><div class="hint-container tip"><p class="hint-container-title">提示</p><p>在一个局域网内有多个子网的情况下，可以使用多个路由器进行相互连接，可以降低路由器的负载，提升数据传输效率，只有<strong>一个</strong>路由器负责和外界互联网通信，这样的局域网称为一个自治系统（AS）</p></div><h3 id="cidr" tabindex="-1"><a class="header-anchor" href="#cidr"><span>CIDR</span></a></h3><p>CIDR （Classless Inter-Domain Routing），无类别域间路由选择协议也称无分类编址，是一种用于分配 IP 地址和路由信息的协议，它的作用是<strong>减少 IP 地址的浪费</strong>，并<strong>提高路由效率</strong></p><p>在上世纪 90 年代，对于每台主机一个全球唯一的 IP 地址的要求，导致 IP 地址资源告急，为了使 IP 地址资源得到更好的利用，CIDR 出现了</p><p>CIDR 表示法：&lt;IP 地址&gt;/&lt;前缀长度&gt;</p><p>前缀长度，代表 IP 地址的二进制表现形式下前 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 位为网络地址即其子网掩码为前 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 位为 1 后 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>24</mn><mo>−</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">24 - N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">24</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 位为 0</p><p>例如：192.168.1.0/24 表示 192.168.1.0 到 192.168.1.255 这 256 个 IP 地址，其中 24 位表示网络号，8 位表示主机号</p><p>假设此时有一个企业需要给 2000 台主机分配 IP 地址，直接分配一个 B 类地址会导致浪费过多，可以使用 CIDR 分配 21 bit 作为网络号（x.x.x.0/21），剩下 11 bit 作为主机号， 11 bit 的主机号可以分配 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>11</mn></msup></mrow><annotation encoding="application/x-tex">2^{11}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span></span></span></span></span></span></span></span> 个主机，也就是 2048 个主机，使网络分配更加精准</p><p>对于分配到 CIDR 地址块后可以再次将其划分为多个子网，这里有两种划分方式</p><ul><li><strong>定长子网划分</strong></li></ul><p>在一个 CIDR 地址块中，把长 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的主机号前 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> bit 抠出来作为定长子网号，这样就能划分出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">2^{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span> 个子网（每个子网包含的 IP 地址块大小相等，每个 IP 地址块大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mi>k</mi></mrow></msup></mrow><annotation encoding="application/x-tex">2^{n - k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span> ）</p><p>缺点：每个子网的 IP 地址块大小相同，不能根据需求灵活调整，会导致 IP 地址资源的浪费</p><figure><img src="//store.s1r0ko.top/svg/m/cn/21/6_ver_1.svg" alt="变长子网划分示例" tabindex="0" loading="lazy"><figcaption>变长子网划分示例</figcaption></figure><ul><li><strong>变长子网划分</strong></li></ul><p>在一个 CIDR 地址块中，划分子网时，<strong>子网号长度不固定</strong>（每个子网包含的 IP 地址块大小不同）</p><div class="hint-container tip"><p class="hint-container-title">CIDR 地址块的子网划分技巧：可以利用类似“<a href="http://test.com/123.html" target="_blank" rel="noopener noreferrer">从根到叶构造二叉哈夫曼树</a>”的技巧</p><ul><li><p>原始 CIDR 地址块作为根节点（假设可以自由分配的主机号占 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">h</span></span></span></span> bit）</p></li><li><p>每个分支节点必须同时拥有左右孩子，左 0 右 1 （反过来也行）</p></li><li><p>每个叶子结点对应一个子网，根据根节点到达叶子结点的路径来分析子网对应的 IP 地址块范围</p></li><li><p>整棵树的高度不能超过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">h - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> （因为即便最小的子网也至少要保留 2 bit 主机号）</p></li></ul></div><p>例题：若将 101.200.16.0/20 划分为 5 个子网，则可能的最小子网的可分配 IP 地址数是（）</p><ul><li><p>A. 126</p></li><li><p><strong id="blue-msg">B. 254</strong></p></li><li><p>C. 510</p></li><li><p>D. 1022</p></li></ul><h2 id="路由聚合" tabindex="-1"><a class="header-anchor" href="#路由聚合"><span>路由聚合</span></a></h2><p>根据上面 CIDR 分配的子网得到的拓扑如下：</p><figure><img src="//store.s1r0ko.top/svg/m/cn/21/7_ver_1.svg" alt="路由聚合示例" tabindex="0" loading="lazy"><figcaption>路由聚合示例</figcaption></figure><p>由图可见 R0 的路由转发表许多网段都具有相同的网络前缀，并且转发至同一接口，因此这里可以使用路由聚合来合并这几个路由表项，将它们合并为一个路由表项，即 101.200.16.0/20 指向 R0 的接口，这样就可以减少路由表项的数量，提高路由效率</p><figure><img src="//store.s1r0ko.top/svg/m/cn/21/8_ver_1.svg" alt="路由聚合示例" tabindex="0" loading="lazy"><figcaption>路由聚合示例</figcaption></figure><p>对于一个路由转发表，如果几条路由表项的<strong id="red-msg">转发接口相同</strong>，<strong id="red-msg">部分网络前缀也相同</strong>，那么可以将这几条路由表项聚合为一条。这种地址的聚合称为<strong>路由聚合</strong>，也称为<strong>构成超网</strong></p><p>路由聚合的优缺点：</p><ul><li><p>优点</p><ul><li><p>可以减小路由表的大小</p></li><li><p>提高了路由查找效率</p></li></ul></li><li><p>缺点</p><ul><li>可能会引入额外的无效地址，比如前缀和已分配 IP 地址相同，但是还未分配的 IP 地址；就有可能出现因意外导致填错的 IP 地址转发到未使用的 IP 地址，但是后续的路由器可能无法找到这个 IP 地址，于是会发往默认路由，也就是又返回给发送方，但是路由器对于发往来时路的数据报会直接丢弃，最后这个数据报就不会被任何节点接收，但通常不会有太大影响</li></ul></li></ul><p>现在交换机 S1 上单独拉一条线直接连接 R0 ，此时更新 R0 交换表，会出现两个具有共同网络前缀的网段，当传来一个前往 C2 的数据报时， R0 会遵循最长前缀匹配原则，即选择最长的前缀匹配项，即 128.14.32.128/28 不经过 R1 直接到达 S1</p><figure><img src="//store.s1r0ko.top/svg/m/cn/21/9_ver_1.svg" alt="路由聚合示例" tabindex="0" loading="lazy"><figcaption>路由聚合示例</figcaption></figure><h2 id="子网划分综合示例" tabindex="-1"><a class="header-anchor" href="#子网划分综合示例"><span>子网划分综合示例</span></a></h2><figure><img src="//store.s1r0ko.top/svg/m/cn/21/10_ver_2.svg" alt="子网划分综合示例" tabindex="0" loading="lazy"><figcaption>子网划分综合示例</figcaption></figure><p>通过这张图自行进行 IP 数据报的发送与接收训练</p><h2 id="网络地址转换-nat" tabindex="-1"><a class="header-anchor" href="#网络地址转换-nat"><span>网络地址转换 NAT</span></a></h2><p>NAT （Network Address Translation），网络地址转换，是一种将私有 IP 地址转换为公共 IP 地址的技术，也可以将公共 IP 地址转换为私有 IP 地址的技术</p><p>该小节重点</p>',36)),n(p,{content:"eJxdk1trE0EUx9/zKQb6akrTWi9BhCoIBZGCgq8NGlBsqAQRkSC5NDUJSRM1sTabEqNtDYnkQqvdNrvNh3HOzOQpX8EzO9lLlhB255z//M51g8FgIBaJv4pFXocDhDzb3tqOP4hHo++jD6Nvo1thch2tsci7py+fv3kRJitLSwF5JbBAuPmJjxrQGMBhUpi/WekHebT2BD3o+pVijTxZ3yDKPTVysJvFC9I0NfJEqhYIVHb4cOQXw+F+IBAkCYI+yHXxxXGJYga0M5LAlBIkjHmE3adlW5OX8BlaWrR+5IN8XV5dtf8z3T1bd3N5MXTDVuJhJeRT3reVt6Xyli2dnVwtigkJEih3IJsSPR1yu5NsiY8OYJiEZhNrxw5MMm1e3xGFNE9fTI0i1Us+Mb38LFJVFFO94ChVs1i/TPWOjzbJmFDu09Gx+NgRraLiiDFyNH9bFcVvZd/6CICjEq/K1DAprECcpNgw7Q0F1T7VcYwy5Zk32+aVjLJbM1eG+ZkffXVnruJPknXQdV4dkvXHG4SVK/RKk0F9NMQ5dzFFtHprp/qedNeKSKPjFtv/y/LJSSOJmVFzrCqZL1xuJhHnfQwMB20VgZoNlE6NOi4vlFWo2oCVeqxwjEjMSow12VRrc/8lU25KyOeaLodl7b3iWSFaCCyK3gDMmvfLgOwpPx3Jtd68434JYd7F7v+E8vk1T72u9e7mLFOr/LkEJYqO9hRLFQC5gYLIMRl1pp2x6gW7rLidwBrw7OBthnXJZVhIL4NrvbmGIkaZPCSnAXaPoZiFSpca38XVFximUQ2FpsiYuBbONTlZj4CdpGH8x1qV/9ZveH0="}),t[70]||(t[70]=r('<p>普通路由器和 NAT 路由器的区别：</p><ul><li><p>普通路由器转发数据报时不会改变源 IP 地址或目的 IP 地址</p></li><li><p>普通路由器仅包含网络层以及以下的功能</p></li></ul><h3 id="端口号的概念" tabindex="-1"><a class="header-anchor" href="#端口号的概念"><span>端口号的概念</span></a></h3><p>IP 地址指向某一台主机，而端口号指向该主机上的一个进程或应用程序</p><p>传输层实现了“端到端”（进程到进程）的通信。传输层在 TCP （或 UDP ）报文段的首部，指明源端口，目的端口</p><h3 id="nat-路由示例" tabindex="-1"><a class="header-anchor" href="#nat-路由示例"><span>NAT 路由示例</span></a></h3><p>假设有以下路由结构：</p><figure><img src="//store.s1r0ko.top/svg/m/cn/21/11_ver_1.svg" alt="NAT 路由示例" tabindex="0" loading="lazy"><figcaption>NAT 路由示例</figcaption></figure><p>其 NAT 表如图所示</p><p>思考以下过程：</p><ul><li><strong>C3 向 C2 微信发送文字信息</strong></li></ul><ol><li><p>假设 C3 向 C2 发送一条消息“你好”，此时这个文字信息是应用层数据，进入传输层假设使用 TCP 传输协议，那么传输层需要在在数据前添加一个头部，包含源端口和目的端口，此时源端口写明的是 9855 ，而目的端口号不能直接写对方微信所在主机的端口（ 6666 ），因为其是隐藏的；这里目的端口需要写对方微信进程所在的 NAT 路由器对外暴露的端口号即 4096，至于这里的端口是如何被 C3 所知不作过多讨论，总之有方法可以获取到对方的端口号，此时数据段就封装好了</p></li><li><p>到达网络层填写源 IP 地址为 C3 的 IP 地址（ 192.168.3.48 ），目的 IP 地址应该为 C2 的 IP 地址，但是 C2 是在 NAT 路由器上，所以需要填写的是 NAT 路由器的 IP 地址，即 66.211.88.55</p></li><li><p>完成网络层的封装后检查发现不属于本地局域网，封装填写默认网关 MAC 地址的帧，发送给默认网关</p></li><li><p>默认网关为 NAT 路由器，数据报到达 NAT 路由器后，会根据 NAT 表进行地址转换，此时根据源 IP 和端口（ 192.168.3.48:9855 ），查表得到对应的公网 IP 地址和端口（ 59.175.49.153:7788 ）并将原 IP 地址和端口修改成这个（此时再次确定了 NAT 需要传输层的功能，因为其需要修改传输层数据段的端口号）</p></li><li><p>经过互联网的层层转发，数据报到达 C2 的 NAT 路由器，根据 NAT 表进行地址转换，此时根据目的 IP 和端口（ 66.211.88.55:4096 ），查表得到对应的内网 IP 地址和端口（ 192.168.3.74:6666 ）并将原 IP 地址和端口修改成这个</p></li><li><p>根据自身的路由表查找到局域网对应 IP 的接口转发出去，最终到达 C2 ，C2 收数据报后，确认自己的 IP 和端口，并接收数据，拆解数据报到达应用层</p></li></ol><ul><li><strong>C2 向 C3 微信发送图片信息</strong></li></ul><ol><li>自行思考</li></ol><ul><li><strong>C5 向 Server 请求网页数据</strong></li></ul><ol><li><p>C5 封装数据报，设置源 IP 和端口：192.168.3.74:2111 和目的 IP 和端口：200.1.1.4:80 ，完成封装后发往默认网关</p></li><li><p>网关根据 NAT 表修改源 IP 地址和端口： 59.175.49.153:23333 发送到互联网上</p></li><li><p>数据直接由于 Server 所在的局域网没有使用 NAT 可以直接发送到对应主机的对应端口上，这里是交由 80 端口的 web 服务器进程对请求进行处理</p></li></ol><ul><li><strong>Server 向 C5 返回网页数据</strong></li></ul><ol><li>自行思考</li></ol><h2 id="arp-协议" tabindex="-1"><a class="header-anchor" href="#arp-协议"><span>ARP 协议</span></a></h2><p>ARP （Address Resolution Protocol），地址解析协议，用于在本地局域网中根据 IP 地址找到对应的 MAC 地址</p><p>对于 ARP 协议，封装的网络层数据单元称为 ARP 分组，到达数据链路层也将使用 MAC 帧进行传输，但是 MAC 帧的协议部分字段需要写为 0x0806 ，表示该帧数据部分为 ARP 的 PDU</p>',21)),n(p,{content:"eJx9U0FPGkEUvvMrJuG2CY22HhpvpkmTJm3S9GBrb7YlqanGxpim6WkBEajigmAVWAWLVGLq7hKMAsvKj+m+mdmTf6FvdnRBi+VAZt97873v+96bSCQSWppf+bQ0/3k6RMj75cXllacr0ei36PPol+jiNJnC6NL819cLH1Y/TpNHExMhcSUUJqBbsK/y4zo9yEFW44ZBZl69JJjCXOXAO7wUxzBRlBczT66rr/ppMvWYvFtYJVf9jKLg/ybdM5mTZ7buqXEvmYVSE1I92IrT3XNIr4tIw2HlNayEZJPlElA03Y4qsfEAmuV2bKr3eKoNVp7qGQy6nZM7mNhZRHoDqm2DVueJTchtISz/brJMCskI/EqNnh4pylg8MlShKKPd+YXJii1sgaVwVMZS7vwGLU+3GthICDQ1DMpP2ddLOKj6Hp4BjQA4YCLh/2EifL9m5Ois2AyFIphvCiGiA7RUqFaxD6wnFUU00EzXbiiKp5b5IOVPTQ6QVhvc/AlpdNSX/AwTfh8wu9Arol1jXBDX+aEw2D+yfgFO99BQwYIbFjg7IjWE2t4cAcE6t7vh7Z4hNt2rgbUGyTZr2+KyJEF3LJo1mF2gB7gDaTQzmPgfNSY/A6eEsXqGp07goiXYBtx8Np6u8l8xMMpUr9LKGf1h3RR4h10pBv1gzQ3/HCaTD/y0eUFbcVxFZq/5zq4nwcBygr8Ioek8jpJbsat+VcaCuCAQyMYi8sZfd5kYWiAyc6NwiTbNXI5FlCmxtYOSGKxx7vZLiHm7zVt8gxGpbIQ6WDFeT/JBRbbuHKOZ+M8qBuLJy26nh0+MTPo0e7kgSObEa72hiIs5KAXrC90B3T5FoOt1CJOHvmtQyOLG3Oea69TwVUs3wGoJNKeGs5HqvHgdkb39gmsXh47d0XiflbOB+lEK49Tfke6rvK179j+6sztD3X8Bz3fw+Q=="}),t[71]||(t[71]=r('<h3 id="arp-的工作流程" tabindex="-1"><a class="header-anchor" href="#arp-的工作流程"><span>ARP 的工作流程</span></a></h3><p>一般一台设备刚接入局域网时，他的 ARP 表是空的</p><p>假设现有网络拓扑如图：</p><figure><img src="//store.s1r0ko.top/svg/m/cn/21/12_ver_1.svg" alt="ARP 工作流程" tabindex="0" loading="lazy"><figcaption>ARP 工作流程</figcaption></figure><p>考虑以下流程：</p><ul><li><strong>H3 想向 Internet 发送 IP 数据报，分析 ARP 工作过程</strong></li></ul><ol><li><p>由于此时 H3 的 ARP 表为空，目的 IP 地址位于局域网之外，此时需要将数据报交由路由器处理，此时虽然拥有默认网关的 IP 地址，但是没有其对应发 MAC 地址，因此首先需要通过 ARP 协议获得路由器的 MAC 地址</p></li><li><p>H3 构造 ARP 请求分组，指明源 IP 地址和 MAC 地址以及目的 IP 地址，这里为</p></li></ol><table><thead><tr><th>源 IP 地址</th><th>源 MAC 地址</th><th>目的 IP 地址</th></tr></thead><tbody><tr><td>166.1.128.2</td><td>AA:BB:CC:DD:EE:33</td><td>166.1.128.1</td></tr></tbody></table><p>向下封装 MAC 帧，并将目的 MAC 地址设定为全 1 ，并进行发送</p><ol start="3"><li><p>通过广播，路由器接收到 ARP 请求分组，并分析确认接收方为自己，因此构造 ARP 响应分组，写入自身的 IP 地址和 MAC 地址，封装为目的 MAC 地址为 ……:33 的<strong>单播帧</strong>，并发送给 H3 ，并将 H3 的 IP 地址和 MAC 地址添加到 ARP 表中</p></li><li><p>H3 收到 ARP 响应分组，确认目的 IP 地址和 MAC 地址，将获得的 MAC 地址对应 IP 地址写入 ARP 表中，得到的结果如下图</p></li></ol><figure><img src="//store.s1r0ko.top/svg/m/cn/21/13_ver_3.svg" alt="ARP 拓扑" tabindex="0" loading="lazy"><figcaption>ARP 拓扑</figcaption></figure><ol start="5"><li>获取到默认网关的 MAC 地址后，就继续之前的工作，向 Internet 上的某节点发送数据报</li></ol><ul><li><strong>基于上一个情况，假设有一个 IP 数据报从 Internet 发送至 H3 ，分析 ARP 工作过程</strong></li></ul><ol><li>路由器接收到这个来自互联网的数据报，检查其目的地址根据<strong>路由转发表确认转发接口</strong>，并<strong>查询 ARP 表封装 MAC 帧</strong>发送到该接口上（由于上一步已经确认了 H3 的 MAC 地址并写入路由器 ARP 表，因此这里不需要进行 ARP 通信）</li></ol><ul><li><strong>H3 向 166.1.150.1 发送 IP 数据报，分析 ARP 工作过程</strong></li></ul><ol><li>自行分析</li></ol><h2 id="dhcp-协议" tabindex="-1"><a class="header-anchor" href="#dhcp-协议"><span>DHCP 协议</span></a></h2>',17)),n(p,{content:"eJztVF1PE0EUfe+vmESeNmn5EMSQ+GAgRhNNSIzxxZdGGyFCMA1R41PbWCjQLxSwlMVSobB+dLcNaJdtS/8L7p3ZPvEXvLNT2t0iIg++GNM0aWfuvefMOWfG6/V6pv3BZ9P+5yMeQh7PTM0EbwUDgdeBu4EXgakRMoir0/5XDyefzE6MkOGhPg9v8VwhsKjQUNjUq1Q2mtEEq6uQSFmqSsZuj45jAVbkDCp/pbsRaHzjC1fsLSLKWPaNWZfZinJSy7LqOsSyNFmAaIHVl1lV5rv2ZIECsTmEIHewWS7BZuhHKCwgm9WMpe5gD0T3cRGKafxNk5/YVtiBaNYbCATqRxqr9FI5AYt5WFeokocPSye1GBklveQ+OakteDzeFke7FqlBqUwzGl0r/ZIdNoMep/KGlazA0fsOQVZcEASdQ9vIHtSUEC8Rw62DnHWw3X1ExGhGtiFVOkWKMzXP0nOmHmL7VYg5wGh563Qi3ed6goyH/Q5GUdA19SK2N0NZ0HW2UnZuWRWNr6wrEK1Z4fhxSO6iehzabLOVFQQ39c+ws4fCiQEwF4WUZlYLVF6AnSzy7RpAhA+SJJYzGhgr3IxyROQAmWFOTCNJHoyNSxKWI5KtPl8g7IsGKZSBe3HtOlrcGXxme9hOndWYZ8qSQO33iVFYRnoeBSefTsz6g8GZlz0dftjYsjy1zJIluliga/OcBE0boO+ajTwNa1xTe5AwA70h926OtuTHEFiNTEuFVBrmDdAOHUbu5fC8VM5hl7UbpuVIKxMtAfn/rCRRI93pITdIn8/+YCrjbIPfFtfuwNCQz/HFqhgcNujbIq+iqyWaUPEkCCRJ6F7z3REaLZA4Toc7jvrdwU6h3Q1RhfSjoW1M0PcEkq35gK9jkVvzthdtzVEu82jjXM35u+BgJ66ISwoMhCS1FZakrjeAvxOOF+Ji1d3Zdav+1504C36xF+ea1zIosXrGoKuXuBSWVsHA/tmlyKsoNCZcvLYunf7huA9eIu5ConPVNPUkCuO4EhjtctWs1f7n9icmHMTj"}),t[72]||(t[72]=r('<p>DHCP （Dynamic Host Configuration Protocol）动态主机配置协议，常用于给主机动态分配 IP 地址、配置子网掩码、默认网关等网络相关参数</p><p>DHCP 是应用层协议，使用 UDP 协议进行通信</p><p>通常情况下，每个网络都会配置一台 DHCP 服务器</p><p>假设有以下网络拓扑：</p><figure><img src="//store.s1r0ko.top/svg/m/cn/21/14_ver_2.svg" alt="DHCP 工作流程" tabindex="0" loading="lazy"><figcaption>DHCP 工作流程</figcaption></figure><p>考虑以下情况：</p><ul><li><strong>假设 H3 是刚接入网络的主机，分析 DHCP 动态配置 IP 的过程</strong></li></ul><ol><li>H3 的 DHCP 客户端进程封装 DHCP 发现报文（DHCP 发现报文的内容是 H3 的 MAC 地址），并且按照如下格式封装并发送给全部主机</li></ol><figure><img src="//store.s1r0ko.top/svg/m/cn/21/15_ver_2.svg" alt="DHCP 发现报文" tabindex="0" loading="lazy"><figcaption>DHCP 发现报文</figcaption></figure><p>对于非 DHCP 服务器收到该报文，在传输层会进行丢弃，因为没有进程运行在 67 端口上</p><ol start="2"><li>DHCP 服务器收到 DHCP 发现报文后，会对发现报文中的内容进行解析，并且在自己管理的 IP 地址池中挑选一个暂时没有使用的 IP 地址，然后封装 DHCP 提供报文，并且按照如下格式封装并发送给 H3</li></ol><figure><img src="//store.s1r0ko.top/svg/m/cn/21/16_ver_3.svg" alt="DHCP 提供报文" tabindex="0" loading="lazy"><figcaption>DHCP 提供报文</figcaption></figure><ol start="3"><li>发送经过交换机的精准转发后会直接到达 H3 其他节点不会收到这个报文， H3 接收提供报文并检查处理后会封装新的<strong>请求报文</strong>然后以广播帧的形式发出去</li></ol><figure><img src="//store.s1r0ko.top/svg/m/cn/21/17_ver_2.svg" alt="DHCP 请求报文" tabindex="0" loading="lazy"><figcaption>DHCP 请求报文</figcaption></figure><div class="hint-container warning"><p class="hint-container-title">关于为什么要四步获取 IP 地址，而不是在第二步就直接使用该 IP 地址</p><p>一个局域网内可能存在多个 DHCP 服务器，在新主机请求 IP 地址时，会向所有 DHCP 服务器发送 DHCP 发现报文，每个 DHCP 服务器都会回复 DHCP 提供报文，新主机确认自己选择的 IP 地址后会<strong>广播</strong> DHCP 请求报文，确保所有 DHCP 服务器知道新主机选择的 IP 地址</p></div><ol start="4"><li>DHCP 服务器收到请求报文后，确认 IP 地址没有冲突，就会封装 DHCP 确认报文，并且按照如下格式封装并发送给 H3 ，此时由于 H3 获取 IP 地址的流程还没有完成，仍然是没有 IP 地址，所有该报文仍是以广播形式发出</li></ol><figure><img src="//store.s1r0ko.top/svg/m/cn/21/18_ver_3.svg" alt="DHCP 确认报文" tabindex="0" loading="lazy"><figcaption>DHCP 确认报文</figcaption></figure><ol start="5"><li>H3 收到确认报文后，会解析确认报文中的内容，并且将 IP 地址、子网掩码、默认网关配置到自己的网络接口上，完成 IP 信息的配置，如下图所示</li></ol><figure><img src="//store.s1r0ko.top/svg/m/cn/21/19_ver_1.svg" alt="DHCP 最终配置" tabindex="0" loading="lazy"><figcaption>DHCP 最终配置</figcaption></figure><h2 id="icmp" tabindex="-1"><a class="header-anchor" href="#icmp"><span>ICMP</span></a></h2><p>ICMP （Internet Control Message Protocol ）网际控制报文协议，用于在 IP 主机、路由器之间传递差错控制消息</p>',21)),n(p,{content:"eJyNVUtvGlcU3vtXXMlZIRE5VqtIlrpIqlaKlEpVZambbpCLYqumuJS0ThYWDwPDywMOAfMI2NgmxAmv2DHD8PovyZw7Myv+Qs6dOx6D5STMIGDm3vOd7zy+c+12+4LL4fnL5dhaWSBkzb3p9vzscTqfOx87/3NurpDv8K3Lsf37xp/e9RVy//ulBWaysEge/fjLr/i7SGw29pdAp6zIe+owrfZL0AlMBgljC6GxU5qNQNuvHYegVCeP8NXLNk02cUGRGjbbJ1+A7wSxpfRPteYbRerTkkyFrNZtqZkO5OuKvK8WJbSAdIy7QFMQ02qmohZ2odvUM3nYT8AgAJJEgyEIf5jmxjmwnZKkvfarnT6U4zYb28L2cHuOzreyNTuuqH1BDfQUKYnctNGIvSbETixeaKC1okhE9/lptjcZFD76SmqxyVyV2vDKx01BaKP1R98rMhkIuv8F2uOC7itMBlGOyG144F8BVd+2QDwGsctwGweYT8wzFdLaOK9HEvT9ES1FodUDOaONi2o9ji55IDR3qecutMuQNjaC+3YUyvAQHVqlwhAsP2R19TH5gSwRRQ6jf636FpcUqYqPZowMuh6HkzNtXJo/RnSJbmY6BLFBCKvRiOnq9S40CzwYCIdYwJlLfZjiWYDuewjV9WAducAgaAUPYgAB9VxTrx5cBf+VmGcI6LUsAnIElvSUQM9ffkIbIcuX6OGRfpaAiIwtdJ3uTA/EA55gVvJIEmlDKo25mC/7WERUE6Zbkc7M0httj4EqUpy+O0KqqBQQa4rkA7F9jSY12dLwHQKyhHVbMNpVBgVavFArDZPgzg6VU9jYNJYG4XJnBymS5aV7ywR6F5DaA7mi50+sunFh3OxHLnRDgjR+Ckdlg1oVEiFeKtoJ4IeVVEzTUBW9TQZ+wz8XndaqYkVm5QbFMvrQWl20ZJx+Wlt3k9+c/zx1/uvFtrJy94Dc+cOz8WTd6/B43P/fIQ/JCkEtQCo3GVSmofBbbWSmoLY2n00DPbwB9IADIdNp2VDh/JrT6oYL2ThcW/MS47LRRj0T7KBFtvFCswRmRw8c4xJEDtmcYYkz+Vuer0OY9jxHHOgXxcFGj8Gdidki8AwvRoCJxsCfWX2Olzk+WcuPQyAm9ZpgTulbhiWztobuItHipzQlg1T7ksVNkXH1GA2UhDBOzJvuLNzbhwNagpCnOZSEjKlEzfD3Fq4eHIJ4xnFRMKifb6Mzzc1MchlOCnS/wR9NsnMyZQmSUxaQGu3RZuwKSIAadlaB3Fu+f3eb3QTnC1m6a9xEbUSx0DxCSJ4rozEX3WwCjYNP6VW+yIk/s2hCEh5+eEKomTonu7Xx9xMCFRkHzqwEebGQzLSYrmoOzbK614ZYRQsOOY7X41hzetxPvU4POwPMZ0MfV+jTx9DtQJ8BGGjtjw=="}),t[73]||(t[73]=s("h3",{id:"icmp-报文结构",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#icmp-报文结构"},[s("span",null,"ICMP 报文结构")])],-1)),s("p",null,[t[54]||(t[54]=a("ICMP 报文在普通的 ")),n(l,{to:"/art/learning/master/major/ComputerNetworks/IPv4.html#ip-%E6%95%B0%E6%8D%AE%E6%8A%A5%E7%9A%84%E6%A0%BC%E5%BC%8F"},{default:i(()=>t[53]||(t[53]=[a("IP 数据报")])),_:1,__:[53]}),t[55]||(t[55]=a("的数据部分有所不同"))]),t[74]||(t[74]=r('<figure><img src="//store.s1r0ko.top/svg/m/cn/21/20_ver_1.svg" alt="ICMP 报文结构" tabindex="0" loading="lazy"><figcaption>ICMP 报文结构</figcaption></figure><div class="hint-container warning"><p class="hint-container-title">注意</p><p>这里需要注意的是， IP 数据报首部的协议字段为 1 ，表示 ICMP 协议</p></div><h3 id="icmp-差错报告报文" tabindex="-1"><a class="header-anchor" href="#icmp-差错报告报文"><span>ICMP 差错报告报文</span></a></h3><ul><li><p><strong>终点不可达</strong></p><ul><li>IP 地址不存在</li></ul><p>本地主机发送了一个 IP 数据报，目的地址在目标局域网内并不存在，该数据报经目的局域网的路由器转发时，路由器发现该地址不存在，就会构造一个 ICMP 差错报告报文，通知发送方该地址不存在， ICMP 数据报类型为“终点不可达”， ICMP 数据报内容为该 IP 地址不可达，字段包含不可达 IP 地址</p><ul><li>端口不存在</li></ul><p>本地主机发送了一个 IP 数据报，目标主机存在，数据报可以到达目标主机，但是目的主机的传输层检查发现没有对应端口的进程，于是构造一个 ICMP 差错报告报文，通知发送方该端口不存在， ICMP 数据报类型为“终点不可达”， ICMP 数据报内容为不存在端口为 xxxx 的进程</p></li><li><p><strong>时间超过</strong></p><ul><li>TTL 为到达目的主机时已经为 0</li></ul><p>本地主机发送数据报前设置的 TTL 较少，导致到达目的主机路由器前 TTL 就已经耗尽，于是在 TTL 刚好到 0 的路由器接收到该数据报，就会丢弃该数据报，并且构造一个 ICMP 差错报告报文，通知发送方该数据报的 TTL 已耗尽， ICMP 数据报类型为“时间超过”， ICMP 数据报内容为该数据报的 TTL 已耗尽</p><ul><li>IP 数据报分片为按时全部抵达</li></ul><p>本地主机发送了一个 IP 数据报，数据报长度过长，超过了 MTU ，于是该数据报就会被分片，并分别转发出去，由于每个分片的路由路径可能不同，到达目的主机的时间也有所不同，最终在规定时间内，仍有部分分片未到达目的主机，于是构造 ICMP 数据报，类型为“时间超过”，内容为由于分片超时未收齐，已将全部已收到分片丢弃</p></li><li><p><strong>参数问题</strong></p></li></ul><p>IP 数据报在传输过程中，某台路由器检测到 IP 数据报的首部参数有问题，比如 IP 数据报的长度字段与实际数据长度不一致，或者 IP 数据报的校验和字段与计算结果不一致，就会丢弃该数据报，并且构造一个 ICMP 数据报，类型为“参数问题”，内容为 IP 数据报的首部参数有问题</p><ul><li><strong>改变路由（重定向）</strong></li></ul><p>本地主机发送了一个 IP 数据报，通常这个数据报会发送给默认路由，但是该路由表中，该目的地址的下一跳路由不是最优路由，于是该路由器就会构造一个 ICMP 数据报，类型为“改变路由”，内容为该目的地址的下一跳路由不是最优路由，字段包含该目的地址和最优路由的下一跳 IP 地址，并且将该 ICMP 数据报发送给发送方，发送方收到该数据报后，就会更新路由表，将该目的地址的下一跳路由更新为最优路由，并且重新发送数据报</p><ul><li><strong><s>源点抑制</s></strong></li></ul><p>当某个网络节点中的路由器检测到网络拥塞时，会随机丢弃其中的部分数据报，并向这些数据报的源主机发送 ICMP 数据报，类型为“源点抑制”</p><h3 id="icmp-询问报文" tabindex="-1"><a class="header-anchor" href="#icmp-询问报文"><span>ICMP 询问报文</span></a></h3><ul><li><strong>回送请求、回送回答</strong></li></ul><p>假设主机 A 需要探测去往主机 B 的网络通路是否通畅，则可以构造一个 ICMP 报文，类型为“回送请求”，通过网络层层转发后到达主机 B ，主机 B 收到该 ICMP 报文后，就会构造一个 ICMP 报文，类型为“回送回答”，并将该 ICMP 报文发送给主机 A ，主机 A 收到该 ICMP 报文后，就可以知道到达主机的通路 B 是畅通的</p><p>例如： ping 命令</p><ul><li><strong>时间戳请求、时间戳回答</strong></li></ul><p>和回送请求、回答的过程类似，传递的信息有所不同，发送方在 ICMP 报文的时间戳字段中填写当前时间，接收方在 ICMP 报文的时间戳字段中填写接收时间和发送回复时间</p><p>例如： tracerouter （ tracert ）命令</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>标识位含义对照表：</p><table><thead><tr><th>标志位</th><th>值</th><th>含义</th></tr></thead><tbody><tr><td>MF</td><td>0</td><td>表示当前分片是 IP 数据报的最后一个分片</td></tr><tr><td>MF</td><td>1</td><td>表示当前分片不是 IP 数据报的最后一个分片，后面还有分片</td></tr><tr><td>DF</td><td>0</td><td>表示 IP 数据报可以进行分片</td></tr><tr><td>DF</td><td>1</td><td>表示 IP 数据报不能进行分片</td></tr></tbody></table><a href="#footnote-ref1" class="footnote-backref">↩︎</a></li><li id="footnote2" class="footnote-item"><p>生存时间 TTL ：</p><ul><li>TTL 的初始值通常由源主机设置</li><li>每经过一个路由器， TTL 就会减 1</li><li>当 TTL 减为 0 时，该数据报就会被丢弃，并且向源主机发送 ICMP 报文代表发生异常发送失败</li></ul><a href="#footnote-ref2" class="footnote-backref">↩︎</a></li></ol></section>',18))])}const c=e(g,[["render",h]]),v=JSON.parse('{"path":"/art/learning/master/major/ComputerNetworks/IPv4.html","title":"IPv4","lang":"zh-CN","frontmatter":{"title":"IPv4","date":"2025-07-24T00:00:00.000Z","icon":"earth-americas","order":21,"category":["408","计算机网络","考研"],"description":"IPv4 协议 各层协议之间关系各层协议之间关系 提示 各层协议之中， IP 协议（Internet Protocol）是互联网的核心 用于查询同一网络中的 <主机 IP 地址, MAC 地址> 之间的映射关系 用于网络层实体之间互相通知“异常事件” IGMP 协议用于实现 IP 组播 IP 数据报的格式 IP 数据报的格式IP 数据报的格式 IP 数...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"IPv4\\",\\"image\\":[\\"//store.s1r0ko.top/svg/m/cn/21/1_ver_1.svg\\",\\"//store.s1r0ko.top/svg/m/cn/21/2_ver_2.svg\\",\\"//store.s1r0ko.top/svg/m/cn/21/3_ver_1.svg\\",\\"//store.s1r0ko.top/svg/m/cn/21/4_ver_2.svg\\",\\"//store.s1r0ko.top/svg/m/cn/21/5_ver_2.svg\\",\\"//store.s1r0ko.top/svg/m/cn/21/6_ver_1.svg\\",\\"//store.s1r0ko.top/svg/m/cn/21/7_ver_1.svg\\",\\"//store.s1r0ko.top/svg/m/cn/21/8_ver_1.svg\\",\\"//store.s1r0ko.top/svg/m/cn/21/9_ver_1.svg\\",\\"//store.s1r0ko.top/svg/m/cn/21/10_ver_2.svg\\",\\"//store.s1r0ko.top/svg/m/cn/21/11_ver_1.svg\\",\\"//store.s1r0ko.top/svg/m/cn/21/12_ver_1.svg\\",\\"//store.s1r0ko.top/svg/m/cn/21/13_ver_3.svg\\",\\"//store.s1r0ko.top/svg/m/cn/21/14_ver_2.svg\\",\\"//store.s1r0ko.top/svg/m/cn/21/15_ver_2.svg\\",\\"//store.s1r0ko.top/svg/m/cn/21/16_ver_3.svg\\",\\"//store.s1r0ko.top/svg/m/cn/21/17_ver_2.svg\\",\\"//store.s1r0ko.top/svg/m/cn/21/18_ver_3.svg\\",\\"//store.s1r0ko.top/svg/m/cn/21/19_ver_1.svg\\",\\"//store.s1r0ko.top/svg/m/cn/21/20_ver_1.svg\\"],\\"datePublished\\":\\"2025-07-24T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-06T12:05:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"KurimulaAiri\\",\\"url\\":\\"https://github.com/KurimulaAiri\\"}]}"],["meta",{"property":"og:url","content":"https://md.s1r0ko.top/art/learning/master/major/ComputerNetworks/IPv4.html"}],["meta",{"property":"og:site_name","content":"博客与资料库"}],["meta",{"property":"og:title","content":"IPv4"}],["meta",{"property":"og:description","content":"IPv4 协议 各层协议之间关系各层协议之间关系 提示 各层协议之中， IP 协议（Internet Protocol）是互联网的核心 用于查询同一网络中的 <主机 IP 地址, MAC 地址> 之间的映射关系 用于网络层实体之间互相通知“异常事件” IGMP 协议用于实现 IP 组播 IP 数据报的格式 IP 数据报的格式IP 数据报的格式 IP 数..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"//store.s1r0ko.top/svg/m/cn/21/1_ver_1.svg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-06T12:05:46.000Z"}],["meta",{"property":"article:published_time","content":"2025-07-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-06T12:05:46.000Z"}]]},"git":{"createdTime":1753276972000,"updatedTime":1754481946000,"contributors":[{"name":"KurimulaAiri","username":"KurimulaAiri","email":"1095370199@qq.com","commits":12,"url":"https://github.com/KurimulaAiri"}],"changelog":[{"hash":"4f538116d49e9d64d15a6f9ad21d0fdf4f32cb3e","time":1754481946000,"email":"1095370199@qq.com","author":"KurimulaAiri","message":"修改文中引用路径为相对路径"},{"hash":"e4d88f52cc27869e54db46cf4262ffc994cdd57c","time":1754041052000,"email":"1095370199@qq.com","author":"KurimulaAiri","message":"完成 IPv4 内容，新增 IPv6"},{"hash":"21983abfc7d5b41345311e8cdfa926e7d068acf8","time":1753957209000,"email":"1095370199@qq.com","author":"KurimulaAiri","message":"修订"},{"hash":"67cff1c7c4382ed43713252e2ff4a43f4d3aa994","time":1753879821000,"email":"1095370199@qq.com","author":"KurimulaAiri","message":"xiuding1"},{"hash":"cc6d72058414d4b3d72c0d9d041df80c59256097","time":1753878522000,"email":"1095370199@qq.com","author":"KurimulaAiri","message":"修订"},{"hash":"f6111eff7c8cfa604471d2e38b7568bc3273a5d6","time":1753786437000,"email":"1095370199@qq.com","author":"KurimulaAiri","message":"修订"},{"hash":"59747624cf15b58e547f2e46488fd4df2989b24e","time":1753705318000,"email":"1095370199@qq.com","author":"KurimulaAiri","message":"修订"},{"hash":"d3cbb929cd0fb49d68feb6dbdf9d2ba92cf50b5a","time":1753444495000,"email":"1095370199@qq.com","author":"KurimulaAiri","message":"修订"},{"hash":"0bf2971c04a4c2f1ce0703ebb2b57a0613e26c55","time":1753436542000,"email":"1095370199@qq.com","author":"KurimulaAiri","message":"修订"},{"hash":"40cd56fa62ef7bb4429eb48176057030fc02370b","time":1753363975000,"email":"1095370199@qq.com","author":"KurimulaAiri","message":"修订"},{"hash":"1547b74147739b494546e512fe07765101f50c6f","time":1753357215000,"email":"1095370199@qq.com","author":"KurimulaAiri","message":"修订，去除英文版"},{"hash":"cdf4c435fabc7f9d61e07da1939ecd5db9ba7214","time":1753276972000,"email":"1095370199@qq.com","author":"KurimulaAiri","message":"新增一篇并修订"}]},"readingTime":{"minutes":35.89,"words":10768},"filePathRelative":"art/learning/master/major/ComputerNetworks/IPv4.md","excerpt":"<h2>IPv4 协议</h2>\\n<figure><img src=\\"//store.s1r0ko.top/svg/m/cn/21/1_ver_1.svg\\" alt=\\"各层协议之间关系\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>各层协议之间关系</figcaption></figure>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p>各层协议之中， <strong id=\\"red-msg\\">IP 协议（Internet Protocol）是互联网的核心</strong></p>\\n<p><a href=\\"/art/learning/master/major/ComputerNetworks/IPv4.html#arp-%E5%8D%8F%E8%AE%AE\\" target=\\"_blank\\">ARP 协议</a>用于查询同一网络中的 <code>&lt;主机 IP 地址, MAC 地址&gt;</code> 之间的映射关系</p>\\n<p><a href=\\"/art/learning/master/major/ComputerNetworks/IPv4.html#icmp\\" target=\\"_blank\\">ICMP 协议</a>用于网络层实体之间互相通知“异常事件”</p>\\n<p>IGMP 协议用于实现 IP 组播</p>\\n</div>","autoDesc":true}');export{c as comp,v as data};
