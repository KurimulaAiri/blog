import{_ as k,c as p,e as h,f as r,w as t,r as d,o as g,b as s,d as i}from"./app-Ce1NHmHC.js";const A={};function o(B,a){const e=d("CodeTabs");return g(),p("div",null,[a[10]||(a[10]=h(`<h2 id="内存的基础知识" tabindex="-1"><a class="header-anchor" href="#内存的基础知识"><span>内存的基础知识 👍</span></a></h2><p>内存可存放数据。程序执行前需要先放到内存中才能被 CPU 处理——缓和 CPU 与硬盘之间的速度矛盾</p><p>内存地址从 0 开始，每个地址对应一个存储单元<br> 内存中也有一个一个的“小房间”，每个小房间就是一个“存储单元”<br> 如果计算机“按字节编址”则每个存储单元大小为 1 字节，即 1B ，即 8 个二进制位<br> 如果字长为 16 位的计算机“按字编址”，则每个存储单元大小为 1 个字;每个字的大小为 16 个二进制位</p><h2 id="一些数量单位" tabindex="-1"><a class="header-anchor" href="#一些数量单位"><span>一些数量单位</span></a></h2><p>1 B = 8 位（bit）<br> 1 KB = 1024 B = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>10</mn></msup></mrow><annotation encoding="application/x-tex">2^{10}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">10</span></span></span></span></span></span></span></span></span></span></span></span> B<br> 1 MB = 1024 KB = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>20</mn></msup></mrow><annotation encoding="application/x-tex">2^{20}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">20</span></span></span></span></span></span></span></span></span></span></span></span> B<br> 1 GB = 1024 MB = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>30</mn></msup></mrow><annotation encoding="application/x-tex">2^{30}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">30</span></span></span></span></span></span></span></span></span></span></span></span> B<br> 1 TB = 1024 GB = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>40</mn></msup></mrow><annotation encoding="application/x-tex">2^{40}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">40</span></span></span></span></span></span></span></span></span></span></span></span> B</p><p>程序经过编译、链接后生成的指令中指明的是逻辑地址（相对地址），即:相对于进程的起始地址而言的地址</p><h2 id="如何通过逻辑地址获取物理地址" tabindex="-1"><a class="header-anchor" href="#如何通过逻辑地址获取物理地址"><span>如何通过逻辑地址获取物理地址 👍</span></a></h2><p>主要有三种方式：</p><h3 id="绝对装入" tabindex="-1"><a class="header-anchor" href="#绝对装入"><span>绝对装入</span></a></h3><p>在编译时，如果知道程序将放到内存中的哪个位置，编译程序将产生绝对地址的目标代码</p><p>装入程序按照装入模块中的地址，将程序和数据装入内存</p><p>绝对装入<strong id="red-msg">只适用于单道程序环境</strong></p><h3 id="可重定位装入-静态重定位" tabindex="-1"><a class="header-anchor" href="#可重定位装入-静态重定位"><span>可重定位装入（静态重定位）</span></a></h3><p>又称可重定位装入。编译、链接后的装入模块的地址都是从 0 开始的，指令中使用的地址、数据存放的地址都是相对于起始地址而言的逻辑地址。可根据内存的当前情况，将装入模块装入到内存的适当位置。装入时对地址进行“重定位”，将逻辑地址变换为物理地址（地址变换是在装入时一次完成的）</p><p>一般是多道批处理程序使用</p><h3 id="动态运行时装入-动态重定位" tabindex="-1"><a class="header-anchor" href="#动态运行时装入-动态重定位"><span>动态运行时装入（动态重定位）</span></a></h3><p>静态重定位的特点是在一个作业装入内存时，<strong id="red-msg">必须分配其要求的全部内存空间</strong>，如果没有足够的内存，就不能装入该作业。作业一旦进入内存后，<strong id="red-msg">在运行期间就不能再移动</strong>，也不能再申请内存空间</p><p>又称动态运行时装入。编译、链接后的装入模块的地址都是从 0 开始的。装入程序把装入模块装入内存后，并不会立即把逻辑地址转换为物理地址，而是<strong id="red-msg">把地址转换推迟到程序真正要执行时才进行</strong>。因此装入内存后所有的地址依然是逻辑地址。这种方式需要一个<strong id="red-msg">重定位寄存器</strong>的支持</p><div class="hint-container tip"><p class="hint-container-title">重定位寄存器的作用</p><p>存放装入模块存放的<strong id="blue-msg">起始位置</strong></p></div><p>采用动态重定位时<strong id="red-msg">允许程序在内存中发生移动</strong>，并且可将程序分配到不连续的存储区中;在程序运行前只需装入它的部分代码即可投入运行，然后在程序运行期间，根据需要动态申请分配内存;便于程序段的共享，可以向用户提供一个比存储空间大得多的地址空间</p><p>现代操作系统多使用动态运行时装入方式</p><h2 id="从高级语言到程序" tabindex="-1"><a class="header-anchor" href="#从高级语言到程序"><span>从高级语言到程序 👍</span></a></h2><p>编译：将高级语言编写的程序转换为机器语言的程序（每个高级语言文件对应一个目标模块，通常为 <code>*.o</code> 的拓展名）</p><p>链接：将编译后的多个目标模块与所需的库函数链接起来，组装生成一个可执行文件（装入模块）</p><h2 id="链接的三种方式" tabindex="-1"><a class="header-anchor" href="#链接的三种方式"><span>链接的三种方式 👍</span></a></h2><ul><li><strong>静态链接</strong></li></ul><p>在程序运行之前，先将各目标模块及它们所需的库函数连接成一个完整的可执行文件（装入模块），之后不再拆开</p><ul><li><strong>装入时动态链接</strong></li></ul><p>将各目标模块装入内存时，边装入边链接的链接方式</p><ul><li><strong>运行时动态链接</strong> 👍</li></ul><p>在程序执行中需要该目标模块时，才对它进行链接。其优点是便于修改和更新，便于实现对目标模块的共享</p><h2 id="内存管理" tabindex="-1"><a class="header-anchor" href="#内存管理"><span>内存管理</span></a></h2><p>操作系统需要对实现以下四个功能以实现内存管理</p><ol><li><p><strong>内存的分配与回收</strong></p></li><li><p><strong>对内存空间进行扩充</strong></p></li></ol><p>操作系统需要提供某种技术从逻辑上对内存空间进行扩充</p><ol start="3"><li><strong>地址转换（三种装入方式）</strong></li></ol><p>为了使编程更方便，程序员写程序时应该只需要关注指令、数据的逻辑地址。而逻辑地址到物理地址的转换（这个过程称为地址重定位）应该由操作系统负责，这样就保证了程序员写程序时不需要关注物理内存的实际情况</p><ol start="4"><li><strong>内存保护</strong></li></ol><p>操作系统需要提供内存保护功能。保证各进程在各自存储空间内运行，互不干扰</p><p>内存保护一般使用两种方法</p><ul><li><strong>设置一对上、下限寄存器</strong></li></ul><p>在 CPU 中设置一对上、下限寄存器，存放进程的上、下限地址。进程的指令要访问某个地址时， CPU 检查是否越界</p><ul><li><strong>越界检查</strong></li></ul><p>采用重定位寄存器（又称基址寄存器）和界地址寄存器（又称限长寄存器）进行越界检查。重定位寄存器中存放的是进程的起始物理地址。界地址寄存器中存放的是进程的最大逻辑地址</p><h2 id="进程的内存映像" tabindex="-1"><a class="header-anchor" href="#进程的内存映像"><span>进程的内存映像</span></a></h2><figure><img src="https://store.s1r0ko.top/svg/m/os/18/1_ver_1.svg" alt="内存映像模型" tabindex="0" loading="lazy"><figcaption>内存映像模型</figcaption></figure><p>假设此时有一段这样的 C 语言代码</p><div class="language-c line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="c" style="--vp-collapsed-lines:15;--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-c"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;stdio.h&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#define</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> X</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1024</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 定义一个宏 X，值为 1024</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> a </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 全局变量 a，值为 1</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> b </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 全局常量 b，值为 2</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> c </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 静态局部变量 c，值为 3</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> d </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 局部变量 d，值为 4</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    int</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">p </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">malloc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">sizeof</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 动态分配内存，p 指向该内存</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    a </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> b </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> c </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> d;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // a = 2 + 3 + 4 = 9</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[i] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> X </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;hello world </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>那么不同部分位于的内存区域如下</p><ul><li><strong>操作系统内核区</strong></li></ul><p>进程控制块 PCB 等数据</p><ul><li><strong>栈区</strong></li></ul><p>在函数大括号内定义的局部变量、函数调用时传入的参数</p><ul><li><strong>堆区</strong></li></ul><p>动态分配的内存（如 malloc 函数申请和 free 释放的内存）存储在堆区</p><ul><li><strong>共享库的存储映射区</strong></li></ul><p>被调用的库函数的代码和数据存储在共享库的存储映射区</p><ul><li><strong>读写数据</strong></li></ul><p>定义在函数外的全局变量、由 static 关键字修饰的变量</p><ul><li><strong>只读代码/数据段</strong></li></ul><p>程序代码、由 const 关键字修饰的变量</p>`,61)),r(e,{data:[{id:"栈"},{id:"共享库的存储映射区"},{id:"堆"},{id:"读写数据段"},{id:"只读代码/数据段"}]},{title0:t(({value:l,isActive:n})=>a[0]||(a[0]=[i("栈")])),title1:t(({value:l,isActive:n})=>a[1]||(a[1]=[i("共享库的存储映射区")])),title2:t(({value:l,isActive:n})=>a[2]||(a[2]=[i("堆")])),title3:t(({value:l,isActive:n})=>a[3]||(a[3]=[i("读写数据段")])),title4:t(({value:l,isActive:n})=>a[4]||(a[4]=[i("只读代码/数据段")])),tab0:t(({value:l,isActive:n})=>a[5]||(a[5]=[s("div",{class:"language-c line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"c",style:{"--vp-collapsed-lines":"15","--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[s("pre",{class:"shiki shiki-themes one-light one-dark-pro has-highlighted vp-code"},[s("code",{class:"language-c"},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"#include"),s("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," <stdio.h>")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"#define"),s("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}}," X"),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 1024")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," a "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 1"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"const"),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," b "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 2"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"int"),s("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}}," main"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"()")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"{")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"    static"),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," c "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 3"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line highlighted"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"    int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," d "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 4"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line highlighted"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"    int"),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," *"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"p "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," ("),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"int"),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," *"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},")"),s("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"malloc"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"sizeof"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},") "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"*"),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 10"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},");"),s("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // 等号前面的部分")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    a "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," b "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"+"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," c "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"+"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," d;")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"    for"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," ("),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," i "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 0"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"; i "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"<"),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 10"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"; i"),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"++"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"        p"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"[i] "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," X "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"+"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," i;")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"    printf"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),s("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"hello world '),s("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"\\n"),s("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"'),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},");")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"    return"),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 0"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab1:t(({value:l,isActive:n})=>a[6]||(a[6]=[s("div",{class:"language-c line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"c",style:{"--vp-collapsed-lines":"15","--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[s("pre",{class:"shiki shiki-themes one-light one-dark-pro has-highlighted vp-code"},[s("code",{class:"language-c"},[s("span",{class:"line highlighted"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"#include"),s("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," <stdio.h>")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"#define"),s("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}}," X"),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 1024")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," a "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 1"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"const"),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," b "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 2"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"int"),s("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}}," main"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"()")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"{")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"    static"),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," c "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 3"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"    int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," d "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 4"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"    int"),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," *"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"p "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," ("),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"int"),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," *"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},")"),s("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"malloc"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"sizeof"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},") "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"*"),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 10"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},");")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    a "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," b "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"+"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," c "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"+"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," d;")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"    for"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," ("),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," i "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 0"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"; i "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"<"),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 10"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"; i"),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"++"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"        p"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"[i] "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," X "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"+"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," i;")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"    printf"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),s("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"hello world '),s("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"\\n"),s("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"'),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},");")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"    return"),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 0"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab2:t(({value:l,isActive:n})=>a[7]||(a[7]=[s("div",{class:"language-c line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"c",style:{"--vp-collapsed-lines":"15","--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[s("pre",{class:"shiki shiki-themes one-light one-dark-pro has-highlighted vp-code"},[s("code",{class:"language-c"},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"#include"),s("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," <stdio.h>")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"#define"),s("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}}," X"),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 1024")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," a "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 1"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"const"),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," b "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 2"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"int"),s("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}}," main"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"()")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"{")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"    static"),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," c "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 3"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"    int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," d "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 4"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line highlighted"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"    int"),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," *"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"p "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," ("),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"int"),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," *"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},")"),s("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"malloc"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"sizeof"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},") "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"*"),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 10"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},");"),s("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}}," // malloc 开辟的内存")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    a "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," b "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"+"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," c "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"+"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," d;")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"    for"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," ("),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," i "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 0"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"; i "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"<"),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 10"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"; i"),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"++"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"        p"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"[i] "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," X "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"+"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," i;")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"    printf"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),s("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"hello world '),s("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"\\n"),s("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"'),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},");")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"    return"),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 0"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab3:t(({value:l,isActive:n})=>a[8]||(a[8]=[s("div",{class:"language-c line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"c",style:{"--vp-collapsed-lines":"15","--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[s("pre",{class:"shiki shiki-themes one-light one-dark-pro has-highlighted vp-code"},[s("code",{class:"language-c"},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"#include"),s("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," <stdio.h>")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"#define"),s("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}}," X"),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 1024")]),i(`
`),s("span",{class:"line highlighted"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," a "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 1"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"const"),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," b "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 2"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"int"),s("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}}," main"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"()")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"{")]),i(`
`),s("span",{class:"line highlighted"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"    static"),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," c "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 3"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"    int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," d "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 4"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"    int"),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," *"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"p "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," ("),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"int"),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," *"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},")"),s("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"malloc"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"sizeof"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},") "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"*"),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 10"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},");")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    a "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," b "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"+"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," c "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"+"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," d;")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"    for"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," ("),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," i "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 0"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"; i "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"<"),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 10"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"; i"),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"++"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"        p"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"[i] "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," X "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"+"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," i;")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"    printf"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),s("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"hello world '),s("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"\\n"),s("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"'),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},");")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"    return"),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 0"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab4:t(({value:l,isActive:n})=>a[9]||(a[9]=[s("div",{class:"language-c line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"c",style:{"--vp-collapsed-lines":"15","--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[s("pre",{class:"shiki shiki-themes one-light one-dark-pro has-highlighted vp-code"},[s("code",{class:"language-c"},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"#include"),s("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," <stdio.h>")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"#define"),s("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}}," X"),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 1024")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," a "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 1"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line highlighted"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"const"),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," b "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 2"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"int"),s("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}}," main"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"()")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"{")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"    static"),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," c "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 3"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"    int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," d "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 4"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"    int"),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," *"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"p "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," ("),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"int"),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," *"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},")"),s("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"malloc"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"sizeof"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},") "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"*"),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 10"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},");")]),i(`
`),s("span",{class:"line highlighted"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    a "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," b "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"+"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," c "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"+"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," d;")]),i(`
`),s("span",{class:"line highlighted"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"    for"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," ("),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"int"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," i "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 0"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"; i "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"<"),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 10"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"; i"),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"++"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},")")]),i(`
`),s("span",{class:"line highlighted"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    {")]),i(`
`),s("span",{class:"line highlighted"},[s("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"        p"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"[i] "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"="),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," X "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"+"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," i;")]),i(`
`),s("span",{class:"line highlighted"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    }")]),i(`
`),s("span",{class:"line highlighted"},[s("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"    printf"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),s("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"hello world '),s("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"\\n"),s("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"'),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},");")]),i(`
`),s("span",{class:"line highlighted"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"    return"),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 0"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),_:1}),a[11]||(a[11]=h('<div class="hint-container warning"><p class="hint-container-title">宏定义的变量</p><p>宏定义的变量是在预处理阶段展开的，所以在编译时，宏定义的变量会被替换为其对应的值。因此，宏定义的变量会隐含在只读数据段中。（也就是在编译时，宏定义的变量被使用的地方的宏变量名会被替换为其对应的值）</p><p>在本例中，所有使用到宏定义的变量 X 都会被替换为 1024。</p></div><h2 id="内存的分配与回收" tabindex="-1"><a class="header-anchor" href="#内存的分配与回收"><span>内存的分配与回收</span></a></h2><p>以为用户进程分配的内存是否连续，内存的分配方式区分为连续分配管理方式和非连续分配管理方式。</p><h3 id="连续分配管理方式" tabindex="-1"><a class="header-anchor" href="#连续分配管理方式"><span>连续分配管理方式</span></a></h3><h4 id="单一连续分配" tabindex="-1"><a class="header-anchor" href="#单一连续分配"><span>单一连续分配</span></a></h4><p>在单一连续分配方式中，内存被分为<strong>系统区</strong>和<strong>用户区</strong>。系统区通常位于内存的低地址部分，用于存放操作系统相关数据;用户区用于存放用户进程相关数据。内存中<strong>只能有一道用户程序</strong>，用户程序独占整个用户区空间。</p><ul><li><p>优点</p><ul><li>实现简单；</li><li>无外部碎片；</li><li>可以采用覆盖技术扩充内存：不一定需要采取内存保护（ eg: 早期的 PC 操作系统 MS-DOS ）</li></ul></li><li><p>缺点</p><ul><li>只能用于单用户、单任务的操作系统中；</li><li>有内部碎片；</li><li>存储器利用率极低</li></ul></li></ul><div class="hint-container tip"><p class="hint-container-title">内部碎片</p><p>分配给某进程的内存区域中，如果有些部分没有用上，就是“内部碎片”</p></div><h4 id="固定分区分配" tabindex="-1"><a class="header-anchor" href="#固定分区分配"><span>固定分区分配</span></a></h4><p>20 世纪 60 年代出现了支持多道程序的系统，为了能在内存中装入多道程序，且这些程序之间又不会相互干扰，于是将整个<strong>用户空间</strong>划分为<strong>若干个固定大小的分区</strong>，在<strong>每个分区中只装入一道作业</strong>，这样就形成了最早的、最简单的一种可运行多道程序的内存管理方式</p><p>固定分区分配又分为<strong>分区大小相等</strong>和<strong>分区大小不等</strong></p><ul><li><p>分区大小相等</p><p>缺乏灵活性，但是很<strong>适合用于用一台计算机控制多个相同对象的场合</strong>（比如：钢铁厂有 n 个相同的炼钢炉，就可把内存分为 n 个大小相等的区域存放 n 个炼钢炉控制程序）</p></li><li><p>分区大小不等</p><p>增加了灵活性，可以满足不同大小的进程需求。根据常在系统中运行的作业大小情况进行划分（比如：划分多个小分区、适量中等分区、少量大分区）</p><p>操作系统需要建立一个数据结构——<strong>分区说明表</strong>，来实现各个分区的分配与回收。每个表项对应一个分区，通常按分区大小排列。每个表项包括对应分区的<strong id="blue-msg">大小、起始地址、状态(是否已分配)</strong></p><p>类似于：</p><table><thead><tr><th>分区号</th><th>分区大小（单位：KB）</th><th>起始地址（单位：K）</th><th>状态</th></tr></thead><tbody><tr><td>1</td><td>2</td><td>8</td><td>未分配</td></tr><tr><td>2</td><td>2</td><td>10</td><td>未分配</td></tr><tr><td>3</td><td>4</td><td>12</td><td>已分配</td></tr><tr><td>……</td><td>……</td><td>……</td><td>……</td></tr></tbody></table><p>当某用户程序要装入内存时，由操作系统内核程序根据用户程序大小检索该表从中找到一个能满足大小的、未分配的分区，将之分配给该程序，然后修改状态为“已分配”</p><ul><li><p>优点：实现简单，无外部碎片</p></li><li><p>缺点：</p><ul><li>当用户程序太大时，可能所有的分区都不能满足需求，此时不得不采用覆盖技术来解决，但这又会降低性能;</li><li>会产生内部碎片，内存利用率低</li></ul></li></ul></li></ul><h4 id="动态分区分配" tabindex="-1"><a class="header-anchor" href="#动态分区分配"><span>动态分区分配</span></a></h4><p><strong>动态分区分配又称为可变分区分配</strong>。这种分配方式<strong>不会预先划分内存分区</strong>，而是在进程装入内存时<strong>根据进程的大小动态地建立分区</strong>，并使分区的大小正好适合进程的需要。因此系统分区的大小和数目是可变的。（eg: 假设某计算机内存大小为 64 MB ，系统区 8 MB ，用户区共 56 MB ……）</p><p>具体实现可以采用空闲分区表或空闲分区链表来管理空闲分区。</p><ul><li><strong>空闲分区表</strong></li></ul><p>每个空闲分区对应一个表项。表项中包含分区号、分区大小、分区起始地址等信息</p><ul><li><strong>空闲分区链表</strong></li></ul><p>每个分区的起始部分和末尾部分分别设置前向指针和后向指针。起始部分处还可记录分区大小等信息</p><hr><p>动态分区分配没有内部碎片，但是有外部碎片</p><p><strong>内部碎片</strong>：分配给某进程的内存区域中，如果有些部分没有用上<br><strong>外部碎片</strong>：是指内存中的某些空闲分区由于太小而难以利用</p><p>如果内存中空闲空间的总和本来可以满足某进程的要求，但由于进程需要的是一整块连续的内存空间，因此这些“碎片”不能满足进程的需求</p><p>可以通过<strong id="blue-msg">紧凑（拼凑，Compaction）</strong>技术来解决外部碎片。</p><h5 id="动态分区分配的算法" tabindex="-1"><a class="header-anchor" href="#动态分区分配的算法"><span>动态分区分配的算法</span></a></h5><div class="hint-container info"><p class="hint-container-title">首次适应算法（First Fit）</p><ul><li><p><strong>算法思想</strong></p><p>从内存的低地址开始，顺序查找空闲分区表，找到第一个能满足进程需求的分区，将之分配给进程，若进程大小大于该分区大小，则将该分区一分为二，将低地址部分分配给进程，高地址部分则作为新的空闲分区加入到空闲分区表中。若进程大小小于该分区大小，则将该分区全部分配给进程。</p></li><li><p><strong>实现方式</strong></p><p><strong id="blue-msg">空闲分区以地址递增的次序排列</strong>。每次分配内存时顺序查找<strong id="blue-msg">空闲分区链</strong>（或<strong id="blue-msg">空闲分区表</strong>），找到大小能满足要求的第一个空闲分区</p></li></ul></div><div class="hint-container tip"><p class="hint-container-title">最佳适应算法（Best Fit）</p><ul><li><p><strong>算法思想</strong></p><p>由于动态分区分配是一种连续分配方式，为各进程分配的空间必须是连续的一整片区域。因此为了保证当“大进程”到来时能有连续的大片空间，可以尽可能多地留下大片的空闲区即，优先使用更小的空闲区</p></li><li><p><strong>实现方式</strong></p><p>空闲分区<strong id="blue-msg">按容量递增次序链接</strong>。每次分配内存时顺序查找<strong id="blue-msg">空闲分区链</strong>（或<strong id="blue-msg">空闲分区表</strong>），找到大小能满足要求的第一个空闲分区</p></li><li><p><strong>缺点</strong></p><p><strong id="red-msg">每次都选最小的分区进行分配，会留下越来越多的、很小的、难以利用的内存块。因此这种方法会产生很多的外部碎片</strong></p></li></ul></div><div class="hint-container warning"><p class="hint-container-title">最坏适应算法（Worst Fit）</p><p>又称<strong id="blue-msg">最大适应算法</strong>(Largest Fit)</p><ul><li><p><strong>算法思想</strong></p><p>为了解决最佳适应算法的问题--即留下太多难以利用的小碎片，可以在每次分配时优先使用最大的连续空闲区，这样分配后剩余的空闲区就不会太小，更方便使用。</p></li><li><p><strong>实现方式</strong></p><p>空闲分区<strong id="blue-msg">按容量递减次序链接</strong>。每次分配内存时顺序查找<strong id="blue-msg">空闲分区链</strong>（或<strong id="blue-msg">空闲分区表</strong>），找到大小能满足要求的第一个空闲分区</p></li><li><p><strong>缺点</strong></p><p><strong id="red-msg">每次都选最大的分区进行分配，虽然可以让分配后留下的空闲区更大，更可用，但是这种方式会导致较大的连续空闲区被迅速用完。如果之后有“大进程”到达，就没有内存分区可用了</strong></p></li></ul></div><div class="hint-container caution"><p class="hint-container-title">近邻适应算法（Next Fit）</p><ul><li><p><strong>算法思想</strong></p><p>首次适应算法每次都从链头开始查找的。这可能会导致低地址部分出现很多小的空闲分区，而每次分配查找时，都要经过这些分区，因此也增加了查找的开销。如果每次都从上次查找结束的位置开始检索，就能解决上述问题</p></li><li><p><strong>实现方式</strong></p><p>空闲分区以地址递增的顺序排列（可排成一个循环链表）。每次分配内存时<strong>从上次查找结束的位置</strong>开始查找<strong>空闲分区链</strong>（或<strong>空闲分区表</strong>），找到大小能满足要求的第一个空闲分区。</p></li><li><p><strong>优点</strong></p><p><strong id="blue-msg">首次适应算法每次都要从头查找，每次都需要检索低地址的小分区但是这种规则也决定了当低地址部分有更小的分区可以满足需求时，会更有可能用到低地址部分的小分区，也会更有可能把高地址部分的大分区保留下来（最佳适应算法的优点）</strong>。</p></li><li><p><strong>缺点</strong></p><p><strong id="red-msg">邻近适应算法的规则可能会导致无论低地址、高地址部分的空闲分区都有相同的概率被使用，也就导致了高地址部分的大分区更可能被使用，划分为小分区，最后导致无大分区可用（最大适应算法的缺点）</strong></p></li></ul></div><p>综合来看，四种算法中，<strong id="red-msg">首次适应算法</strong>的效果反而更好</p><h3 id="非连续分配管理方式" tabindex="-1"><a class="header-anchor" href="#非连续分配管理方式"><span>非连续分配管理方式</span></a></h3><h4 id="基本分页存储管理方式" tabindex="-1"><a class="header-anchor" href="#基本分页存储管理方式"><span>基本分页存储管理方式 👍</span></a></h4><ul><li><strong>什么是分页存储</strong></li></ul><p>将内存空间分为一个个<strong>大小相等的分区</strong>（比如：每个分区 4 KB ），每个分区就是一个“<strong>页框</strong>”（页框=页帧=内存块=物理块=物理页面）。每个页框有一个编号，即“<strong>页框号</strong>”（页框号=页帧号=内存块号=物理块号=物理页号），页框号<strong id="red-msg">从 0 开始</strong></p><p>将<strong>进程的逻辑地址空间</strong>也分为<strong>与页框大小相等</strong>的一个个部分，每个部分称为一个“<strong>页</strong>”或“<strong>页面</strong>”。每个页面也有一个编号：即“页号”，页号也是<strong>从 0 开始</strong></p><p>操作系统<strong>以页框为单位为各个进程分配内存空间</strong>。进程的每个页面分别放入一个页框中。也就是说，<strong>进程的页面</strong>与<strong>内存的页框</strong>有一一对应的关系。<br> 各个页面不必连续存放，可以放到不相邻的各个页框中</p><ul><li><strong>页表</strong></li></ul><p>为了能知道进程的每个页面在内存中存放的位置，操作系统要为每个进程建立一张<strong>页表</strong>。注：页表通常存在 PCB （进程控制块）中</p><div class="hint-container warning"><p class="hint-container-title">注意</p><ol><li><p>一个进程对应一张页表</p></li><li><p>进程的每个页面对应一个页表项</p></li><li><p>每个<strong>页表项</strong>由“页号”和“块号”组成</p></li><li><p>页表记录进程<strong>页面</strong>和实际存放的<strong>内存块</strong>之间的<strong>映射关系</strong></p></li><li><p>每个页表项的长度是相同的</p></li></ol></div><p>页表大概的数据结构如下：</p><table><thead><tr><th style="text-align:center;">页号</th><th style="text-align:center;">块号</th></tr></thead><tbody><tr><td style="text-align:center;">0</td><td style="text-align:center;">3</td></tr><tr><td style="text-align:center;">1</td><td style="text-align:center;">6</td></tr><tr><td style="text-align:center;">2</td><td style="text-align:center;">4</td></tr><tr><td style="text-align:center;">...</td><td style="text-align:center;">...</td></tr><tr><td style="text-align:center;">n</td><td style="text-align:center;">8</td></tr></tbody></table><div class="hint-container tip"><p class="hint-container-title">例子</p><p>假设某系统物理内存大小为 4 GB ，页面大小为 4 KB，则每个页表项至少应该为多少字节？</p><p>内存块大小 = 页面大小 = 4 KB= 2<sup>12</sup> B</p><p>4 GB 的内存总共会被分为 2<sup>32</sup> / 2<sup>12</sup> = 2<sup>20</sup> 个内存块</p><p>内存块号的范围应该是 0 ~ 2<sup>20</sup> - 1</p><p>内存块号至少要用 20 bit 来表示</p><p>至少要用 3B 来表示块号（3 * 8 = 24 bit）</p><p>由于页号是隐含的，因此每个页表项占 3B ，存储整个页表至少需要 3 * (n+1) B</p><p><strong id="red-msg">计算机中内存块的数量 → 页表项中块号至少占多少字节</strong></p><p>页表项连续存放，因此页号可以是隐含的，不占存储空间（类似数组）</p></div><p>注意：页表记录的只是内存块号，而不是内存块的起始地址！ J 号内存块的起始地址 = J * 内存块大小</p><ul><li><strong>地址转换的实现</strong> 👍</li></ul><p>特点：虽然进程的各个页面是离散存放的，但是页面内部是连续存放的</p><p>如果要访问逻辑地址 A ，则</p><ol><li>确定逻辑地址 A 对应的“页号” P</li><li>找到 P 号页面在内存中的起始地址（需要查页表）</li><li>确定逻辑地址 A 对应的“页内偏移量” W</li><li>内存中实际的物理地址为：P 号页面对应的起始地址 + 页内偏移量 = P * 内存块大小 + W</li></ol><div class="hint-container tip"><p class="hint-container-title">例子</p><p>在某计算机系统中，页面大小是 50 B 。某进程逻辑地址空间大小为 200 B ，则逻辑地址 110 对应的页号、页内偏移量是多少？</p><p><strong>页号</strong> = 逻辑地址 / 页面长度（取除法的<strong>整数</strong>部分）<br><strong>页内偏移量</strong> = 逻辑地址 % 页面长度（取除法的<strong>余数</strong>部分）</p><p><strong>页号</strong> = 110 / 50 = 2<br><strong>页内偏移量</strong> = 110 % 50 = 10</p><p>逻辑地址 可以拆分为 <strong id="red-msg">（页号，页内偏移量）</strong><br> 通过页号查询页表，可知页面在内存中的起始地址</p><p>页面在内存中的起始地址 + 页内偏移量 = 实际的物理地址</p></div><p>在计算机内部，地址是用二进制表示的，如果<strong id="blue-msg">页面大小刚好是 2 的整数幂</strong>，则计算机硬件可以很快速的把逻辑地址拆分成 <strong id="red-msg">（页号，页内偏移量）</strong></p><p>结论：如果每个页面大小为 <strong id="red-msg">2<sup>k</sup></strong>B，用二进制数表示逻辑地址，则<strong>末尾 K 位</strong>即为<strong>页内偏移量</strong>，其余部分就是<strong>页号</strong></p><p>如果页面大小刚好是 2 的整数幂，则只需把页表中记录的<strong>物理块号拼接上页内偏移量</strong>就能得到对应的<strong>物理地址</strong></p><p>对于此类情况，可以有更快速的方式计算页号和页内偏移量</p><div class="hint-container caution"><p class="hint-container-title">重要</p><p>如果有 K 位表示“页内偏移量”，则说明该系统中一个页面的大小是 2<sup>k</sup> 个内存单元<br> 如果有 M 位表示“页号”，则说明在该系统中，一个进程最多允许有 2<sup>M</sup> 个页面</p><p>页面大小 &lt;-&gt; 页内偏移量位数 -&gt; 逻辑地址结构</p></div><h5 id="基本地址变换机构" tabindex="-1"><a class="header-anchor" href="#基本地址变换机构"><span>基本地址变换机构 👍</span></a></h5><p>基本地址变换机构可以借助进程的页表将逻辑地址转换为物理地址</p><p>通常会在系统中设置一个页表寄存器（ PTR ），存放页表在内存中的起始地址 F 和页表长度 M 。进程未执行时，页表的始址和页表长度放在进程控制块（ PCB ）中，当进程被调度时，操作系统内核会把它们放到页表寄存器中</p><p>操作系统读取进程物理内存的过程：</p><ol><li>根据逻辑地址计算出页号、页内偏移量</li><li>判断页号是否越界</li><li>查询页表，找到页号对应的页表项，确定页面存放的内存块号</li><li>用内存块号和页内偏移量得到物理地址</li><li>访问目标内存单元</li></ol><div class="hint-container tip"><p class="hint-container-title">参考过程 👍</p><p>设页面大小为 L （页面大小是 2 的整数幂），逻辑地址 A 到物理地址 E 的变换过程如下：</p><ol><li><p>计算页号 P 和页内偏移量 W （如果用十进制数手算，则 P = A / L ， W = A % L ；但是在计算机实际运行时，逻辑地址结构是固定不变的，因此计算机硬件可以更快地得到二进制表示的页号、页内偏移量）</p></li><li><p>比较页号 P 和页表长度 M ，若 P <strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≥</mo></mrow><annotation encoding="application/x-tex">\\ge</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≥</span></span></span></span></strong> M ，则产生越界中断，否则继续执行。（注意：页号是从 0 开始的，而页表长度至少是 1 ，因此 <strong>P = M 时也会越界</strong>）</p></li><li><p>页表中页号 P 对应的 <strong id="red-msg">页表项地址 = 页表起始地址 F + 页号 P * 页表项长度</strong>，取出该页表项内容 b 即为内存块号。（注意区分<strong id="red-msg">页表项长度、页表长度、页面大小的区别</strong>。页表长度指的是这个页表中总共有几个页表项，即总共有几个页；页表项长度指的是每个页表项占多大的存储空间；<strong>页面大小</strong>指的是一个页面占多大的存储空间）</p></li><li><p>计算 E = b * L + W，用得到的物理地址 E 去访存。（如果内存块号、页面偏移量是用二进制表示的，那么把二者拼接起来就是最终的物理地址了）</p></li></ol></div><div class="hint-container tip"><p class="hint-container-title">例子</p><p>若<strong id="red-msg">页面大小 L 为 1 K 字节</strong>，页号 2 对应的内存块号 b = 8 ，将逻辑地址 A = 2500 转换为物理地址 E 。等价描述：某系统按字节寻址，逻辑地址结构中，页内偏移量占 10 位（与页面大小 L 相关，可以由此推出页面大小），页号 2 对应的内存块号 b = 8,将逻辑地址 A = 2500 转换为物理地址 E</p><ol><li>计算页号、页内偏移量<br><strong>页号</strong> = A / L = 2500 / 1024 = 2<br><strong>页内偏移量</strong> = A % L = 2500 % 1024 = 425</li><li>检查页号是否越界<br> 页号 2 小于页表长度 8 ，因此不会越界</li><li>查询页表，找到页号 2 对应的页表项，确定页面存放的内存块号<br> 页号 2 对应的页表项内容 b = 8</li><li>计算物理地址 E = b * L + W = 8 * 1024 + 425 = 8644</li></ol></div><p>在分页存储管理（页式管理）的系统中，只要确定了每个页面的大小，逻辑地址结构就确定了。因此，<strong>页式管理中地址是一维的</strong>。即，只要给出一个逻辑地址，系统就可以自动地算出页号、页内偏移量两个部分，并不需要显式地告诉系统这个逻辑地址中，页内偏移量占多少位</p><ul><li><strong>进一步讨论</strong></li></ul><p>假设某系统物理内存大小为 4 GB ，页面大小为 4 KB，的内存总共会被分为2<sup>32</sup> / 2<sup>12</sup> = 2<sup>20</sup> 个内存块，因此内存块号的范围应该是 0 ~ 2<sup>20</sup> - 1<br> 因此至少要 20 个二进制位才能表示这么多的内存块号，因此至少要 3 个字节才够（每个字节 8 个二进制位， 3 个字节共 24 个二进制位）</p><p>各页表项会<strong>按顺序连续地</strong>存放在内存中<br> 如果该页表在内存中存放的起始地址为 X ，则 M 号页对应的页表项是存放在内存地址为 X + 3 * M （每个页表项占 3 个字节）</p><p>一个页面为 4 KB ，则每个页框可以存放 4096 / 3 = 1365 个页表项但是这个页框会剩余 4096 % 3 = 1B 页内碎片因此，1365 号页表项存放的地址为 X + 3 * 1365 + <strong>1</strong> 如果<strong>每个页表项占 4 字节</strong>，则每个页框刚好可存放 1024 个页表项</p><p>1024 号页表项虽然是存放在下一个页框中的，但是它的地址依然可以用 X + 4 * 1024 得出</p><p>理论上，页表项长度为3B即可表示内存块号的范围，但是，为了方便页表的查询常常会让一个页表项占更多的字节，使得<strong id="blue-msg">每个页面恰好可以装得下整数个页表项</strong></p><p><strong id="red-msg">页面偏移量位数 &lt;-&gt; 页面大小（能够掌握相互之间推导）</strong> 👍</p><p><strong id="red-msg">查询程序物理地址的过程中有两次访问内存，第一次为查找页表、第二次为访问目标内存单元</strong></p><h5 id="具有快表的地址变换机构" tabindex="-1"><a class="header-anchor" href="#具有快表的地址变换机构"><span>具有快表的地址变换机构</span></a></h5><ul><li><strong>快表（TLB）</strong></li></ul><p><strong>快表</strong>，又称<strong>联想寄存器</strong>(TLB，Translation Lookaside Buffer)，是一种<strong>访问速度比内存快很多</strong>的高速缓存(<strong>TLB不是内存！</strong>)，用来存放<strong>最近访问的页表项的副本</strong>，可以加速地址变换的速度。与此对应，内存中的页表常称为<strong>慢表</strong></p><div class="hint-container tip"><p class="hint-container-title">高速缓存过程</p><p>假设：访问 TLB 只需 1 us 访问内存需要 100 us</p><p>假设某进程执行过程中要依次访问 (0, 0) 、 (0, 4) 、 (0, 8) 这几个逻辑地址</p><figure><img src="https://store.s1r0ko.top/svg/m/os/18/2_ver_1.svg" alt="高速缓存过程" tabindex="0" loading="lazy"><figcaption>高速缓存过程</figcaption></figure><p>若快表中没有目标页表项，则需要查询内存中的页表，最近使用过的页表项会放入快表</p><p>若快表命中就不需要再访问内存了</p><p>快表中存放的是页表的一部分副本（成本高、容量小）</p><ul><li><strong>具体步骤</strong></li></ul><ol><li><p>CPU 给出逻辑地址，由某个硬件算得页号、页内偏移量，将页号与快表中的所有页号进行比较</p></li><li><p>如果找到匹配的页号，说明要访问的页表项在快表中有副本，则直接从中取出该页对应的内存块号，再将内存块号与页内偏移量拼接形成物理地址，最后，访问该物理地址对应的内存单元。因此，若快表命中，则访问某个逻辑地址仅需一次访存即可</p></li><li><p>如果没有找到匹配的页号，则需要访问内存中的页表，找到对应页表项，得到页面存放的内存块号，再将内存块号与页内偏移量拼接形成物理地址，最后，访问该物理地址对应的内存单元。因此若快表未命中，则访问某个逻辑地址需要两次访存（注意：在找到页表项后，应同时将其存入快表以便后面可能的再次访问。但若快表已满，则必须按照一定的算法对旧的页表项进行替换）</p></li></ol><p>由于查询快表的速度比查询页表的速度快很多，因此只要快表命中，就可以节省很多时间。<br> 因为局部性原理，一般来说快表的命中率可以达到 90% 以上</p><p><strong id="red-msg">有的系统支持快表和慢表同时查找</strong></p></div>',73))])}const y=k(A,[["render",o]]),m=JSON.parse('{"path":"/art/learning/master/major/OperatingSystem/Memory.html","title":"内存","lang":"zh-CN","frontmatter":{"title":"内存","date":"2025-09-25T00:00:00.000Z","icon":"gears","order":18,"category":["408","操作系统","考研"],"description":"内存的基础知识 👍 内存可存放数据。程序执行前需要先放到内存中才能被 CPU 处理——缓和 CPU 与硬盘之间的速度矛盾 内存地址从 0 开始，每个地址对应一个存储单元 内存中也有一个一个的“小房间”，每个小房间就是一个“存储单元” 如果计算机“按字节编址”则每个存储单元大小为 1 字节，即 1B ，即 8 个二进制位 如果字长为 16 位的计算机“...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"内存\\",\\"image\\":[\\"https://store.s1r0ko.top/svg/m/os/18/1_ver_1.svg\\",\\"https://store.s1r0ko.top/svg/m/os/18/2_ver_1.svg\\"],\\"datePublished\\":\\"2025-09-25T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-14T09:45:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"KurimulaAiri\\",\\"url\\":\\"https://github.com/KurimulaAiri\\"}]}"],["meta",{"property":"og:url","content":"https://md.s1r0ko.top/art/learning/master/major/OperatingSystem/Memory.html"}],["meta",{"property":"og:site_name","content":"博客与资料库"}],["meta",{"property":"og:title","content":"内存"}],["meta",{"property":"og:description","content":"内存的基础知识 👍 内存可存放数据。程序执行前需要先放到内存中才能被 CPU 处理——缓和 CPU 与硬盘之间的速度矛盾 内存地址从 0 开始，每个地址对应一个存储单元 内存中也有一个一个的“小房间”，每个小房间就是一个“存储单元” 如果计算机“按字节编址”则每个存储单元大小为 1 字节，即 1B ，即 8 个二进制位 如果字长为 16 位的计算机“..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://store.s1r0ko.top/svg/m/os/18/1_ver_1.svg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-14T09:45:13.000Z"}],["meta",{"property":"article:published_time","content":"2025-09-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-14T09:45:13.000Z"}]]},"git":{"createdTime":1758850679000,"updatedTime":1760435113000,"contributors":[{"name":"KurimulaAiri","username":"KurimulaAiri","email":"1095370199@qq.com","commits":6,"url":"https://github.com/KurimulaAiri"}],"changelog":[{"hash":"50e0c7ab123d1c63d2e7e53c3d0bae49f199e984","time":1760435113000,"email":"1095370199@qq.com","author":"KurimulaAiri","message":"xd"},{"hash":"4bcb89a6cf1372d7c3c18fefba32c2ac9628c31e","time":1760372071000,"email":"1095370199qq@gmail.com","author":"KurimulaAiri","message":"修订"},{"hash":"817a36cf00be0364e38e6971f19682036a86594f","time":1760347539000,"email":"1095370199@qq.com","author":"KurimulaAiri","message":"修订"},{"hash":"cc08951414155488e60a90bd6ea4c7bdc797d244","time":1760088568000,"email":"1095370199@qq.com","author":"KurimulaAiri","message":"修订"},{"hash":"5f07800de79e32f8a73155bc233dd21e4122eb7d","time":1760001557000,"email":"1095370199@qq.com","author":"KurimulaAiri","message":"修订、开启代码高亮"},{"hash":"4022236a8be2fde28475ea3f791945d4835e670d","time":1758850679000,"email":"1095370199@qq.com","author":"KurimulaAiri","message":"修订并新增一篇"}]},"readingTime":{"minutes":25.48,"words":7645},"filePathRelative":"art/learning/master/major/OperatingSystem/Memory.md","excerpt":"<h2>内存的基础知识 👍</h2>\\n<p>内存可存放数据。程序执行前需要先放到内存中才能被 CPU 处理——缓和 CPU 与硬盘之间的速度矛盾</p>\\n<p>内存地址从 0 开始，每个地址对应一个存储单元<br>\\n内存中也有一个一个的“小房间”，每个小房间就是一个“存储单元”<br>\\n如果计算机“按字节编址”则每个存储单元大小为 1 字节，即 1B ，即 8 个二进制位<br>\\n如果字长为 16 位的计算机“按字编址”，则每个存储单元大小为 1 个字;每个字的大小为 16 个二进制位</p>\\n<h2>一些数量单位</h2>\\n<p>1 B = 8 位（bit）<br>\\n1 KB = 1024 B = <span v-pre=\\"\\" class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><msup><mn>2</mn><mn>10</mn></msup></mrow><annotation encoding=\\"application/x-tex\\">2^{10}</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.8141em;\\"></span><span class=\\"mord\\"><span class=\\"mord\\">2</span><span class=\\"msupsub\\"><span class=\\"vlist-t\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.8141em;\\"><span style=\\"top:-3.063em;margin-right:0.05em;\\"><span class=\\"pstrut\\" style=\\"height:2.7em;\\"></span><span class=\\"sizing reset-size6 size3 mtight\\"><span class=\\"mord mtight\\"><span class=\\"mord mtight\\">10</span></span></span></span></span></span></span></span></span></span></span></span> B<br>\\n1 MB = 1024 KB = <span v-pre=\\"\\" class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><msup><mn>2</mn><mn>20</mn></msup></mrow><annotation encoding=\\"application/x-tex\\">2^{20}</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.8141em;\\"></span><span class=\\"mord\\"><span class=\\"mord\\">2</span><span class=\\"msupsub\\"><span class=\\"vlist-t\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.8141em;\\"><span style=\\"top:-3.063em;margin-right:0.05em;\\"><span class=\\"pstrut\\" style=\\"height:2.7em;\\"></span><span class=\\"sizing reset-size6 size3 mtight\\"><span class=\\"mord mtight\\"><span class=\\"mord mtight\\">20</span></span></span></span></span></span></span></span></span></span></span></span> B<br>\\n1 GB = 1024 MB = <span v-pre=\\"\\" class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><msup><mn>2</mn><mn>30</mn></msup></mrow><annotation encoding=\\"application/x-tex\\">2^{30}</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.8141em;\\"></span><span class=\\"mord\\"><span class=\\"mord\\">2</span><span class=\\"msupsub\\"><span class=\\"vlist-t\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.8141em;\\"><span style=\\"top:-3.063em;margin-right:0.05em;\\"><span class=\\"pstrut\\" style=\\"height:2.7em;\\"></span><span class=\\"sizing reset-size6 size3 mtight\\"><span class=\\"mord mtight\\"><span class=\\"mord mtight\\">30</span></span></span></span></span></span></span></span></span></span></span></span> B<br>\\n1 TB = 1024 GB = <span v-pre=\\"\\" class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><msup><mn>2</mn><mn>40</mn></msup></mrow><annotation encoding=\\"application/x-tex\\">2^{40}</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.8141em;\\"></span><span class=\\"mord\\"><span class=\\"mord\\">2</span><span class=\\"msupsub\\"><span class=\\"vlist-t\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.8141em;\\"><span style=\\"top:-3.063em;margin-right:0.05em;\\"><span class=\\"pstrut\\" style=\\"height:2.7em;\\"></span><span class=\\"sizing reset-size6 size3 mtight\\"><span class=\\"mord mtight\\"><span class=\\"mord mtight\\">40</span></span></span></span></span></span></span></span></span></span></span></span> B</p>","autoDesc":true}');export{y as comp,m as data};
