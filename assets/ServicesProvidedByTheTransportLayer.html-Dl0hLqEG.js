import{_ as m}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,a as s,d as a,b as e,e as l,w as c,r as n,o}from"./app-ZRIpC7VA.js";const d={};function u(y,t){const p=n("MarkMap"),r=n("RouteLink");return o(),i("div",null,[t[6]||(t[6]=s("h2",{id:"传输层概述",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#传输层概述"},[s("span",null,"传输层概述")])],-1)),a(p,{content:"eJyFVFtLG0EUfs+vGPBtIeC1UKFPLYVCH4S29FlsoEXFIlJKS2W9kMSYzUYbjbmZGBMNptnEVs2ai/kvds7M7lP+Qs/sJJvQVArLsjNzvu9855tz1uv1epbnVxeX5z/OeghZWFlaWX2+6vN98b30ffItzZJp3F2e//z2w7u197gaH/cIiGeM0FbOuvsOl5vsbNPq1HBrjPByFfRTntym7TSPlcTeGLHVpNUJ3KtpRZHnoNcV5V7NsFzAqvqp2WTphsCYKjUv+M4tGAhI8dKux+Ml7FeJbeseVEEIrqo66DUX4vKxoypt7POUKTZ3f/DyLn70Qa+fzpHf6gZ582yOULPAzzXQdMsw/iJAtOAYoIV4gWXBQwcrUcgkKyKK8mplYdG3RqAYZ5EiVOKKQp6Qr+QFxqZrkFFnXf5v3VYYYlWsEU9k4by9x5tpalZk7W5d1Ay5bkAjhj723RCCXEaMgaCfXzYdl9IahE4gUaLtDgKGK+u7gO77szxbdA/I+PrE+OSUosgIGYWlgWmCfmFttZGINiJWvtwDJrftgGadbUhRqAga7sXwRNMyagNuZJ5en348MTNBuq0gj9Sg/pOaGvg1ahZZrmVvXIMR7LZ2hHow8ixYR/DD6nm2wpKbA35BPbn+aGZmaua/CdA1CGWxIOkgGMcYLqiC4o1o6S8u5QeCRK1qknZOepCChrpgPywcF32Nmp0tBNNmBG8MwdQUyG4rCekS6Hu2usEOakwTbcbiN6AmRAtEw6NXDYUkXnVPhF6lzaL0QQbjkTtqsgOd9I6QfnqhHbnc9NiNLHYzmn5A5KRhoZCMYZVTfmLQRoE2j4QrKYEa7jqoG3YswU5Vdu1MpTMWzgoCDXkI0YiiUDMPrS1Jqiii4NsbNBK7p+fI4a2iYBehENF3XmeuRol46gpL+AcdNWNiVxvh7MmM7snmFL8lPUrvUnLe5XiIfHYmj0FW5xj5sUYcZrTCzuR6Ped0hHRJYtBhp1i09l6N4SN86mSGbRMcRpgdXAl9bT/+SaCl2jEVCufO0THaz9Rz624L63OGNZ4bFiC6Vmp4SIAwyRUgUyMCGxo9Q8McjjwULqUAW81C4ww6ZZFdKqnhnP4BR4WRVA=="}),t[7]||(t[7]=e('<p>两台主机的两个应用通过 <code>IP + 端口号</code>（套接字） 实现通信</p><p>套接字分为： TCP 套接字和 UDP 套接字</p><div class="hint-container warning"><p class="hint-container-title">注意</p><ul><li><p>两台主机的端口号是相互独立的</p></li><li><p>TCP 、 UDP 的端口号也是相互独立的</p></li><li><p>当两个进程之间需要进行通信时，需要指明：</p><ol><li><p>使用哪种传输层协议</p></li><li><p>本进程绑定的端口号</p></li><li><p>对方 IP 地址和端口号</p></li></ol></li></ul></div><h3 id="熟知端口号" tabindex="-1"><a class="header-anchor" href="#熟知端口号"><span>熟知端口号</span></a></h3><p>0~1023 为熟知端口号，开发的时候一般不使用</p><p>其他端口号在实际开发时没有特别严格的限制，只要在本机没有被使用的端口号都可以使用</p><p>端口号分类只是一种“建议标准”，而非“强制标准”</p><div class="hint-container tip"><p class="hint-container-title">常见熟知端口号</p><table><thead><tr><th style="text-align:center;">应用程序</th><th style="text-align:center;">FTP</th><th style="text-align:center;">TELNET</th><th style="text-align:center;">SMTP</th><th style="text-align:center;">DNS</th><th style="text-align:center;">TFTP</th><th style="text-align:center;">HTTP</th><th style="text-align:center;">SNMP</th></tr></thead><tbody><tr><td style="text-align:center;">端口号</td><td style="text-align:center;">21</td><td style="text-align:center;">23</td><td style="text-align:center;">25</td><td style="text-align:center;">53</td><td style="text-align:center;">69</td><td style="text-align:center;">80</td><td style="text-align:center;">161</td></tr></tbody></table></div><h3 id="有连接和无连接" tabindex="-1"><a class="header-anchor" href="#有连接和无连接"><span>有连接和无连接</span></a></h3><p>有连接：在传输数据前先打招呼，先确认对方已经准备好接收数据。传输结束时也要告知对方已结束</p><p>无连接：不打招呼，直接把数据传给对方</p><h3 id="可靠传输和不可靠传输" tabindex="-1"><a class="header-anchor" href="#可靠传输和不可靠传输"><span>可靠传输和不可靠传输</span></a></h3><p>可靠传输：接收方使用“确认机制”让发送方知道哪些数据已经被正确接收</p><p>不可靠的：接收方无论收没收到数据、数据是否正确，都不给发送方反馈</p><h2 id="udp-协议" tabindex="-1"><a class="header-anchor" href="#udp-协议"><span>UDP 协议</span></a></h2><h3 id="udp-数据报" tabindex="-1"><a class="header-anchor" href="#udp-数据报"><span>UDP 数据报</span></a></h3><p>传输层收到应用层的数据后会在其首部添加一个 8 B 大小的 UDP 首部</p><p>UDP 数据报有以下特点</p><ul><li><p>UDP 首部很小只占 8 B</p></li><li><p>UDP 每次传输一个完整的报文，不支持报文自动拆分、重装</p></li><li><p>UDP 是无连接的、不可靠的（可靠性可以交给应用层处理），也不支持拥塞控制</p></li><li><p>UDP 支持一对一（封装成单播 IP 数据报）、一对多传输（封装成广播 / 多播 IP 数据报）</p></li></ul><figure><img src="//store.s1r0ko.top/svg/m/cn/24/1_ver_1.svg" alt="UDP 数据报格式" tabindex="0" loading="lazy"><figcaption>UDP 数据报格式</figcaption></figure><div class="hint-container warning"><p class="hint-container-title">注意</p><ul><li>由于 UDP 不支持报文拆分和重装，因此应用层的报文长度不能超过 UDP 协议上限</li></ul><p>UDP 数据报中，首部固定占 8 B</p><p>首部各字段及其作用：</p><table><thead><tr><th style="text-align:center;">字段名</th><th style="text-align:center;">作用</th></tr></thead><tbody><tr><td style="text-align:center;">源端口号</td><td style="text-align:center;">发送进程的端口号（如果不需要对方回复可以全设置为 0 ）</td></tr><tr><td style="text-align:center;">目的端口号</td><td style="text-align:center;">接收进程的端口号（必填）</td></tr><tr><td style="text-align:center;">UDP 长度</td><td style="text-align:center;">包含首部，以“字节”为单位</td></tr><tr><td style="text-align:center;">UDP 检验和</td><td style="text-align:center;">由发送方的传输计算并填入校验和，接收方的传输层检测是否有差错（如果无需校验，可以填入全 0 ）</td></tr></tbody></table><p>数据部分为一个完整的应用层报文</p><p>UDP 数据报理论最大长度为 <strong>65535 B</strong> （ 64 Kb ）这是由 <strong>IP 数据报数据部分长度限制</strong>（ IP 数据报数据部分最长为 65535 B ）所限制的</p></div><h3 id="udp-检验" tabindex="-1"><a class="header-anchor" href="#udp-检验"><span>UDP 检验</span></a></h3><figure><img src="//store.s1r0ko.top/svg/m/cn/24/2_ver_1.svg" alt="UDP 检验过程格式" tabindex="0" loading="lazy"><figcaption>UDP 检验过程格式</figcaption></figure><p>对于<strong id="blue-msg">发送方</strong>，会在交付给网络层之前进行<strong>检验和计算</strong>，并将结果填入 UDP 首部的检验和字段中，具体步骤如下</p><ol><li><p>传输层 UDP 协议在计算检验和之前，先添加一个伪首部</p></li><li><p>把伪首部、首部、数据部分以 16 bit 为一组，进行<a href="text.com">二进制加法</a>（最高位产生的进位需要回卷）</p></li><li><p>将最终的加法结果逐位取反，就得到 16 bit 的检验和，将其填入 UDP 首部</p></li><li><p>去掉伪首部，并将 UDP 数据报交给网络层，封装成 IP 数据报</p></li></ol><p>对于<strong id="blue-msg">接收方</strong>收到数据后也会有相似的操作</p>',26)),s("ol",null,[t[3]||(t[3]=s("li",null,[s("p",null,"网络层向传输层递交 UDP 数据报")],-1)),t[4]||(t[4]=s("li",null,[s("p",null,"传输层在 UDP 数据报之前，添加伪首部")],-1)),s("li",null,[s("p",null,[t[1]||(t[1]=l("吧伪首部、 UDP 首部、数据部分以 16 bit 为一组，进行")),a(r,{to:"/art/learning/master/major/ComputerNetworks/test.html"},{default:c(()=>t[0]||(t[0]=[l("二进制加法")])),_:1}),t[2]||(t[2]=l("（最高位的进位需要回卷）"))])]),t[5]||(t[5]=s("li",null,[s("p",null,"如果加法结果全为 1 ，说明没有比特错误，于是接收该 UDP 数据报，并根据目的端口号，向应用层递交报文；如果加法结果不全为 1 ，说明有差错，于是丢弃该 UDP 数据报")],-1))]),t[8]||(t[8]=s("ul",null,[s("li",null,[s("strong",null,"二进制计算过程")])],-1)),t[9]||(t[9]=s("p",null,"假设有 48 bit 数据为：",-1)),t[10]||(t[10]=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mn",null,"0101"),s("mtext",null," "),s("mn",null,"0000"),s("mtext",null," "),s("mn",null,"0110"),s("mtext",null," "),s("mn",null,"0101"),s("mspace",{linebreak:"newline"}),s("mn",null,"0110"),s("mtext",null," "),s("mn",null,"1001"),s("mtext",null," "),s("mn",null,"0101"),s("mtext",null," "),s("mn",null,"0001"),s("mspace",{linebreak:"newline"}),s("mn",null,"0110"),s("mtext",null," "),s("mn",null,"0101"),s("mtext",null," "),s("mn",null,"1100"),s("mtext",null," "),s("mn",null,"0101"),s("mspace",{linebreak:"newline"})]),s("annotation",{encoding:"application/x-tex"}," 0101\\ 0000\\ 0110\\ 0101 \\\\ 0110\\ 1001\\ 0101\\ 0001 \\\\ 0110\\ 0101\\ 1100\\ 0101 \\\\ ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0101"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"0000"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"0110"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"0101")]),s("span",{class:"mspace newline"}),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0110"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"1001"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"0101"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"0001")]),s("span",{class:"mspace newline"}),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0110"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"0101"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"1100"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"0101")]),s("span",{class:"mspace newline"})])])])],-1)),t[11]||(t[11]=s("p",null,"计算过程为：",-1)),t[12]||(t[12]=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mtable",{rowspacing:"0.16em",columnalign:"center center",columnspacing:"1em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mtext",null,"    "),s("mn",null,"0101"),s("mtext",null," "),s("mn",null,"0000"),s("mtext",null," "),s("mn",null,"0110"),s("mtext",null," "),s("mn",null,"0101")])])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("munder",{accentunder:"true"},[s("mrow",null,[s("mo",null,"+"),s("mtext",null," "),s("mn",null,"0110"),s("mtext",null," "),s("mn",null,"1001"),s("mtext",null," "),s("mn",null,"0101"),s("mtext",null," "),s("mn",null,"0001")]),s("mo",{stretchy:"true"},"‾")])])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mtext",null,"    "),s("mn",null,"1011"),s("mtext",null," "),s("mn",null,"1001"),s("mtext",null," "),s("mn",null,"1011"),s("mtext",null," "),s("mn",null,"0110")])])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("munder",{accentunder:"true"},[s("mrow",null,[s("mo",null,"+"),s("mtext",null," "),s("mn",null,"0110"),s("mtext",null," "),s("mn",null,"0101"),s("mtext",null," "),s("mn",null,"1100"),s("mtext",null," "),s("mn",null,"0101")]),s("mo",{stretchy:"true"},"‾")])])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mtext",null,"    "),s("mn",null,"0001"),s("mtext",null," "),s("mn",null,"1111"),s("mtext",null," "),s("mn",null,"0111"),s("mtext",null," "),s("mn",null,"1011")])])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mtext",null,"回卷得到：")])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mtext",null,"    "),s("mn",null,"0001"),s("mtext",null," "),s("mn",null,"1111"),s("mtext",null," "),s("mn",null,"0111"),s("mtext",null," "),s("mn",null,"1100")])])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mtext",null,"取反得到：")])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mtext",null,"    "),s("mn",null,"1110"),s("mtext",null," "),s("mn",null,"0000"),s("mtext",null," "),s("mn",null,"1000"),s("mtext",null," "),s("mn",null,"0011")])])])])]),s("annotation",{encoding:"application/x-tex"}," \\begin{array}{cc} & \\ \\ \\ \\ 0101 \\ 0000 \\ 0110 \\ 0101 \\\\ & \\underline{+ \\ 0110 \\ 1001 \\ 0101 \\ 0001} \\\\ & \\ \\ \\ \\ 1011 \\ 1001 \\ 1011 \\ 0110 \\\\ & \\underline{+ \\ 0110 \\ 0101 \\ 1100 \\ 0101} \\\\ & \\ \\ \\ \\ 0001 \\ 1111 \\ 0111 \\ 1011 \\\\ & \\text{回卷得到：} \\\\ & \\ \\ \\ \\ 0001 \\ 1111 \\ 0111 \\ 1100 \\\\ & \\text{取反得到：} \\\\ & \\ \\ \\ \\ 1110 \\ 0000 \\ 1000 \\ 0011 \\\\ \\end{array} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"10.8em","vertical-align":"-5.15em"}}),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"5.65em"}},[s("span",{style:{top:"-7.65em"}},[s("span",{class:"pstrut",style:{height:"2.84em"}}),s("span",{class:"mord"})]),s("span",{style:{top:"-6.45em"}},[s("span",{class:"pstrut",style:{height:"2.84em"}}),s("span",{class:"mord"})]),s("span",{style:{top:"-5.25em"}},[s("span",{class:"pstrut",style:{height:"2.84em"}}),s("span",{class:"mord"})]),s("span",{style:{top:"-4.05em"}},[s("span",{class:"pstrut",style:{height:"2.84em"}}),s("span",{class:"mord"})]),s("span",{style:{top:"-2.85em"}},[s("span",{class:"pstrut",style:{height:"2.84em"}}),s("span",{class:"mord"})]),s("span",{style:{top:"-1.65em"}},[s("span",{class:"pstrut",style:{height:"2.84em"}}),s("span",{class:"mord"})]),s("span",{style:{top:"-0.45em"}},[s("span",{class:"pstrut",style:{height:"2.84em"}}),s("span",{class:"mord"})]),s("span",{style:{top:"0.75em"}},[s("span",{class:"pstrut",style:{height:"2.84em"}}),s("span",{class:"mord"})]),s("span",{style:{top:"1.95em"}},[s("span",{class:"pstrut",style:{height:"2.84em"}}),s("span",{class:"mord"})])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"5.15em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"5.65em"}},[s("span",{style:{top:"-7.81em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mspace"}," "),s("span",{class:"mspace"}," "),s("span",{class:"mspace"}," "),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"0101"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"0000"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"0110"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"0101")])]),s("span",{style:{top:"-6.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord underline"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.6444em"}},[s("span",{style:{top:"-2.7567em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"underline-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"+"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"0110"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"1001"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"0101"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"0001")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2833em"}},[s("span")])])])])])]),s("span",{style:{top:"-5.41em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mspace"}," "),s("span",{class:"mspace"}," "),s("span",{class:"mspace"}," "),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"1011"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"1001"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"1011"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"0110")])]),s("span",{style:{top:"-4.21em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord underline"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.6444em"}},[s("span",{style:{top:"-2.7567em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"underline-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"+"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"0110"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"0101"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"1100"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"0101")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2833em"}},[s("span")])])])])])]),s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mspace"}," "),s("span",{class:"mspace"}," "),s("span",{class:"mspace"}," "),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"0001"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"1111"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"0111"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"1011")])]),s("span",{style:{top:"-1.81em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord text"},[s("span",{class:"mord cjk_fallback"},"回卷得到：")])])]),s("span",{style:{top:"-0.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mspace"}," "),s("span",{class:"mspace"}," "),s("span",{class:"mspace"}," "),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"0001"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"1111"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"0111"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"1100")])]),s("span",{style:{top:"0.59em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord text"},[s("span",{class:"mord cjk_fallback"},"取反得到：")])])]),s("span",{style:{top:"1.79em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mspace"}," "),s("span",{class:"mspace"}," "),s("span",{class:"mspace"}," "),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"1110"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"0000"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"1000"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"0011")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"5.15em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}})])])])])])])],-1)),t[13]||(t[13]=e('<p>得到检验和为：<strong id="red-msg">1110 0000 1000 0011</strong></p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>对于伪首部中的字段</p><table><thead><tr><th style="text-align:center;">字段名</th><th style="text-align:center;">含义</th></tr></thead><tbody><tr><td style="text-align:center;">源 IP 地址</td><td style="text-align:center;">发送方的 IP 地址</td></tr><tr><td style="text-align:center;">目的 IP 地址</td><td style="text-align:center;">接收方的 IP 地址</td></tr><tr><td style="text-align:center;">全零</td><td style="text-align:center;">占 1 B，全 0 ，用于填充</td></tr><tr><td style="text-align:center;">协议</td><td style="text-align:center;">传输层协议（ UDP 为 17 ）</td></tr><tr><td style="text-align:center;">数据长度</td><td style="text-align:center;">UDP 数据报的长度（和首部中的 UDP 长度字段相同）</td></tr></tbody></table><p>对于为什么在过程中需要添加伪首部不需要详细讨论</p></div><h2 id="tcp-协议" tabindex="-1"><a class="header-anchor" href="#tcp-协议"><span>TCP 协议</span></a></h2><p>TCP 的传输单元称为 <strong>TCP 报文段 / TCP 段</strong> 因 TCP 协议可对应用层报文进行拆分传输而得名</p><p>TCP 传输过程中分为三个步骤，这三个步骤中传输的数据单元均为 TCP 段</p><ol><li><p>建立连接（三次握手）</p></li><li><p>数据传输</p></li><li><p>释放连接（四次挥手）</p></li></ol><figure><img src="//store.s1r0ko.top/svg/m/cn/24/3_ver_2.svg" alt="TCP 传输过程" tabindex="0" loading="lazy"><figcaption>TCP 传输过程</figcaption></figure><h3 id="tcp-数据报" tabindex="-1"><a class="header-anchor" href="#tcp-数据报"><span>TCP 数据报</span></a></h3><p>TCP 数据报有以下特点：</p><ul><li><p>TCP 首部更大，占 20B~60B</p></li><li><p>TCP 支持报文自动拆分、重装，因此可以传输长报文</p></li><li><p>TCP 是有连接的、可靠的、支持拥塞控制</p></li><li><p>TCP 仅支持一对一传输（因为通信双方的传输层必须先建立连接）</p></li></ul><p>TCP 支持报文拆分和重装，所以可以进行长报文的传输</p>',11))])}const x=m(d,[["render",u]]),P=JSON.parse('{"path":"/art/learning/master/major/ComputerNetworks/ServicesProvidedByTheTransportLayer.html","title":"传输层提供的服务","lang":"zh-CN","frontmatter":{"title":"传输层提供的服务","date":"2025-08-04T00:00:00.000Z","icon":"earth-americas","order":24,"category":["408","计算机网络","考研"],"description":"传输层概述 两台主机的两个应用通过 IP + 端口号（套接字） 实现通信 套接字分为： TCP 套接字和 UDP 套接字 注意 两台主机的端口号是相互独立的 TCP 、 UDP 的端口号也是相互独立的 当两个进程之间需要进行通信时，需要指明： 使用哪种传输层协议 本进程绑定的端口号 对方 IP 地址和端口号 熟知端口号 0~1023 为熟知端口号，开发...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"传输层提供的服务\\",\\"image\\":[\\"//store.s1r0ko.top/svg/m/cn/24/1_ver_1.svg\\",\\"//store.s1r0ko.top/svg/m/cn/24/2_ver_1.svg\\",\\"//store.s1r0ko.top/svg/m/cn/24/3_ver_2.svg\\"],\\"datePublished\\":\\"2025-08-04T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-06T07:22:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"KurimulaAiri\\",\\"url\\":\\"https://github.com/KurimulaAiri\\"}]}"],["meta",{"property":"og:url","content":"https://md.s1r0ko.top/art/learning/master/major/ComputerNetworks/ServicesProvidedByTheTransportLayer.html"}],["meta",{"property":"og:site_name","content":"博客与资料库"}],["meta",{"property":"og:title","content":"传输层提供的服务"}],["meta",{"property":"og:description","content":"传输层概述 两台主机的两个应用通过 IP + 端口号（套接字） 实现通信 套接字分为： TCP 套接字和 UDP 套接字 注意 两台主机的端口号是相互独立的 TCP 、 UDP 的端口号也是相互独立的 当两个进程之间需要进行通信时，需要指明： 使用哪种传输层协议 本进程绑定的端口号 对方 IP 地址和端口号 熟知端口号 0~1023 为熟知端口号，开发..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"//store.s1r0ko.top/svg/m/cn/24/1_ver_1.svg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-06T07:22:49.000Z"}],["meta",{"property":"article:published_time","content":"2025-08-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-06T07:22:49.000Z"}]]},"git":{"createdTime":1754295547000,"updatedTime":1754464969000,"contributors":[{"name":"KurimulaAiri","username":"KurimulaAiri","email":"1095370199@qq.com","commits":3,"url":"https://github.com/KurimulaAiri"}]},"readingTime":{"minutes":6.19,"words":1857},"filePathRelative":"art/learning/master/major/ComputerNetworks/ServicesProvidedByTheTransportLayer.md","excerpt":"<h2>传输层概述</h2>\\n<p>两台主机的两个应用通过 <code>IP + 端口号</code>（套接字） 实现通信</p>\\n<p>套接字分为： TCP 套接字和 UDP 套接字</p>\\n<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">注意</p>\\n<ul>\\n<li>\\n<p>两台主机的端口号是相互独立的</p>\\n</li>\\n<li>\\n<p>TCP 、 UDP 的端口号也是相互独立的</p>\\n</li>\\n<li>\\n<p>当两个进程之间需要进行通信时，需要指明：</p>\\n<ol>\\n<li>\\n<p>使用哪种传输层协议</p>\\n</li>\\n<li>\\n<p>本进程绑定的端口号</p>\\n</li>\\n<li>\\n<p>对方 IP 地址和端口号</p>\\n</li>\\n</ol>\\n</li>\\n</ul>\\n</div>","autoDesc":true}');export{x as comp,P as data};
