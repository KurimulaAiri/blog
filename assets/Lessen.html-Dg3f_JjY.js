import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,d as a,a as p,b as i,o as e}from"./app-B2QH-rhA.js";const t={};function h(k,s){return e(),l("div",null,[s[0]||(s[0]=a(`<h2 id="学习大纲" tabindex="-1"><a class="header-anchor" href="#学习大纲"><span>学习大纲</span></a></h2><ul><li><p>springboot</p></li><li><p>nginx</p></li><li><p>redis</p></li><li><p>微服务 —— springcloud</p></li></ul><p>案例：京东秒杀平台</p><p>四阶段需要解决的问题：<strong>高并发、高可用、高性能</strong></p><p>三阶段问题：依赖太多，配置文件太多</p><p>解决方法：使用springboot</p><h2 id="l1-springboot" tabindex="-1"><a class="header-anchor" href="#l1-springboot"><span>L1 springboot</span></a></h2><p>启动器 —— spring-boot-starter-xxx 默认配置</p><p>springboot思想：约束大于配置</p><p>创建springboot项目：</p><p>可使用的方法：idea脚手架、maven</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>springboot2 spring5.0 支持jdk 8</p><p>springboot3 spring6.0 支持jdk17</p><p>使用idea创建时需要使用阿里云镜像，才能使用jdk 8</p><p><code>https://start.aliyun.com</code></p></div><figure><img src="//store.s1r0ko.top/images/cy_s4_p1_ver1.png" alt="使用idea springboot脚手架创建" tabindex="0" loading="lazy"><figcaption>使用idea springboot脚手架创建</figcaption></figure><figure><img src="//store.s1r0ko.top/images/cy_s4_p2_ver1.png" alt="添加需要的依赖项" tabindex="0" loading="lazy"><figcaption>添加需要的依赖项</figcaption></figure><figure><img src="//store.s1r0ko.top/images/cy_s4_p3_ver1.png" alt="通过maven创建项目" tabindex="0" loading="lazy"><figcaption>通过maven创建项目</figcaption></figure><div class="code-block-title"><div class="code-block-title-bar"><span class="title" data-title="修改maven文件导入依赖">修改maven文件导入依赖</span></div><div class="language-xml line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="xml" style="--vp-collapsed-lines:15;--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">project</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> xmlns</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://maven.apache.org/POM/4.0.0&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> xmlns:xsi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  xsi:schemaLocation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">modelVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;4.0.0&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">modelVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;com.cykj&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;demo1&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;1.0-SNAPSHOT&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;jar&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  &lt;!-- 继承springboot --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">parent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;spring-boot-starter-parent&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    &lt;!-- jdk 8 不支持 3.0的springboot --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;2.6.13&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">relativePath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/&gt; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&lt;!-- lookup parent from repository --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">parent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;demo1&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;http://maven.apache.org&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">project.build.sourceEncoding</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;UTF-8&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">project.build.sourceEncoding</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">maven.compiler.source</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;8&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">maven.compiler.source</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">maven.compiler.release</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;8&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">maven.compiler.release</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">maven.compiler.target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;8&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">maven.compiler.target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   &lt;!-- 导入springboot启动器、内置tomcat mvc --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;spring-boot-starter-web&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div></div><p>默认生成的主函数需要修改成下图的样子</p><ul><li><p>替换函数内容为：<code>SpringApplication.run(App.class, args);</code></p></li><li><p>替换类注解为：<code>@SpringBootApplication</code></p></li></ul><figure><img src="//store.s1r0ko.top/images/cy_s4_p4_ver1.png" alt="主函数配置" tabindex="0" loading="lazy"><figcaption>主函数配置</figcaption></figure><p>默认包扫描为启动类同层的下一级包</p><p>假设文件目录结构为：</p><div class="code-block-title"><div class="code-block-title-bar"><span class="title" data-title="文件目录结构">文件目录结构</span></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">src</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">└──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> java</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> com</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cykj</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> App.java</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Test.java</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> controller</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">               └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> HelloController.java</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> resources</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> application.yml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>那么默认的包扫描范围为：<code>com.cykj.**</code> （<code>**</code> 表示任意层级），这里的 <code>HelloController</code> 类会被扫描到，而 <code>Test.java</code> 类不会被扫描到。</p><p>如果需要扫描其他层级的包，可以在 <code>@SpringBootApplication</code> 注解中添加 <code>scanBasePackages</code> 属性，指定需要扫描的包路径。</p><p>请求静态文件默认在resource下的static目录</p><p>比如这个地址就会直接访问static下的1.jpg <code>http://localhost:9900/1.jpg</code></p><figure><img src="//store.s1r0ko.top/images/cy_s4_p5_ver1.png" alt="出现这种问题是没有配置数据库导致的" tabindex="0" loading="lazy"><figcaption>出现这种问题是没有配置数据库导致的</figcaption></figure>`,27)),p(" todo "),s[1]||(s[1]=a(`<p>两种配置文件都可以使用，properties优先级高于yml</p><p>mybatis的相关配置</p><figure><img src="//store.s1r0ko.top/images/cy_s4_p6_ver1.png" alt="image-20250219161421386" tabindex="0" loading="lazy"><figcaption>image-20250219161421386</figcaption></figure><p>拦截器：</p><p>文件上传：</p><hr><h2 id="l2" tabindex="-1"><a class="header-anchor" href="#l2"><span>L2</span></a></h2><p>文件上传的大小有限制，现阶段问题是如果上传文件太大就无法上传</p><p>在配置里可以修改上传大小限制</p><hr><p>相对ssm springboot有什么优点 ==&gt; 启动器 ===&gt;springboot如何装配 === 启动器原理 ==&gt; 了解过哪些启动器</p><p>===》会自动导依赖，进行一些默认配置</p><p>案例，写一个验证码的启动器来了解启动器的配置</p><h3 id="验证码启动器" tabindex="-1"><a class="header-anchor" href="#验证码启动器"><span>验证码启动器</span></a></h3><p>1、创建一个独立的工程</p><p>2、导入相关依赖</p><div class="language-xml line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="xml" style="--vp-collapsed-lines:15;--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">project.build.sourceEncoding</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;UTF-8&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">project.build.sourceEncoding</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">spring.boot.version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;2.6.13&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">spring.boot.version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    &lt;!-- 自动装配 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;spring-boot-autoconfigure&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;\${spring.boot.version}&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    &lt;!-- 配置处理器 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;spring-boot-configuration-processor&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;\${spring.boot.version}&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>3、默认配置信息 additional-spring-configuration-metadata.json （例如：宽度，高度，字数，干扰线）</p><p>默认结构</p><div class="language-json line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="json" style="--vp-collapsed-lines:15;--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;groups&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [],</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;properties&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;cykj.code.height&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;type&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;java.lang.Integer&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;description&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;验证码高度&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;defaultValue&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">50</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;cykj.code.width&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;type&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;java.lang.Integer&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;description&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;验证码宽度&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;defaultValue&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">200</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;cykj.code.line-count&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;type&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;java.lang.Integer&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;description&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;验证码干扰线数量&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;defaultValue&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 这里是配置类里配置项的名称</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;cykj.code.code-count&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 设定类型</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;type&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;java.lang.Integer&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 输入配置项时的提示词</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;description&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;验证码字符数量&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 默认值</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;defaultValue&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">20</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>4、写默认配置选项属性类（将上面的值写在这个类里面）</p><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" style="--vp-collapsed-lines:15;--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> com.cykj.entity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.springframework.boot.context.properties.ConfigurationProperties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * Description:  TODO</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * 验证码配置属性实体类</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * </span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@author</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> Guguguy</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * </span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@version</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 1.0</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * </span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@since</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 2025/2/20 下午3:34</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 设置配置文件内修改配置的键名前缀，会去读取配置文件内cykj.code.开头的配置，会自动覆盖</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 需要在启动类上添加@EnableConfigurationProperties(CodeEntity.class)注解</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">ConfigurationProperties</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">prefix</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;cykj.code&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> CodeEntity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> height </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> width </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 150</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> codeCount </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> lineCount </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> CodeEntity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> CodeEntity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Integer</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> codeCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Integer</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> height</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Integer</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> lineCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Integer</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">codeCount</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> codeCount;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">height</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> height;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">lineCount</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> lineCount;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">width</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> width;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Integer</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> getCodeCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> codeCount;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> setCodeCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Integer</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> codeCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">codeCount</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> codeCount;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Integer</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> getHeight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> height;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> setHeight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Integer</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> height</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">height</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> height;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Integer</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> getLineCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> lineCount;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> setLineCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Integer</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> lineCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">lineCount</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> lineCount;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Integer</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> getWidth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> width;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> setWidth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Integer</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">width</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> width;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>5、验证码具体业务</p><p>6、写到配置类上（具体的业务加载到ioc容器去）</p><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" style="--vp-collapsed-lines:15;--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> com.cykj.config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> com.cykj.entity.CodeEntity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> com.cykj.service.CodeService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.springframework.boot.context.properties.EnableConfigurationProperties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.springframework.context.annotation.Bean</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.springframework.context.annotation.Configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * Description: TODO</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * 验证码配置类</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * </span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@author</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> Guguguy</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * </span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@version</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 1.0</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * </span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@since</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 2025/2/20 下午3:49</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Configuration</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 开启配置属性自动注入</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">EnableConfigurationProperties</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">CodeEntity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> CodeConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> CodeEntity</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> codeEntity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 构造器注入，仅限上面的@EnableConfigurationProperties(CodeEntity.class)里面的CodeEntity能注入</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> CodeConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">CodeEntity</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> codeEntity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">codeEntity</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> codeEntity;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Bean</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> CodeService</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> codeService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> CodeService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(codeEntity);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>7、spring.factories 自动加载配置类 开启自动加载</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">org.springframework.boot.autoconfigure.EnableAutoConfiguration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">com.cykj.config.CodeConfig</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>8、打包到本地，安装到本地仓库</p><p>然后就可以通过依赖注入的方式获取验证码</p><p>创建课程案例（京东秒杀平台）</p><p>vant ui</p><h2 id="l3-nginx" tabindex="-1"><a class="header-anchor" href="#l3-nginx"><span>L3 nginx</span></a></h2><p>目前架构：单体架构 ===》 无法承受过多访问 ===》诞生分布式集群 ===》 同一个项目部署到不同的云服务器上</p><p>对完整项目进行拆分（例如案例中的商品模块，用户模块，订单模块。。。）</p><p>为此需要使用nginx</p><p>nginx ===》web服务器 ===》部署静态资源性能比较好（前端页面相关）</p><p>动静分离 ===》动态资源部署到tomcat，静态资源部署到nginx</p><p>nginx还能进行负载均衡，代理转发</p><p>弹性云服务器</p><h3 id="负载均衡有几种方式-常用前两钟" tabindex="-1"><a class="header-anchor" href="#负载均衡有几种方式-常用前两钟"><span>负载均衡有几种方式(常用前两钟)</span></a></h3><p>1、轮询（默认） 如果服务器承受压力不同就不太适合用这个，可以通过权重来配置转发的概率</p><p>2、加权轮询</p><p>3、ip_hash（同一个ip只访问一个服务器）</p><p>应用于验证码请求登录，这个还有一个解决方法就是redis</p><p>4、最小连接（least_conn）</p><p>寻找连接数最少的服务器进行转发</p><p>5、url_hash</p><p>同一地址使用同一台服务器</p><p>6、fair（第三方）</p><p>需要装第三方依赖</p><p>面试题：负载均衡的策略</p><p>这个也是面试题</p><h3 id="代理转发" tabindex="-1"><a class="header-anchor" href="#代理转发"><span>代理转发：</span></a></h3><h4 id="正向代理" tabindex="-1"><a class="header-anchor" href="#正向代理"><span>正向代理</span></a></h4><p>访问的网站是已知的</p><h4 id="反向代理" tabindex="-1"><a class="header-anchor" href="#反向代理"><span>反向代理</span></a></h4><p>像代购，他去帮你拿</p><p>你不知道访问的是什么具体服务器ip</p><p>作业：秒杀首页部署nginx，后台请求、vant ui</p><h2 id="l4-redis" tabindex="-1"><a class="header-anchor" href="#l4-redis"><span>L4 redis</span></a></h2><p>面试题：</p><p>日志打印 log4j</p><p>springboot有什么优势（相较于ssm）</p><p>springboot如何自动装配</p><p>自定义启动器如何实现</p><p>nginx有什么优点，负载均衡的策略有哪些</p><p>redis常用数据类型</p><h3 id="出现背景" tabindex="-1"><a class="header-anchor" href="#出现背景"><span>出现背景</span></a></h3><p>解决session使用场景</p><p>以及缓解高并发情况下的数据库压力</p><h3 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案"><span>解决方案</span></a></h3><p>添加一个中间件，将各个session的内容存放到中间件中</p><p>验证码存在redis中</p><h3 id="应用场景" tabindex="-1"><a class="header-anchor" href="#应用场景"><span>应用场景</span></a></h3><p>秒杀平台的商品存在这里</p><h3 id="redis-高速缓存-非关系型数据库-key-value" tabindex="-1"><a class="header-anchor" href="#redis-高速缓存-非关系型数据库-key-value"><span>Redis 高速缓存（非关系型数据库 ： key：value）</span></a></h3><p>安装Redis</p><p>key一般存字符串 value存对于字符串类型 <strong>string hash set list zset</strong></p><p>redis 的五种数据类型， incr decr 分别可以让数值加一减一</p><p>set key value 设定值</p><p>get key 获取值</p><h4 id="list-双向链表" tabindex="-1"><a class="header-anchor" href="#list-双向链表"><span>list ：双向链表</span></a></h4><p>key=goods 里面存十个商品</p><p>获取长度，还有商品再进行弹出</p><p>rpush存入</p><p>常用命令：lpush rpush lpop rpop llen</p><h4 id="hash-存对象" tabindex="-1"><a class="header-anchor" href="#hash-存对象"><span>hash：存对象</span></a></h4><p>常用命令hset hget hlen （长度） hsetnx（当字段不存在时才会存入）hvals 查看内容</p><h4 id="set-无序集合" tabindex="-1"><a class="header-anchor" href="#set-无序集合"><span>set：无序集合</span></a></h4><h4 id="zset-有序集合" tabindex="-1"><a class="header-anchor" href="#zset-有序集合"><span>zset：有序集合</span></a></h4><p>zadd key 权重 值</p><p>java使用redis</p><p>导依赖</p><p>配置</p><p>使用</p><p>原生对object不太友好</p><p>改写进行序列化</p><h2 id="l5-redis-的使用" tabindex="-1"><a class="header-anchor" href="#l5-redis-的使用"><span>L5 redis 的使用</span></a></h2><h3 id="登录鉴权" tabindex="-1"><a class="header-anchor" href="#登录鉴权"><span>登录鉴权</span></a></h3><p>如同三阶，使用拦截器，只不过将token和信息存入redis内</p><p>sa-token</p><p>redis存秒杀商品信息</p><p>持久化存储</p><p>redis 雪崩 穿透 击穿</p><p>nacos</p><h2 id="l6-redis" tabindex="-1"><a class="header-anchor" href="#l6-redis"><span>L6 redis</span></a></h2><p>redis 的持久化存储</p><p>一段时间后会将内存的数据存储到文件中</p><p>在两次备份中redis崩溃就会导致数据丢失</p><p>redis每一步操作都会记录下来（日志文件）==&gt; AOF</p><p>redis的解决方案是 rdb + aof （在下次间隔完成存储之后删除上一次的日志文件）</p><p>面试题：redis如果实现持久化</p><p>redis 雪崩 穿透 击穿</p><h3 id="击穿" tabindex="-1"><a class="header-anchor" href="#击穿"><span>击穿</span></a></h3><p>高并发场景下，短时间内一个热点key失效 / 被删除，此时有大量请求达到数据库，然后数据库崩溃</p><h4 id="解决方案-1" tabindex="-1"><a class="header-anchor" href="#解决方案-1"><span>解决方案</span></a></h4><p>1、加分布式锁，互斥锁，只有一个请求去请求数据库，其他请求等待数据库写入缓存后再去读取缓存数据</p><p>2、热点key永不失效</p><h3 id="穿透" tabindex="-1"><a class="header-anchor" href="#穿透"><span>穿透</span></a></h3><p>高并发场景下，key不存在，数据库也没有数据，请求会直接穿透缓存，到达数据库，大量请求穿透缓存到达数据库然后崩溃</p><h4 id="解决方案-2" tabindex="-1"><a class="header-anchor" href="#解决方案-2"><span>解决方案</span></a></h4><p>1、在缓存中写一个空数据 exp：hostGoods：200 =》 set （。。。，null），其他人访问到的就是空数据</p><h3 id="雪崩" tabindex="-1"><a class="header-anchor" href="#雪崩"><span>雪崩</span></a></h3><p>高并发场景下，同一时间，大量热点key同时失效 / 被删除，请求到达数据库，数据库崩溃</p><h4 id="解决方案-3" tabindex="-1"><a class="header-anchor" href="#解决方案-3"><span>解决方案</span></a></h4><p>1、热点key永不失效</p><p>2、让key间隔失效</p><p>3、分布式锁，只让一个请求去访问数据库</p><h3 id="nacos-微服务管理服务" tabindex="-1"><a class="header-anchor" href="#nacos-微服务管理服务"><span>nacos（微服务管理服务）</span></a></h3><p>复杂管理所有后台应用（springboot模块、redis数据库、mysql数据库等）</p><p>注册中心</p><h4 id="微服务-一种设置思想" tabindex="-1"><a class="header-anchor" href="#微服务-一种设置思想"><span>微服务(一种设置思想)</span></a></h4><p>具体实施：springcloud / springcloud alibaba （nacos）</p><p>1、分布式（微服务）集群架构：</p><p>​ 服务的拆分原则：遵循单一原则</p><p>nacos注册中心</p><p>安装，导入依赖</p><p>springcloud和springcloud alibaba</p><p>子工程导入nacos-discovery</p><p>配置文件</p><p>如何知道微服务存活：使用心跳线程</p><p>微服务，服务之间相互调用</p><p>restTemplate</p><p>feign</p><p>openFeign</p><p>HttpClient</p><p>restTemplate ==》 类 ==》ioc ==》@bean注入</p><p>1、将restTemplate放入ioc</p><p>2、用户微服务调用商品微服务（两者都需要注册到nacos上）</p><p>商品测试接口，用户去调用这个接口测试</p><p>实现负载均衡的组件</p><h2 id="l7-nacos-进阶" tabindex="-1"><a class="header-anchor" href="#l7-nacos-进阶"><span>L7 nacos 进阶</span></a></h2><p>微服务的使用场景</p><p>并发量大的情况下、不同功能的并发量不同</p><p>集群架构：与集群部署的区别在于按需求功能进行拆分，某个服务出问题不会影响到其他服务、保证项目正常运行</p><p>解决高并发问题，构建高性能的服务器</p><p>拆分微服务可以更加方便项目的打包部署，方便功能的更新迭代</p><p>单体架构：代码修改（功能更新了）需要重新打包、重新部署，影响收益</p><h3 id="微服务五大组件" tabindex="-1"><a class="header-anchor" href="#微服务五大组件"><span>微服务五大组件：</span></a></h3><h4 id="注册中心-统一管理微服务" tabindex="-1"><a class="header-anchor" href="#注册中心-统一管理微服务"><span>注册中心（统一管理微服务）</span></a></h4><p>实现方式：nacos、eureka等</p><h4 id="配置中心-统一管理配置" tabindex="-1"><a class="header-anchor" href="#配置中心-统一管理配置"><span>配置中心（统一管理配置）</span></a></h4><p>包含redis配置，数据库配置等</p><p>实现方式：springcloud config、nacos</p><h4 id="负载均衡" tabindex="-1"><a class="header-anchor" href="#负载均衡"><span>负载均衡</span></a></h4><p>nginx、loadbalanced</p><h4 id="api网关-统一暴露api接口" tabindex="-1"><a class="header-anchor" href="#api网关-统一暴露api接口"><span>API网关（统一暴露api接口）</span></a></h4><p>实现方式：zuul、gateway</p><h4 id="服务包保护-限量访问、限流、熔断、降级" tabindex="-1"><a class="header-anchor" href="#服务包保护-限量访问、限流、熔断、降级"><span>服务包保护（限量访问、限流、熔断、降级）</span></a></h4><h4 id="其他方面" tabindex="-1"><a class="header-anchor" href="#其他方面"><span>其他方面</span></a></h4><p>服务间调用：restTemplate、openFeign、HttpClient</p><p>服务链路追踪</p><p>服务日志监控</p><p>nginx和loadbalanced有什么区别：</p><p>nginx：高效的web服务器，用于部署静态资源，作为反向代理服务器进行转发</p><p>修改配置，重启nginx</p><p>服务端调用</p><p>loadbalanced为springcloud体系中，写在代码内部</p><p>无需修改配置，服务会注册到nacos注册中心中</p><p>客户端调用，可以直接转发到对应微服务</p><h3 id="服务之间的调用" tabindex="-1"><a class="header-anchor" href="#服务之间的调用"><span>服务之间的调用</span></a></h3><p>1、restTemplate</p><p>缺点：地址需要写死，不好维护</p><p>2、openFeign</p><p>无感开发，像调用本地service一样调用</p><p>实现步骤：</p><p>1、导入依赖</p><p>2、配置</p><p>3、使用</p><p>feign的参数映射接收</p><h3 id="配置中心" tabindex="-1"><a class="header-anchor" href="#配置中心"><span>配置中心</span></a></h3><h4 id="导入依赖" tabindex="-1"><a class="header-anchor" href="#导入依赖"><span>导入依赖</span></a></h4><h4 id="写配置" tabindex="-1"><a class="header-anchor" href="#写配置"><span>写配置</span></a></h4><p>application.yml 这些配置文件什么时候加载</p><p>bootstrap.properties</p><p>application.properties</p><p>问题：bootstrap和application什么时候加载，优先级？为什么要增加bootstrap</p><h4 id="配置实时更新" tabindex="-1"><a class="header-anchor" href="#配置实时更新"><span>配置实时更新</span></a></h4><p>nacos配置项添加refresh-enable</p><p>在需要配置的类中添加refreshScope注解</p><p>数据库配置信息如果发生变更，你得到的配置值是实时更新的，但是数据库操作会失败、因为他的jdbc连接类以及完成创建，所以即使配置发生变化，因为类以及创建完成，所以无法变更，所以数据库访问还是根据之前的配置来的</p><p>因此数据库信息更改需要重新启动服务</p><h4 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h4><p>问题：有些配置是通用的，有些配置是独特的，是某个微服务特有的</p><p>因此有以下解决方法</p><p>配置有分三种：主配置、拓展配置、共享配置</p><h4 id="主配置-在配置文件中直接使用name设置配置文件名的" tabindex="-1"><a class="header-anchor" href="#主配置-在配置文件中直接使用name设置配置文件名的"><span>主配置：在配置文件中直接使用name设置配置文件名的</span></a></h4><p>其他配置都必须带上.yml后缀</p><h4 id="拓展配置" tabindex="-1"><a class="header-anchor" href="#拓展配置"><span>拓展配置：</span></a></h4><h4 id="共享配置" tabindex="-1"><a class="header-anchor" href="#共享配置"><span>共享配置：</span></a></h4><p>面试：微服务组件有哪些：</p><p>什么时候使用微服务架构</p><p>微服务有什么优缺点</p><p>nacos如何知道哪些服务是可用的哪些是不可用的（通过心跳机制）</p><p>nacos的配置有几种，他们的优先级？</p><p>nginx负载均衡的策略与方式</p><p>nacos配置实时发生变化 使用发布者订阅者模式</p><p>当nacos配置发生变化时，他会查询有哪些微服务订阅这个配置文件，然后通知他，微服务随后拉取更新的配置文件</p><p><code>24种设计模式</code></p><h4 id="常见的设计模式-介绍其中的运用地点-特别是框架中的设计模式" tabindex="-1"><a class="header-anchor" href="#常见的设计模式-介绍其中的运用地点-特别是框架中的设计模式"><span>常见的设计模式：介绍其中的运用地点（特别是框架中的设计模式）</span></a></h4><p>生产者-消费者模式</p><h5 id="创建型模式" tabindex="-1"><a class="header-anchor" href="#创建型模式"><span>创建型模式：</span></a></h5><p>单例模式<br> 原型模式<br> 简单工厂模式<br> 工厂方法模式<br> 抽象工厂模式<br> 建造者模式</p><h5 id="结构型模式" tabindex="-1"><a class="header-anchor" href="#结构型模式"><span>结构型模式：</span></a></h5><p>代理模式<br> 适配器模式<br> 桥接模式<br> 装饰器模式<br> 外观模式<br> 享元模式<br> 组合模式</p><h5 id="行为型模式" tabindex="-1"><a class="header-anchor" href="#行为型模式"><span>行为型模式：</span></a></h5><p>模板方法模式<br> 策略模式<br> 命令模式<br> 责任链模式<br> 状态模式<br> 观察者模式<br> 中介者模式<br> 迭代器模式<br> 访问者模式<br> 备忘录模式<br> 解析器模式</p><h2 id="l8-nacos配置中心-后续、-mq" tabindex="-1"><a class="header-anchor" href="#l8-nacos配置中心-后续、-mq"><span>L8 nacos配置中心 后续、 MQ</span></a></h2><p>思考题</p><p>springboot内核启动前加载：加载bootstrap.yml</p><p>内核启动后加载：application.yml</p><p>写在不同的文件的原因，有些配置需要在内核启动前拿到，否则会出现异常，因此需要在内核启动前先去处理</p><p>三种配置的优先级：</p><p>同时在三种配置中设定相同的值，在程序中打印，即可知道优先级</p><p>优先级：主配置》拓展配置》共享配置</p><p>拓展配置和共享配置实时更新需要在下面增加配置项refresh： true 记得在控制器加refreshScope注解</p><h3 id="mq消息队列" tabindex="-1"><a class="header-anchor" href="#mq消息队列"><span>MQ消息队列</span></a></h3><p>为什么要使用：</p><p>使用场景</p><p>微服务体量大，系统反馈时间较长</p><p>串行开发 ==》并行</p><p>1、注册 ==》写入消息队列 ==》 再去发邮件，发短信通知</p><p>2、流量削峰：嘀嘀打车支付、支付排队</p><p>支付请求信息存入消息队列</p><p>3、应用解耦：让微服务间关系不太大</p><p>完成注册后发送一条消息到消息队列，消息队列发送请求到其他的微服务完成服务</p><h3 id="mq的种类-rocketmq、rabbitmq、activemq" tabindex="-1"><a class="header-anchor" href="#mq的种类-rocketmq、rabbitmq、activemq"><span>MQ的种类：RocketMQ、RabbitMQ、ActiveMQ</span></a></h3><p>区别在于：？</p><p>使用场景：秒杀</p><p>NameSRV：NameServer：管理broker的，可做集群的服务器</p><p>Broker：管理消息主题/转发消息的服务器</p><p>Topic：主题/分类</p><p>Massage：消息</p><p>先启动nameserver再启动broker</p><p>安装rocketMQ：</p><p>linux环境变量配置/etc/profile</p><p>./mqshutdown namesrv</p><p>生产者：生产消息的，将消息放入队列的</p><p>消费者：消费消息的，将消息拿出队列的</p><p>普通消息，顺序消息，延迟消息</p><p>导入依赖</p><p>配置mq</p><p>测试发送</p><p>雪花算法</p><p>1、商品预热、热点（秒杀）商品， 缓存（redis）存？ 存所有热点商品、商品的规格、库存</p><p>2、下单操作，判断商品是否存在、判断库存够不够、<strong><code>不能重复下单</code></strong>（从缓存解决：判断用户有没有下单、结束）</p><p>3、</p><h2 id="l9" tabindex="-1"><a class="header-anchor" href="#l9"><span>L9</span></a></h2><p>服务多，端口多，不好使用调用</p><p>解决方案：统一对外暴露端口</p><p>如果在nginx上使用，如果新增或者删除要对nginx&#39;配置文件进行修改，还要重启nginx过于繁琐</p><p>使用网关：统一暴露api接口 负载均衡</p><h3 id="网关作用" tabindex="-1"><a class="header-anchor" href="#网关作用"><span>网关作用</span></a></h3><p>统一暴露api接口</p><p>统一鉴权</p><p>限流</p><p>netty框架写的 ==》与传统web技术栈有冲突（springWeb， mvc）不能使用这几个依赖</p><p>导入依赖</p><p>创建配置文件</p><p>将gateway注册到注册中心</p><h3 id="统一分布式鉴权" tabindex="-1"><a class="header-anchor" href="#统一分布式鉴权"><span>统一分布式鉴权</span></a></h3><p>之前：拦截器实现登录鉴权</p><p>登录成功生成token，存入redis，并设置有效时间</p><p>把token返回前端，存入cookie</p><p>每次请求 请求头携带token</p><p>拦截器判断是否在白名单内</p><p>拦截后获取请求头的token进行绑定</p><p>有没有token，有没有过期</p><p>没过期延迟token时间</p><p>放行</p><p>之后使用过滤器鉴权：</p><p>登录成功生成token，存入redis，并设置有效时间</p><p>把token返回前端，存入cookie</p><p>每次请求 请求头携带token</p><p><code>判断是否在过滤器白名单内</code></p><p><em><code>进入过滤器获取请求头的token进行绑定</code></em></p><p>有没有token，有没有过期</p><p>没过期延迟token时间</p><p>放行</p><h2 id="l10-限流、熔断" tabindex="-1"><a class="header-anchor" href="#l10-限流、熔断"><span>L10 限流、熔断</span></a></h2><h3 id="复习" tabindex="-1"><a class="header-anchor" href="#复习"><span>复习</span></a></h3><p>springboot 约定大于配置</p><p>nginx 负载均衡的六种策略 动静分离 反向代理</p><p>redis 高速缓存数据库，存入一些高热度的库，减轻数据库压力、验证码的统一校验（作为中间件使用）</p><p>redis 的五种数据类型，雪崩，击穿，穿透，登录校验</p><p>单体 ==&gt; 分布式架构 拆分原则：单一原则：一个服务只做一个事情</p><p>注册中心：心跳机制，服务间的通信：restTemplate、openFeign、feign、HTTPClient</p><p>配置中心：主配置（这个微服务必须使用的），共享配置（多服务需要相同的配置），扩展配置（做一些特定功能需要的配置）</p><p>mq消息队列：流量的削峰 业务的解构，使用普通消息、延时消息</p><p>网关：对外统一暴露api接口、分布式登录鉴权</p><h3 id="限流" tabindex="-1"><a class="header-anchor" href="#限流"><span>限流</span></a></h3><p>第一种方案：gateway + redis 令牌桶</p><p>实现：导依赖、配置、创建配置规则（在网关配置）</p><p>压力测试使用Jmeter</p><p>第二种方案：sentinel</p><h3 id="熔断" tabindex="-1"><a class="header-anchor" href="#熔断"><span>熔断</span></a></h3><p>1、熔断hystrix + openFeign</p><p>导依赖 需要三个依赖：hystrix、openFeign、loadbalancer</p><p>配置</p><p>启动类开启hystrix</p><p>2、sentinel</p><h2 id="l11-sentinel" tabindex="-1"><a class="header-anchor" href="#l11-sentinel"><span>L11 sentinel</span></a></h2><p>使用注意事项：sentinel的客户端要和微服务所在的服务器一致，否则sentinel启动会一片空白</p><p>服务器不同的话需要设置相同时区</p><p>使用时需要整合sentinel</p><p>导入依赖</p><p>添加配置</p><h3 id="限流-1" tabindex="-1"><a class="header-anchor" href="#限流-1"><span>限流</span></a></h3><p>资源名：为接口，参数，url等，大部分情况下使用url</p><p>针对来源：默认default为所有来源</p><p>阈值类型：qps每秒请求数 单机阈值：资源每秒钟请求达到5开始限制，默认拒绝请求</p><h4 id="流控模式" tabindex="-1"><a class="header-anchor" href="#流控模式"><span>流控模式：</span></a></h4><p>直接流控</p><p>直接对某个资源进行流控</p><p>关联流控</p><p>在同一个微服务里限制一些服务和特定服务的总并发数（在到达限制的情况下优先让特定服务运行，而其他服务将被拒绝）</p><p>链路流控</p><p>链路追踪，跨微服务、用户服务调用用户微服务</p><p>调用时会有一个入口路径，这边写的是入口微服务的url地址</p><p>比如通过order/create 调用 good 微服务内的create方法，order/query 调用 good 微服务的query方法，入口路径就是前面的order/**</p><p>限制也是限制入口的流量而不是限制调用的另一个微服务的流量</p><p>需要设置feign.sentinel.enable: true 和 spring.cloud.sentinel.web-context-unify: false</p>`,342)),s[2]||(s[2]=i("p",{sentinel:"",控制台地址:""},"spring.cloud.sentinel.transport.dashboard:",-1)),s[3]||(s[3]=i("h2",{id:"一些数据库使用例",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#一些数据库使用例"},[i("span",null,"一些数据库使用例")])],-1)),s[4]||(s[4]=i("figure",null,[i("img",{src:"//store.s1r0ko.top/images/cy_s4_p7_ver1.png",alt:"image-20250312160139284",tabindex:"0",loading:"lazy"}),i("figcaption",null,"image-20250312160139284")],-1))])}const g=n(t,[["render",h]]),c=JSON.parse('{"path":"/art/learning/coding/cy/stage_4/Lessen.html","title":"四阶段笔记","lang":"zh-CN","frontmatter":{"title":"四阶段笔记","date":"2025-05-31T00:00:00.000Z","icon":"pen-to-square","order":1,"category":["代码","学习","四阶段"],"tag":["springboot","nginx","redis","springcloud","nacos","RocketMQ"],"description":"学习大纲 springboot nginx redis 微服务 —— springcloud 案例：京东秒杀平台 四阶段需要解决的问题：高并发、高可用、高性能 三阶段问题：依赖太多，配置文件太多 解决方法：使用springboot L1 springboot 启动器 —— spring-boot-starter-xxx 默认配置 springboot思...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"四阶段笔记\\",\\"image\\":[\\"//store.s1r0ko.top/images/cy_s4_p1_ver1.png\\",\\"//store.s1r0ko.top/images/cy_s4_p2_ver1.png\\",\\"//store.s1r0ko.top/images/cy_s4_p3_ver1.png\\",\\"//store.s1r0ko.top/images/cy_s4_p4_ver1.png\\",\\"//store.s1r0ko.top/images/cy_s4_p5_ver1.png\\",\\"//store.s1r0ko.top/images/cy_s4_p6_ver1.png\\",\\"//store.s1r0ko.top/images/cy_s4_p7_ver1.png\\"],\\"datePublished\\":\\"2025-05-31T00:00:00.000Z\\",\\"dateModified\\":\\"2025-06-06T01:26:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"KurimulaAiri\\",\\"url\\":\\"https://github.com/KurimulaAiri\\"}]}"],["meta",{"property":"og:url","content":"https://md.s1r0ko.top/art/learning/coding/cy/stage_4/Lessen.html"}],["meta",{"property":"og:site_name","content":"博客与资料库"}],["meta",{"property":"og:title","content":"四阶段笔记"}],["meta",{"property":"og:description","content":"学习大纲 springboot nginx redis 微服务 —— springcloud 案例：京东秒杀平台 四阶段需要解决的问题：高并发、高可用、高性能 三阶段问题：依赖太多，配置文件太多 解决方法：使用springboot L1 springboot 启动器 —— spring-boot-starter-xxx 默认配置 springboot思..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"//store.s1r0ko.top/images/cy_s4_p1_ver1.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-06T01:26:12.000Z"}],["meta",{"property":"article:tag","content":"RocketMQ"}],["meta",{"property":"article:tag","content":"nacos"}],["meta",{"property":"article:tag","content":"springcloud"}],["meta",{"property":"article:tag","content":"redis"}],["meta",{"property":"article:tag","content":"nginx"}],["meta",{"property":"article:tag","content":"springboot"}],["meta",{"property":"article:published_time","content":"2025-05-31T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-06T01:26:12.000Z"}]]},"git":{"createdTime":1748707952000,"updatedTime":1749173172000,"contributors":[{"name":"KurimulaAiri","username":"KurimulaAiri","email":"1095370199@qq.com","commits":4,"url":"https://github.com/KurimulaAiri"}]},"readingTime":{"minutes":16.62,"words":4985},"filePathRelative":"art/learning/coding/cy/stage_4/Lessen.md","localizedDate":"2025年5月31日","excerpt":"<h2>学习大纲</h2>\\n<ul>\\n<li>\\n<p>springboot</p>\\n</li>\\n<li>\\n<p>nginx</p>\\n</li>\\n<li>\\n<p>redis</p>\\n</li>\\n<li>\\n<p>微服务 —— springcloud</p>\\n</li>\\n</ul>\\n<p>案例：京东秒杀平台</p>\\n<p>四阶段需要解决的问题：<strong>高并发、高可用、高性能</strong></p>\\n<p>三阶段问题：依赖太多，配置文件太多</p>\\n<p>解决方法：使用springboot</p>\\n<h2>L1 springboot</h2>\\n<p>启动器 —— spring-boot-starter-xxx 默认配置</p>","autoDesc":true}');export{g as comp,c as data};
