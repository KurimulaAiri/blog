import{_ as e,c as r,d as n,o as a}from"./app-D9rJoEQg.js";const s={};function o(p,t){return a(),r("div",null,t[0]||(t[0]=[n('<p>主要考察各类型的操作系统想要<strong id="red-msg">解决什么问题</strong>，以及各自的<strong id="red-msg">优缺点</strong></p><h2 id="手工操作阶段" tabindex="-1"><a class="header-anchor" href="#手工操作阶段"><span>手工操作阶段 👍</span></a></h2><p>在该阶段，程序员使用纸带穿孔卡片，将程序和数据输入到计算机中，然后手动操作计算机运行程序。</p><p>计算机运行完毕后，程序员手动取出计算机打孔的纸带，将程序和数据取出。</p><p>该阶段存在的缺点：用户独占全机、人机速度矛盾导致资源利用率极低</p><h2 id="批处理阶段" tabindex="-1"><a class="header-anchor" href="#批处理阶段"><span>批处理阶段 👍</span></a></h2><h3 id="单道批处理系统" tabindex="-1"><a class="header-anchor" href="#单道批处理系统"><span>单道批处理系统 👍</span></a></h3><p>引入<strong>脱机输入 / 输出技术</strong>（用外围机 + 磁带完成），并由<strong>监督程序</strong>负责控制作业的输入、输出</p><p>程序员将多个作业提交给<strong>监督程序</strong>，监督程序将这些作业写入磁带，磁带交由计算机执行，执行完毕后将结果输出到另一个磁带</p><p>主要优点：缓解了一定程度的人机速度矛盾，资源利用率有所提升</p><p>主要缺点：<strong>内存中仅能有一道程序运行</strong>，只有该程序运行结束之后才能调入下一道程序。 <strong>CPU 有大量的时间是在空闲等待 I/O 完成</strong>。资源利用率依然很低</p><h3 id="多道批处理系统" tabindex="-1"><a class="header-anchor" href="#多道批处理系统"><span>多道批处理系统 👍</span></a></h3><p>操作系统正式诞生，用于支持多道程序<strong>并发</strong>运行</p><p>每次往内存中读入多道程序，输出多道结果到内存，但是并不是所有应用同时运行，而是输入、计算、输出设备空闲时，就及时使用空闲设备进行处理</p><p>主要优点：多道程序<strong>并发</strong>执行，<strong>共享</strong>计算机资源。<strong>资源利用率大幅提升</strong>，CPU和其他资源更能保持“忙碌”状态，系统吞吐量增大</p><p>主要缺点：用户响应时间长，<strong>没有人机交互功能</strong>（用户提交自己的作业之后就只能等待计算机处理完成，中间不能控制自己的作业执行。 eg ：无法调试程序 / 无法在程序运行过程中输入一些参数）</p><h2 id="分时操作系统" tabindex="-1"><a class="header-anchor" href="#分时操作系统"><span>分时操作系统 👍</span></a></h2><p>分时操作系统：计算机以<strong>时间片</strong>为单位<strong>轮流为各个用户 / 作业服务</strong>，各个用户可通过终端与计算机进行交互</p><p>主要优点：用户请求可以被即时响应，<strong>解决了人机交互问题</strong>。允许多个用户同时使用一台计算机，并且用户对计算机的操作相互独立，感受不到别人的存在。</p><p>主要缺点：<strong>不能优先处理一些紧急任务</strong>。操作系统对各个用户 / 作业都是完全公平的，循环地为每个用户 / 作业服务一个时间片，不区分任务的紧急性。</p><h2 id="实时操作系统" tabindex="-1"><a class="header-anchor" href="#实时操作系统"><span>实时操作系统 👍</span></a></h2><p>在实时操作系统的控制下，计算机系统接收到外部信号后及时进行处理，并且要<strong>在严格的时限内处理完事件</strong>。实时操作系统的主要特点是<strong>及时性和可靠性</strong></p><p>主要优点:能够优先响应一些紧急任务，某些紧急任务不需时间片排队</p><p>实时操作系统分为<strong>硬实时操作系统</strong>和<strong>软实时操作系统</strong></p><ul><li><p>硬实时操作系统：必须在严格的时限内处理完事件（如导弹控制系统、自动驾驶系统等）</p></li><li><p>软实时操作系统：可以不严格地满足时限要求（偶尔违法时间规定，但是不会影响系统的正常运行）</p></li></ul><h2 id="网络操作系统" tabindex="-1"><a class="header-anchor" href="#网络操作系统"><span>网络操作系统</span></a></h2><p>是伴随着计算机网络的发展而诞生的，能把网络中各个计算机有机地结合起来，<strong>实现数据传送等功能，实现网络中各种资源的共享（如文件共享）和各台计算机之间的通信</strong>。（如： WindowsNT 就是一种典型的网络操作系统，网站服务器就可以使用）</p><h2 id="分布式操作系统" tabindex="-1"><a class="header-anchor" href="#分布式操作系统"><span>分布式操作系统</span></a></h2><p>主要特点是<strong>分布性和并行性</strong>。系统中的各台计算机地位相同，<strong>任何工作都可以分布在这些计算机上，由它们并行、协同完成这个任务</strong></p><h2 id="个人计算机操作系统" tabindex="-1"><a class="header-anchor" href="#个人计算机操作系统"><span>个人计算机操作系统</span></a></h2><p>如 Windows XP 、 MacOS ，方便个人使用</p>',31)]))}const g=e(s,[["render",o]]),d=JSON.parse('{"path":"/art/learning/master/major/OperatingSystem/DevelopmentAndClassificationOfOperatingSystems.html","title":"操作系统的发展和分类","lang":"zh-CN","frontmatter":{"title":"操作系统的发展和分类","date":"2025-08-15T00:00:00.000Z","icon":"gears","order":3,"category":["408","操作系统","考研"],"description":"主要考察各类型的操作系统想要解决什么问题，以及各自的优缺点 手工操作阶段 👍 在该阶段，程序员使用纸带穿孔卡片，将程序和数据输入到计算机中，然后手动操作计算机运行程序。 计算机运行完毕后，程序员手动取出计算机打孔的纸带，将程序和数据取出。 该阶段存在的缺点：用户独占全机、人机速度矛盾导致资源利用率极低 批处理阶段 👍 单道批处理系统 👍 引入脱机...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"操作系统的发展和分类\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-08-15T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-15T10:25:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"KurimulaAiri\\",\\"url\\":\\"https://github.com/KurimulaAiri\\"}]}"],["meta",{"property":"og:url","content":"https://md.s1r0ko.top/art/learning/master/major/OperatingSystem/DevelopmentAndClassificationOfOperatingSystems.html"}],["meta",{"property":"og:site_name","content":"博客与资料库"}],["meta",{"property":"og:title","content":"操作系统的发展和分类"}],["meta",{"property":"og:description","content":"主要考察各类型的操作系统想要解决什么问题，以及各自的优缺点 手工操作阶段 👍 在该阶段，程序员使用纸带穿孔卡片，将程序和数据输入到计算机中，然后手动操作计算机运行程序。 计算机运行完毕后，程序员手动取出计算机打孔的纸带，将程序和数据取出。 该阶段存在的缺点：用户独占全机、人机速度矛盾导致资源利用率极低 批处理阶段 👍 单道批处理系统 👍 引入脱机..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-15T10:25:25.000Z"}],["meta",{"property":"article:published_time","content":"2025-08-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-15T10:25:25.000Z"}]]},"git":{"createdTime":1755253525000,"updatedTime":1755253525000,"contributors":[{"name":"KurimulaAiri","username":"KurimulaAiri","email":"1095370199@qq.com","commits":1,"url":"https://github.com/KurimulaAiri"}],"changelog":[{"hash":"b26110cb15a643a61d85029ec69153d6ab7770b9","time":1755253525000,"email":"1095370199@qq.com","author":"KurimulaAiri","message":"新增多篇"}]},"readingTime":{"minutes":3.77,"words":1130},"filePathRelative":"art/learning/master/major/OperatingSystem/DevelopmentAndClassificationOfOperatingSystems.md","excerpt":"<p>主要考察各类型的操作系统想要<strong id=\\"red-msg\\">解决什么问题</strong>，以及各自的<strong id=\\"red-msg\\">优缺点</strong></p>\\n<h2>手工操作阶段 👍</h2>\\n<p>在该阶段，程序员使用纸带穿孔卡片，将程序和数据输入到计算机中，然后手动操作计算机运行程序。</p>\\n<p>计算机运行完毕后，程序员手动取出计算机打孔的纸带，将程序和数据取出。</p>\\n<p>该阶段存在的缺点：用户独占全机、人机速度矛盾导致资源利用率极低</p>\\n<h2>批处理阶段 👍</h2>\\n<h3>单道批处理系统 👍</h3>\\n<p>引入<strong>脱机输入 / 输出技术</strong>（用外围机 + 磁带完成），并由<strong>监督程序</strong>负责控制作业的输入、输出</p>","autoDesc":true}');export{g as comp,d as data};
